{"version":3,"file":"js/app.eaab1920.js","mappings":"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","sources":["webpack://ton-token-bridge/./src/App.vue?1cba","webpack://ton-token-bridge/./src/components/Layout/index.vue?cb55","webpack://ton-token-bridge/./src/components/Alert/index.vue?a547","webpack://ton-token-bridge/./src/components/Alert/index.vue?c817","webpack://ton-token-bridge/./src/components/Alert/index.vue","webpack://ton-token-bridge/./src/components/Layout/index.vue?fe81","webpack://ton-token-bridge/./src/components/Layout/index.vue","webpack://ton-token-bridge/./src/App.vue?847a","webpack://ton-token-bridge/./src/App.vue","webpack://ton-token-bridge/./src/locales/en.json","webpack://ton-token-bridge/./src/locales/ru.json","webpack://ton-token-bridge/./src/i18n.ts","webpack://ton-token-bridge/./src/views/BridgePage/index.vue?fd2c","webpack://ton-token-bridge/./src/ton-bridge-lib/BridgeJettonUtils.ts","webpack://ton-token-bridge/./src/components/BridgeProcessor/index.vue?8b4b","webpack://ton-token-bridge/./src/api/tonWallet.ts","webpack://ton-token-bridge/./src/utils/index.ts","webpack://ton-token-bridge/./src/ton-bridge-lib/BridgeTonUtils.ts","webpack://ton-token-bridge/./src/ton-bridge-lib/BridgeCollector.ts","webpack://ton-token-bridge/./src/ton-bridge-lib/BridgeCommon.ts","webpack://ton-token-bridge/./src/utils/services/Bridge.contract.ts","webpack://ton-token-bridge/./src/utils/services/ERC20.contract.ts","webpack://ton-token-bridge/./src/ton-bridge-lib/BridgeEvmUtils.ts","webpack://ton-token-bridge/./src/ton-bridge-lib/ToncoinBridge.ts","webpack://ton-token-bridge/./src/ton-bridge-lib/TokenBridge.ts","webpack://ton-token-bridge/./src/ton-bridge-lib/BridgeMultisig.ts","webpack://ton-token-bridge/./src/components/BridgeProcessor/index.vue?f8df","webpack://ton-token-bridge/./src/components/BridgeProcessor/index.vue","webpack://ton-token-bridge/./src/components/CustomInput/index.vue?588b","webpack://ton-token-bridge/./src/components/CustomInput/index.vue?ab6c","webpack://ton-token-bridge/./src/components/CustomInput/index.vue","webpack://ton-token-bridge/./src/components/Footer/index.vue?63c8","webpack://ton-token-bridge/./src/components/Footer/index.vue?c866","webpack://ton-token-bridge/./src/components/Footer/index.vue","webpack://ton-token-bridge/./src/components/Header/index.vue?1ea7","webpack://ton-token-bridge/./src/components/Header/index.vue?cfa2","webpack://ton-token-bridge/./src/components/Header/index.vue","webpack://ton-token-bridge/./src/components/WalletsPopup/index.vue?6d3f","webpack://ton-token-bridge/./src/components/WalletsPopup/index.vue?6fd6","webpack://ton-token-bridge/./src/components/WalletsPopup/index.vue","webpack://ton-token-bridge/./src/views/BridgePage/index.vue?d159","webpack://ton-token-bridge/./src/views/BridgePage/index.vue","webpack://ton-token-bridge/./src/router/index.ts","webpack://ton-token-bridge/./src/store/index.ts","webpack://ton-token-bridge/./src/main.ts","webpack://ton-token-bridge/./src/utils/constants.ts","webpack://ton-token-bridge/./src/utils/helpers.ts","webpack://ton-token-bridge/./src/utils/providers/ lazy ^\\.\\/.*\\/index$ namespace object","webpack://ton-token-bridge/webpack/bootstrap","webpack://ton-token-bridge/webpack/runtime/amd options","webpack://ton-token-bridge/webpack/runtime/chunk loaded","webpack://ton-token-bridge/webpack/runtime/compat get default export","webpack://ton-token-bridge/webpack/runtime/define property getters","webpack://ton-token-bridge/webpack/runtime/ensure chunk","webpack://ton-token-bridge/webpack/runtime/get javascript chunk filename","webpack://ton-token-bridge/webpack/runtime/get mini-css chunk filename","webpack://ton-token-bridge/webpack/runtime/global","webpack://ton-token-bridge/webpack/runtime/hasOwnProperty shorthand","webpack://ton-token-bridge/webpack/runtime/load script","webpack://ton-token-bridge/webpack/runtime/make namespace object","webpack://ton-token-bridge/webpack/runtime/node module decorator","webpack://ton-token-bridge/webpack/runtime/publicPath","webpack://ton-token-bridge/webpack/runtime/jsonp chunk loading","webpack://ton-token-bridge/webpack/startup"],"sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n  const _component_layout = _resolveComponent(\"layout\")!\n\n  return (_openBlock(), _createBlock(_component_layout, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_router_view)\n    ]),\n    _: 1\n  }))\n}","import { renderSlot as _renderSlot, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7043d382\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"LayoutDefault\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Alert = _resolveComponent(\"Alert\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _renderSlot(_ctx.$slots, \"default\", {}, undefined, true),\n    (_ctx.alert)\n      ? (_openBlock(), _createBlock(_component_Alert, {\n          key: 0,\n          title: _ctx.alert.title,\n          message: _ctx.alert.message,\n          buttonLabel: _ctx.alert.buttonLabel,\n          onClose: _cache[0] || (_cache[0] = ($event: any) => (_ctx.setAlert(null)))\n        }, null, 8, [\"title\", \"message\", \"buttonLabel\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Transition as _Transition, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-01a3d5d7\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"Alert\" }\nconst _hoisted_2 = { class: \"Alert-panel\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_Transition, {\n    name: \"AlertTransition\",\n    appear: \"\"\n  }, {\n    default: _withCtx(() => [\n      _createElementVNode(\"aside\", _hoisted_1, [\n        _createElementVNode(\"div\", {\n          class: \"Alert-overlay\",\n          onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.close && _ctx.close(...args)))\n        }),\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"h2\", null, _toDisplayString(_ctx.title), 1),\n          _createElementVNode(\"p\", null, _toDisplayString(_ctx.message), 1),\n          _createElementVNode(\"button\", {\n            onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.close && _ctx.close(...args)))\n          }, _toDisplayString(_ctx.buttonLabel), 1)\n        ])\n      ])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    title: { type: String, required: true },\n    message: { type: String, required: true },\n    buttonLabel: { type: String, required: true },\n  },\n  created() {\n    document.addEventListener(\"keydown\", this.onKeyDown);\n  },\n\n  beforeUnmount() {\n    document.removeEventListener(\"keydown\", this.onKeyDown);\n  },\n\n  methods: {\n    onKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === 27) {\n        this.close();\n      }\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=01a3d5d7&scoped=true&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=01a3d5d7&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-01a3d5d7\"]])\n\nexport default __exports__","\nimport { primaryInput } from \"detect-it\";\nimport { defineComponent } from \"vue\";\nimport { mapGetters, mapMutations } from \"vuex\";\n\nimport Alert from \"@/components/Alert/index.vue\";\n\nexport default defineComponent({\n  name: \"LayoutDefault\",\n\n  components: { Alert },\n  methods: { ...mapMutations([\"setAlert\"]) },\n\n  computed: {\n    ...mapGetters([\"alert\"]),\n  },\n\n  mounted() {\n    // for active/hovers on touch/mouse devices\n    document.documentElement.classList.add(\n      primaryInput === \"touch\" ? \"isTouch\" : \"isPointer\"\n    );\n  },\n\n  watch: {\n    alert: function (newVal) {\n      if (newVal !== null) {\n        this.alert = { ...newVal };\n      }\n    },\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=7043d382&scoped=true&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=7043d382&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7043d382\"]])\n\nexport default __exports__","\nimport { defineComponent } from \"vue\";\n\nimport Layout from \"@/components/Layout/index.vue\";\n\nexport default defineComponent({ components: { Layout } });\n","import { render } from \"./App.vue?vue&type=template&id=112ad411&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export default {\n  \"logoLabel\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Bridge\"])},\n  \"connectWallet\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Connect Wallet\"])},\n  \"testnetMessage\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"This is the testnet version. Dont send real coins!\"])},\n  \"providers\": {\n    \"metamask\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Metamask\"])},\n    \"walletConnect\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"WalletConnect\"])},\n    \"walletLink\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Coinbase Wallet\"])}\n  },\n  \"networks\": {\n    \"ton\": {\n      \"currency\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])},\n      \"transactionCompleted\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON transaction completed successfully\"])},\n      \"transactionSend1\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Please send \"])},\n      \"transactionSend2\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin to the address\"])},\n      \"transactionSendComment\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"with the comment\"])},\n      \"openWallet\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Open Wallet\"])},\n      \"generateQRCode\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Generate QR Code\"])},\n      \"scanQRCode\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"or scan QR code below\"])},\n      \"errors\": {\n        \"invalidAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Not valid TON address\"])}\n      },\n      \"main\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"The Open Network\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"The Open\\nNetwork\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])}\n      },\n      \"test\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON Testnet\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON\\nTestnet\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])}\n      }\n    },\n    \"eth\": {\n      \"currency\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"ETH\"])},\n      \"pageTitle\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON-ETH Bridge\"])},\n      \"gasFee\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Ethereum gas fee ~ \", _interpolate(_named(\"fee\")), \" ETH\"])},\n      \"transactionCompleted\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum transaction completed successfully\"])},\n      \"transactionWait\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Please wait for the Ethereum transaction to be processed\"])},\n      \"transactionSend\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Please send Ethereum transaction in \", _interpolate(_named(\"provider\"))])},\n      \"blocksConfirmations\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Collected \", _interpolate(_named(\"count\")), \" Ethereum block confirmations\"])},\n      \"errors\": {\n        \"invalidAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Not valid ETH address\"])},\n        \"lowBalance\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"You need to have ETH on your wallet to pay for gas in the Ethereum network\"])}\n      },\n      \"main\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum Network\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum\\nNetwork\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"ETH\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN (ERC20)\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN\"])}\n      },\n      \"test\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum Goerli\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum\\nGoerli\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"ETH\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN (ERC20)\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN\"])}\n      }\n    },\n    \"bsc\": {\n      \"currency\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BNB\"])},\n      \"pageTitle\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON-BSC Bridge\"])},\n      \"gasFee\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"BSC gas fee ~ \", _interpolate(_named(\"fee\")), \" BNB\"])},\n      \"transactionCompleted\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC transaction completed successfully\"])},\n      \"transactionWait\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Please wait for the BSC transaction to be processed\"])},\n      \"transactionSend\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Please send BSC transaction in \", _interpolate(_named(\"provider\"))])},\n      \"blocksConfirmations\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Collected \", _interpolate(_named(\"count\")), \" BSC block confirmations\"])},\n      \"errors\": {\n        \"invalidAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Not valid BSC address\"])},\n        \"lowBalance\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"You need to have BNB on your wallet to pay for gas in the BSC network\"])}\n      },\n      \"main\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Binance Smart Chain\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Binance\\nSmart Chain\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN (BEP-20)\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN\"])}\n      },\n      \"test\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC Testnet\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC\\nTestnet\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN (BEP-20)\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN\"])}\n      }\n    }\n  },\n  \"tokenAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Token address\"])},\n  \"sendToken\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Asset\"])},\n  \"amountOfTon\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Amount of \", _interpolate(_named(\"tokenSymbol\"))])},\n  \"addressInputLabel\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Destination address\"])},\n  \"willReceive\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"You will receive \", _interpolate(_named(\"fee\")), \" \", _interpolate(_named(\"coin\"))])},\n  \"bridgeFeeAbove10\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Bridge fee - \", _interpolate(_named(\"fee\")), \" TON\"])},\n  \"bridgeFeeBelow10\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Bridge fee - 5 TON + 0.25% of amount\"])},\n  \"sourceCode\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Source Code\"])},\n  \"howItWorks\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"How it works\"])},\n  \"documentation\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Documentation\"])},\n  \"transferHistory\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"History\"])},\n  \"disconnectWallet\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Disconnect\"])},\n  \"transfer\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Transfer\"])},\n  \"getToncoin\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Get \", _interpolate(_named(\"coin\"))])},\n  \"done\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Done\"])},\n  \"cancel\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Cancel\"])},\n  \"blocksConfirmationsCollected\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"The confirmations of the blocks are collected\"])},\n  \"blocksConfirmationsWaiting\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Wait a bit for the blocks confirmations\"])},\n  \"oraclesConfirmations\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Collected \", _interpolate(_named(\"count\")), \" confirmations of oracles\"])},\n  \"oraclesConfirmationsCollected\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"The confirmations of the oracles are collected\"])},\n  \"oraclesConfirmationsWaiting\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Wait a bit for the oracles to confirm the transfer\"])},\n  \"getCoinsByProvider\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Get \", _interpolate(_named(\"toCoin\")), \"s by \", _interpolate(_named(\"provider\"))])},\n  \"coinsSent\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([_interpolate(_named(\"toCoin\")), \"s have been sent to your address\"])},\n  \"getCoins\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Get \", _interpolate(_named(\"toCoin\")), \"s in \", _interpolate(_named(\"toNetwork\"))])},\n  \"errors\": {\n    \"alertTitleError\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Error\"])},\n    \"alertButtonClose\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Close\"])},\n    \"notValidAmount\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Amount is not valid number\"])},\n    \"amountBelow10\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Amount must be at least 10 TON\"])},\n    \"needPersonalAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Please enter YOUR address to receive\"])},\n    \"toncoinBalance\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"You have only \", _interpolate(_named(\"balance\")), \" \", _interpolate(_named(\"coin\"))])},\n    \"installMetamask\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Please install MetaMask\"])},\n    \"wrongProviderNetwork\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Set chain to \", _interpolate(_named(\"network\")), \" in \", _interpolate(_named(\"provider\"))])},\n    \"cantGetAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Can't get account address\"])},\n    \"providerIsDisconnected\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([_interpolate(_named(\"provider\")), \" is disconnected\"])}\n  },\n  \"history\": {\n    \"title\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Recent history\"])},\n    \"recentHistory\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Recent history\"])},\n    \"age\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Date\"])},\n    \"amountFrom\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Amount / From (Network)\"])},\n    \"amountTo\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Amount Received / To (Network)\"])},\n    \"fee\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Gas / Bridge Fee\"])},\n    \"status\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Status\"])},\n    \"completed\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"completed\"])},\n    \"getToncoin\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Get \", _interpolate(_named(\"coin\"))])},\n    \"connect\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Connect\"])},\n    \"oracles\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([_interpolate(_named(\"count\")), \" of oracles\"])},\n    \"notFound\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"No transfers found\"])}\n  }\n}","export default {\n  \"logoLabel\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Бридж\"])},\n  \"connectWallet\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Подключить Кошелек\"])},\n  \"testnetMessage\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Работа в режиме тестовой сети. Не отправляйте реальные монеты!\"])},\n  \"providers\": {\n    \"metamask\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Metamask\"])},\n    \"walletConnect\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"WalletConnect\"])},\n    \"walletLink\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Coinbase Wallet\"])}\n  },\n  \"networks\": {\n    \"ton\": {\n      \"currency\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])},\n      \"transactionCompleted\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Транзакция TON успешно завершена\"])},\n      \"transactionSend1\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Пожалуйста, отправьте \"])},\n      \"transactionSend2\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin на адрес\"])},\n      \"transactionSendComment\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"с комментарием\"])},\n      \"openWallet\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Открыть Кошелек\"])},\n      \"generateQRCode\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Сгенерировать QR-код\"])},\n      \"scanQRCode\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"или отсканируйте QR-код ниже\"])},\n      \"errors\": {\n        \"invalidAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Не валидный TON адрес\"])}\n      },\n      \"main\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"The Open Network\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"The Open\\nNetwork\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])}\n      },\n      \"test\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON Testnet\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON\\nTestnet\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])}\n      }\n    },\n    \"eth\": {\n      \"currency\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"ETH\"])},\n      \"pageTitle\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON-ETH Бридж\"])},\n      \"gasFee\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Комиссия Ethereum (газ) ~ \", _interpolate(_named(\"fee\")), \" ETH\"])},\n      \"transactionCompleted\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Транзакция Ethereum успешно завершена\"])},\n      \"transactionWait\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Пожалуйста, подождите пока обрабатывается транзакция Ethereum\"])},\n      \"transactionSend\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Пожалуйста, подтвердите Ethereum транзакцию в \", _interpolate(_named(\"provider\"))])},\n      \"blocksConfirmations\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Собрано \", _interpolate(_named(\"count\")), \" подтверждений блоков Ethereum\"])},\n      \"errors\": {\n        \"invalidAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Не валидный ETH адрес\"])},\n        \"lowBalance\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"У вас должны быть ETH в кошельке чтобы оплатить газ в сети Ethereum\"])}\n      },\n      \"main\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum Network\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum\\nNetwork\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"ETH\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN (ERC20)\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN\"])}\n      },\n      \"test\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum Goerli\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum\\nGoerli\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"ETH\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN (ERC20)\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN\"])}\n      }\n    },\n    \"bsc\": {\n      \"currency\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BNB\"])},\n      \"pageTitle\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON-BSC Бридж\"])},\n      \"gasFee\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Комиссия BSC (газ) ~ \", _interpolate(_named(\"fee\")), \" BNB\"])},\n      \"transactionCompleted\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Транзакция BSC успешно завершена\"])},\n      \"transactionWait\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Пожалуйста, подождите пока обрабатывается транзакция BSC\"])},\n      \"transactionSend\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Пожалуйста, подтвердите BSC транзакцию в \", _interpolate(_named(\"provider\"))])},\n      \"blocksConfirmations\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Собрано \", _interpolate(_named(\"count\")), \" подтверждений блоков BSC\"])},\n      \"errors\": {\n        \"invalidAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Не валидный BSC адрес\"])},\n        \"lowBalance\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"У вас должны быть BNB в кошельке чтобы оплатить газ в сети BSC\"])}\n      },\n      \"main\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Binance Smart Chain\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Binance\\nSmart Chain\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN (BEP-20)\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN\"])}\n      },\n      \"test\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC Testnet\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC\\nTestnet\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN (BEP-20)\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN\"])}\n      }\n    }\n  },\n  \"sendToken\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Токен\"])},\n  \"amountOfTon\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Количество \", _interpolate(_named(\"tokenSymbol\"))])},\n  \"tokenAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Адрес токена\"])},\n  \"addressInputLabel\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Адрес получения\"])},\n  \"willReceive\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Вы получите \", _interpolate(_named(\"fee\")), \" \", _interpolate(_named(\"coin\"))])},\n  \"bridgeFeeAbove10\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Комиссия бриджа - \", _interpolate(_named(\"fee\")), \" TON\"])},\n  \"bridgeFeeBelow10\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Комиссия бриджа - 5 TON + 0.25% of amount\"])},\n  \"sourceCode\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Исходный код\"])},\n  \"howItWorks\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Как это работает\"])},\n  \"documentation\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Документация\"])},\n  \"transferHistory\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"История\"])},\n  \"disconnectWallet\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Отключить\"])},\n  \"transfer\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Перевод\"])},\n  \"getToncoin\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Получить \", _interpolate(_named(\"coin\"))])},\n  \"done\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Готово\"])},\n  \"cancel\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Отменить\"])},\n  \"blocksConfirmationsCollected\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Собраны подтверждения блоков\"])},\n  \"blocksConfirmationsWaiting\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Пожалуйста, подождите подтверждения блоков\"])},\n  \"oraclesConfirmations\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Собрано \", _interpolate(_named(\"count\")), \" подтверждений оракулов\"])},\n  \"oraclesConfirmationsCollected\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Собраны подтверждения оракулов\"])},\n  \"oraclesConfirmationsWaiting\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Пожалуйста, подождите подтверждения оракулов\"])},\n  \"getCoinsByProvider\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Получите \", _interpolate(_named(\"toCoin\")), \" в \", _interpolate(_named(\"provider\"))])},\n  \"coinsSent\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([_interpolate(_named(\"toCoin\")), \" были отправлены на ваш адрес\"])},\n  \"getCoins\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Получите \", _interpolate(_named(\"toCoin\")), \" в \", _interpolate(_named(\"toNetwork\"))])},\n  \"errors\": {\n    \"alertTitleError\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ошибка\"])},\n    \"alertButtonClose\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Закрыть\"])},\n    \"notValidAmount\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Введено не валидное число\"])},\n    \"amountBelow10\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Количество должно быть не менее 10 TON\"])},\n    \"needPersonalAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Пожалуйста, введите СВОЙ адрес для получения\"])},\n    \"toncoinBalance\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"У вас всего \", _interpolate(_named(\"balance\")), \" \", _interpolate(_named(\"coin\"))])},\n    \"installMetamask\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Пожалуйста, установите MetaMask\"])},\n    \"wrongProviderNetwork\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Переключите сеть на \", _interpolate(_named(\"network\")), \" в \", _interpolate(_named(\"provider\"))])},\n    \"cantGetAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Не могу получить адрес аккаунта\"])},\n    \"providerIsDisconnected\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([_interpolate(_named(\"provider\")), \" отключился\"])}\n  },\n  \"history\": {\n    \"title\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"История\"])},\n    \"recentHistory\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"История\"])},\n    \"age\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Дата\"])},\n    \"amountFrom\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Количество / Откуда (сеть)\"])},\n    \"amountTo\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Получено / Куда (сеть)\"])},\n    \"fee\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Газ / Бридж комиссии\"])},\n    \"status\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Статус\"])},\n    \"completed\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"завершено\"])},\n    \"getToncoin\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Получить \", _interpolate(_named(\"coin\"))])},\n    \"connect\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Подключить\"])},\n    \"oracles\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([_interpolate(_named(\"count\")), \" оракулов\"])},\n    \"notFound\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Переводы не найдены\"])}\n  }\n}","import { createI18n } from \"vue-i18n\";\n\nimport en from \"./locales/en.json\";\nimport ru from \"./locales/ru.json\";\n\nexport default createI18n({\n  legacy: false,\n  locale:\n    navigator?.language?.split(\"-\")?.[0] ||\n    process.env.VUE_APP_I18N_LOCALE ||\n    \"en\",\n  fallbackLocale: process.env.VUE_APP_I18N_FALLBACK_LOCALE || \"en\",\n  messages: { en, ru },\n});\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, vShow as _vShow, withDirectives as _withDirectives, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-bd608f96\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"Bridge\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, null, -1))\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"Bridge-imgAspect\" }, null, -1))\nconst _hoisted_4 = [\n  _hoisted_3\n]\nconst _hoisted_5 = { class: \"Bridge-form\" }\nconst _hoisted_6 = { class: \"Bridge-switcherTitle\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"em\", null, null, -1))\nconst _hoisted_8 = [\"disabled\", \"onClick\"]\nconst _hoisted_9 = {\n  key: 0,\n  class: \"Bridge-switcherAnno\"\n}\nconst _hoisted_10 = [\"disabled\"]\nconst _hoisted_11 = { class: \"Bridge-switcherTitle\" }\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"em\", null, null, -1))\nconst _hoisted_13 = [\"disabled\", \"onClick\"]\nconst _hoisted_14 = {\n  key: 0,\n  class: \"Bridge-switcherAnno\"\n}\nconst _hoisted_15 = [\"href\"]\nconst _hoisted_16 = { class: \"Bridge-bridgeWrapper\" }\nconst _hoisted_17 = {\n  key: 1,\n  class: \"Bridge-bridgeLoader\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Header = _resolveComponent(\"Header\")!\n  const _component_CustomInput = _resolveComponent(\"CustomInput\")!\n  const _component_BridgeProcessor = _resolveComponent(\"BridgeProcessor\")!\n  const _component_Footer = _resolveComponent(\"Footer\")!\n  const _component_WalletsPopup = _resolveComponent(\"WalletsPopup\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_Header, {\n      \"is-testnet\": _ctx.isTestnet,\n      \"show-menu\": _ctx.isConnected && _ctx.walletsPopupState === 'closed',\n      provider: _ctx.provider,\n      \"is-history-shown\": _ctx.history.isShown,\n      \"disable-disconnect\": _ctx.isTransferInProgress\n    }, null, 8, [\"is-testnet\", \"show-menu\", \"provider\", \"is-history-shown\", \"disable-disconnect\"]),\n    _createElementVNode(\"div\", {\n      class: \"Bridge-content\",\n      style: _normalizeStyle(_ctx.contentStyle)\n    }, [\n      _hoisted_2,\n      _createElementVNode(\"main\", null, [\n        _createElementVNode(\"div\", {\n          class: _normalizeClass([\"Bridge-img\", { isFromTon: _ctx.isFromTon }])\n        }, _hoisted_4, 2),\n        _createElementVNode(\"div\", _hoisted_5, [\n          _createElementVNode(\"div\", {\n            class: _normalizeClass([\"Bridge-switchers\", { isFromTon: _ctx.isFromTon }])\n          }, [\n            _createElementVNode(\"div\", {\n              class: _normalizeClass([\"Bridge-switcher\", { disabled: _ctx.isPairsBlocked }])\n            }, [\n              _createElementVNode(\"div\", _hoisted_6, [\n                _createElementVNode(\"span\", null, [\n                  _createTextVNode(_toDisplayString(_ctx.$t(`networks.ton.${_ctx.netTypeName}.nameSwitcher`)), 1),\n                  _hoisted_7\n                ]),\n                _createElementVNode(\"ul\", {\n                  class: _normalizeClass([\"Bridge-switcherList\", { left: _ctx.isFromTon, right: !_ctx.isFromTon }])\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.fromPairs, (item, index) => {\n                    return (_openBlock(), _createElementBlock(\"li\", { key: item }, [\n                      _createElementVNode(\"button\", {\n                        disabled: index === 0,\n                        onClick: ($event: any) => (_ctx.onPairClick(true, item))\n                      }, _toDisplayString(_ctx.$t(`networks.${item}.${_ctx.netTypeName}.name`)), 9, _hoisted_8)\n                    ]))\n                  }), 128))\n                ], 2)\n              ]),\n              (_ctx.token === 'ton')\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, _toDisplayString(_ctx.$t(`networks.ton.${_ctx.netTypeName}.coin`)), 1))\n                : _createCommentVNode(\"\", true)\n            ], 2),\n            _createElementVNode(\"button\", {\n              class: \"Bridge-switcher-arrow\",\n              disabled: _ctx.isPairsBlocked,\n              onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.toggleFromTon && _ctx.toggleFromTon(...args)))\n            }, null, 8, _hoisted_10),\n            _createElementVNode(\"div\", {\n              class: _normalizeClass([\"Bridge-switcher\", { disabled: _ctx.isPairsBlocked }])\n            }, [\n              _createElementVNode(\"div\", _hoisted_11, [\n                _createElementVNode(\"span\", null, [\n                  _createTextVNode(_toDisplayString(_ctx.$t(`networks.${_ctx.pair}.${_ctx.netTypeName}.nameSwitcher`)), 1),\n                  _hoisted_12\n                ]),\n                _createElementVNode(\"ul\", {\n                  class: _normalizeClass([\"Bridge-switcherList\", { left: !_ctx.isFromTon, right: _ctx.isFromTon }])\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.toPairs, (item, index) => {\n                    return (_openBlock(), _createElementBlock(\"li\", { key: item }, [\n                      _createElementVNode(\"button\", {\n                        disabled: index === 0,\n                        onClick: ($event: any) => (\n                        _ctx.onPairClick(\n                          item === 'ton',\n                          item === 'ton' ? _ctx.pair : item\n                        )\n                      )\n                      }, _toDisplayString(_ctx.$t(`networks.${item}.${_ctx.netTypeName}.name`)), 9, _hoisted_13)\n                    ]))\n                  }), 128))\n                ], 2)\n              ]),\n              (_ctx.token === 'ton')\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [\n                    _createElementVNode(\"a\", {\n                      href: _ctx.pairNetworkCoinUrl,\n                      target: \"_blank\"\n                    }, _toDisplayString(_ctx.$t(`networks.${_ctx.pair}.${_ctx.netTypeName}.coin`)), 9, _hoisted_15)\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ], 2)\n          ], 2),\n          _createVNode(_component_CustomInput, {\n            key: \"token\",\n            disabled: _ctx.isInputsBlocked || !this.isTestnet,\n            label: _ctx.$t('sendToken'),\n            type: \"text\",\n            dropdown: [\n              { label: 'Toncoin', value: 'ton' },\n              { label: 'Other tokens', value: 'otherTokens' },\n            ],\n            modelValue: _ctx.token,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.token) = $event))\n          }, null, 8, [\"disabled\", \"label\", \"modelValue\"]),\n          (_ctx.token !== 'ton')\n            ? (_openBlock(), _createBlock(_component_CustomInput, {\n                key: \"tokenAddress\",\n                disabled: _ctx.isInputsBlocked,\n                label: _ctx.$t('tokenAddress'),\n                type: \"text\",\n                error: _ctx.errors.tokenAddress,\n                onChanged: _cache[2] || (_cache[2] = ($event: any) => (_ctx.errors.tokenAddress = '')),\n                onBlur: _ctx.checkInputs,\n                modelValue: _ctx.tokenAddress,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.tokenAddress) = $event))\n              }, null, 8, [\"disabled\", \"label\", \"error\", \"onBlur\", \"modelValue\"]))\n            : _createCommentVNode(\"\", true),\n          _createVNode(_component_CustomInput, {\n            key: \"amountInput\",\n            disabled: _ctx.isInputsBlocked,\n            label: \n              _ctx.$t('amountOfTon', {\n                tokenSymbol: _ctx.tokenSymbol,\n              })\n            ,\n            type: \"number\",\n            error: _ctx.errors.amount,\n            onChanged: _cache[4] || (_cache[4] = ($event: any) => (_ctx.errors.amount = '')),\n            onBlur: _ctx.checkInputs,\n            modelValue: _ctx.amountInput,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.amountInput) = $event))\n          }, null, 8, [\"disabled\", \"label\", \"error\", \"onBlur\", \"modelValue\"]),\n          _createVNode(_component_CustomInput, {\n            key: \"toAddress\",\n            disabled: _ctx.isInputsBlocked,\n            label: _ctx.$t(`addressInputLabel`),\n            type: \"text\",\n            error: _ctx.errors.toAddress,\n            onChanged: _cache[6] || (_cache[6] = ($event: any) => (_ctx.errors.toAddress = '')),\n            onBlur: _ctx.checkInputs,\n            modelValue: _ctx.toAddress,\n            \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.toAddress) = $event))\n          }, null, 8, [\"disabled\", \"label\", \"error\", \"onBlur\", \"modelValue\"]),\n          _withDirectives(_createElementVNode(\"div\", {\n            class: _normalizeClass([\"Bridge-willReceive\", { isFromTon: _ctx.isFromTon }])\n          }, _toDisplayString(_ctx.willReceive), 3), [\n            [_vShow, \n              (!_ctx.isTransferInProgress ||\n                !_ctx.isConnected ||\n                _ctx.bridgeProcessorIsLoading) &&\n              _ctx.willReceive\n            ]\n          ]),\n          _createElementVNode(\"div\", _hoisted_16, [\n            (!_ctx.isConnected)\n              ? (_openBlock(), _createElementBlock(\"button\", {\n                  key: 0,\n                  class: \"Bridge-connect\",\n                  onClick: _cache[8] || (_cache[8] = ($event: any) => (_ctx.walletsPopupState = 'opened'))\n                }, _toDisplayString(_ctx.$t(\"connectWallet\")), 1))\n              : _createCommentVNode(\"\", true),\n            (_ctx.isConnected && _ctx.bridgeProcessorIsLoading)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17))\n              : _createCommentVNode(\"\", true),\n            (_ctx.isConnected)\n              ? (_openBlock(), _createBlock(_component_BridgeProcessor, {\n                  ref: \"bridgeProcessor\",\n                  key: _ctx.pair,\n                  \"is-testnet\": _ctx.isTestnet,\n                  \"is-recover\": _ctx.isRecover,\n                  lt: _ctx.lt,\n                  hash: _ctx.hash,\n                  \"is-from-ton\": _ctx.isFromTon,\n                  pair: _ctx.pair,\n                  tokenAddress: _ctx.tokenAddress,\n                  amount: _ctx.amount,\n                  \"to-address\": _ctx.toAddress,\n                  tokenSymbol: _ctx.tokenSymbol,\n                  provider: _ctx.provider,\n                  token: _ctx.token,\n                  \"is-inputs-valid\": _ctx.isInputsValid,\n                  onTransferInProgress: _ctx.onTransferInProgress,\n                  onStateChanged: _ctx.getPairGasFee__debounced,\n                  onResetState: _ctx.resetState,\n                  onSaveState: _ctx.saveState,\n                  onDeleteState: _ctx.deleteState,\n                  onReady: _ctx.onBridgeProcessorReady,\n                  onError: _ctx.onBridgeTransferError\n                }, null, 8, [\"is-testnet\", \"is-recover\", \"lt\", \"hash\", \"is-from-ton\", \"pair\", \"tokenAddress\", \"amount\", \"to-address\", \"tokenSymbol\", \"provider\", \"token\", \"is-inputs-valid\", \"onTransferInProgress\", \"onStateChanged\", \"onResetState\", \"onSaveState\", \"onDeleteState\", \"onReady\", \"onError\"]))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _withDirectives(_createElementVNode(\"div\", { class: \"Bridge-pairFee\" }, _toDisplayString(_ctx.pairFee), 513), [\n            [_vShow, \n              !_ctx.isTransferInProgress || !_ctx.isConnected || _ctx.bridgeProcessorIsLoading\n            ]\n          ]),\n          _withDirectives(_createElementVNode(\"div\", { class: \"Bridge-bridgeFee\" }, _toDisplayString(_ctx.bridgeFee), 513), [\n            [_vShow, \n              !_ctx.isTransferInProgress || !_ctx.isConnected || _ctx.bridgeProcessorIsLoading\n            ]\n          ])\n        ])\n      ]),\n      _createVNode(_component_Footer)\n    ], 4),\n    (_ctx.walletsPopupState !== 'closed')\n      ? (_openBlock(), _createBlock(_component_WalletsPopup, {\n          key: 0,\n          params: _ctx.params,\n          uncancellable: _ctx.walletsPopupState === 'opened-uncancellable',\n          onWalletConnected: _ctx.onWalletConnected,\n          onCancel: _cache[9] || (_cache[9] = ($event: any) => (_ctx.walletsPopupState = 'closed'))\n        }, null, 8, [\"params\", \"uncancellable\", \"onWalletConnected\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","import TonWeb from \"tonweb\";\nimport {Address} from \"tonweb/dist/types/utils/address\";\n\nconst OFFCHAIN_CONTENT_PREFIX = 0x01;\n\nexport const parseUri = (bytes: any) => {\n    return new TextDecoder().decode(bytes);\n};\n\nexport const parseOffchainUriCell = (cell: any) => {\n    if (cell.bits.array[0] !== OFFCHAIN_CONTENT_PREFIX) {\n        throw new Error(\"no OFFCHAIN_CONTENT_PREFIX\");\n    }\n\n    let length = 0;\n    let c = cell;\n    while (c) {\n        length += c.bits.array.length;\n        c = c.refs[0];\n    }\n\n    const bytes = new Uint8Array(length);\n    length = 0;\n    c = cell;\n    while (c) {\n        bytes.set(c.bits.array, length);\n        length += c.bits.array.length;\n        c = c.refs[0];\n    }\n    return parseUri(bytes.slice(1)); // slice OFFCHAIN_CONTENT_PREFIX\n};\n\nexport const readIntFromBitString = (bs: any, cursor: any, bits: any) => {\n    let n = BigInt(0);\n    for (let i = 0; i < bits; i++) {\n        n *= BigInt(2);\n        n += BigInt(bs.get(cursor + i));\n    }\n    return n;\n};\n\nexport const parseAddress = (cell: any) => {\n    let n = readIntFromBitString(cell.bits, 3, 8);\n    if (n > BigInt(127)) {\n        n = n - BigInt(256);\n    }\n    const hashPart = readIntFromBitString(cell.bits, 3 + 8, 256);\n    if (n.toString(10) + \":\" + hashPart.toString(16) === \"0:0\") return null;\n    const s = n.toString(10) + \":\" + hashPart.toString(16).padStart(64, \"0\");\n    return new TonWeb.Address(s);\n};\n\nexport async function getJettonWalletData(tonweb: any, jettonWalletAddress: string) {\n    const jettonWalletData = await tonweb.provider.call2(\n        jettonWalletAddress,\n        \"get_wallet_data\"\n    );\n\n    const balance = jettonWalletData[0];\n    const ownerAddress = parseAddress(jettonWalletData[1]);\n    const jettonMinterAddress = parseAddress(jettonWalletData[2]);\n    const jettonWalletCode = jettonWalletData[3];\n\n    return {\n        balance,\n        ownerAddress,\n        jettonMinterAddress,\n        jettonWalletCode,\n    };\n}\n\nexport async function getJettonData(tonweb: any, jettonMinterAddress: string) {\n    const jettonData = await tonweb.provider.call2(\n        jettonMinterAddress,\n        \"get_jetton_data\",\n        []\n    );\n    const totalSupply = jettonData[0];\n    const isMutable = jettonData[1].toNumber() === -1;\n    const adminAddress = parseAddress(jettonData[2]);\n    const jettonContentUri = parseOffchainUriCell(jettonData[3]);\n    const tokenWalletCode = jettonData[4];\n\n    return {\n        totalSupply,\n        isMutable,\n        adminAddress,\n        jettonContentUri,\n        tokenWalletCode,\n    };\n}\n\nexport async function getWrappedTokenData(tonweb: any, jettonWalletAddress: string) {\n    const wrappedTokenData = await tonweb.provider.call2(\n        jettonWalletAddress,\n        \"get_wrapped_token_data\",\n        []\n    );\n\n    const chainId = wrappedTokenData[0].toString();\n    const tokenAddress = \"0x\" + wrappedTokenData[1].toString(\"hex\");\n    const decimals = wrappedTokenData[2].toString();\n    return {chainId, tokenAddress, decimals};\n}\n\nexport async function getJettonWalletAddress({\n                                          tonweb,\n                                          userTonAddress,\n                                          tokenAddress,\n                                      }: {\n    tonweb: any;\n    userTonAddress: Address;\n    tokenAddress: string;\n}) {\n    const cell = new TonWeb.boc.Cell();\n\n    cell.bits.writeAddress(userTonAddress);\n\n    const getWalletAddressResponse = await tonweb.provider.call2(\n        tokenAddress,\n        \"get_wallet_address\",\n        [[\"tvm.Slice\", TonWeb.utils.bytesToBase64(await cell.toBoc(false))]]\n    );\n    const jettonWalletAddress = parseAddress(getWalletAddressResponse);\n    return jettonWalletAddress;\n}","import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vShow as _vShow, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-62be8e14\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"BridgeProcessor\" }\nconst _hoisted_2 = [\"disabled\"]\nconst _hoisted_3 = {\n  key: 3,\n  class: \"BridgeProcessor-infoWrapper\"\n}\nconst _hoisted_4 = {\n  key: 0,\n  class: \"BridgeProcessor-infoLine\"\n}\nconst _hoisted_5 = {\n  key: 0,\n  class: \"BridgeProcessor-info-text\"\n}\nconst _hoisted_6 = { class: \"BridgeProcessor-info-text-send\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_11 = { class: \"BridgeProcessor-info-text-send-buttons\" }\nconst _hoisted_12 = [\"href\"]\nconst _hoisted_13 = {\n  key: 1,\n  class: \"BridgeProcessor-info-text-scanQRCode\"\n}\nconst _hoisted_14 = {\n  class: \"BridgeProcessor-info-text-QRCode\",\n  ref: \"qrcode\"\n}\nconst _hoisted_15 = {\n  key: 1,\n  class: \"BridgeProcessor-info-text\"\n}\nconst _hoisted_16 = {\n  key: 1,\n  class: \"BridgeProcessor-infoLine\"\n}\nconst _hoisted_17 = { class: \"BridgeProcessor-info-text\" }\nconst _hoisted_18 = { class: \"BridgeProcessor-infoLine\" }\nconst _hoisted_19 = { class: \"BridgeProcessor-info-text\" }\nconst _hoisted_20 = { class: \"BridgeProcessor-infoLine\" }\nconst _hoisted_21 = { class: \"BridgeProcessor-info-text\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_ctx.state.step === 0 && (_ctx.isFromTon || _ctx.hasApprove || _ctx.token === 'ton'))\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 0,\n          class: _normalizeClass([\"BridgeProcessor-transfer\", {\n        showLoader:\n          _ctx.isInitInProgress || _ctx.isBurningInProgress || _ctx.isLockingInProgress,\n      }]),\n          disabled: !_ctx.isInputsValid,\n          onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.onTransferClick && _ctx.onTransferClick(...args)))\n        }, _toDisplayString(_ctx.$t(\"transfer\")), 11, _hoisted_2))\n      : _createCommentVNode(\"\", true),\n    (_ctx.state.step === 0 && !_ctx.isFromTon && !_ctx.hasApprove && _ctx.token !== 'ton')\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 1,\n          class: _normalizeClass([\"BridgeProcessor-transfer\", { showLoader: _ctx.isApprovingInProgress }]),\n          onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.approve && _ctx.approve(...args)))\n        }, \" Approve \", 2))\n      : _createCommentVNode(\"\", true),\n    (_ctx.isCancelVisible)\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 2,\n          class: \"BridgeProcessor-cancel\",\n          onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.onCancelClick && _ctx.onCancelClick(...args)))\n        }, _toDisplayString(_ctx.$t(\"cancel\")), 1))\n      : _createCommentVNode(\"\", true),\n    (_ctx.state.step > 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          (_ctx.token === 'ton')\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                _createElementVNode(\"div\", {\n                  class: _normalizeClass([\"BridgeProcessor-info-icon\", {\n            none: _ctx.state.step < 1,\n            pending: _ctx.state.step === 1,\n            done: _ctx.state.step > 1,\n          }])\n                }, null, 2),\n                (!_ctx.getStepInfoText1.isOnlyText)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                      _createElementVNode(\"div\", _hoisted_6, [\n                        _createElementVNode(\"div\", null, [\n                          _createTextVNode(_toDisplayString(_ctx.getStepInfoText1.send1) + \" \", 1),\n                          _createElementVNode(\"button\", {\n                            class: \"BridgeProcessor-info-text-copy\",\n                            onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.onCopyClick && _ctx.onCopyClick(...args)))\n                          }, _toDisplayString(_ctx.getStepInfoText1.amountReadable), 1),\n                          _createTextVNode(\" \" + _toDisplayString(_ctx.getStepInfoText1.send2), 1),\n                          _hoisted_7,\n                          _createElementVNode(\"button\", {\n                            class: \"BridgeProcessor-info-text-copy\",\n                            onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.onCopyClick && _ctx.onCopyClick(...args)))\n                          }, _toDisplayString(_ctx.getStepInfoText1.toAddress), 1),\n                          _hoisted_8,\n                          _createTextVNode(\" \" + _toDisplayString(_ctx.getStepInfoText1.withComment), 1),\n                          _hoisted_9,\n                          _createElementVNode(\"button\", {\n                            class: \"BridgeProcessor-info-text-copy\",\n                            onClick: _cache[5] || (_cache[5] = \n//@ts-ignore\n(...args) => (_ctx.onCopyClick && _ctx.onCopyClick(...args)))\n                          }, _toDisplayString(_ctx.getStepInfoText1.comment), 1),\n                          _hoisted_10\n                        ]),\n                        _createElementVNode(\"div\", _hoisted_11, [\n                          _createElementVNode(\"a\", {\n                            href: _ctx.getStepInfoText1.openWalletUrl,\n                            class: \"BridgeProcessor-info-text-openWallet\",\n                            target: \"_blank\"\n                          }, _toDisplayString(_ctx.getStepInfoText1.openWalletLabel), 9, _hoisted_12),\n                          (!_ctx.isQRCodeShown)\n                            ? (_openBlock(), _createElementBlock(\"button\", {\n                                key: 0,\n                                class: \"BridgeProcessor-info-text-generateQRCode\",\n                                onClick: _cache[6] || (_cache[6] = \n//@ts-ignore\n(...args) => (_ctx.generateQRCode && _ctx.generateQRCode(...args)))\n                              }, _toDisplayString(_ctx.getStepInfoText1.generateQRCode), 1))\n                            : _createCommentVNode(\"\", true),\n                          (_ctx.isQRCodeShown)\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, _toDisplayString(_ctx.getStepInfoText1.scanQRCode), 1))\n                            : _createCommentVNode(\"\", true),\n                          _withDirectives(_createElementVNode(\"div\", _hoisted_14, null, 512), [\n                            [_vShow, _ctx.isQRCodeShown]\n                          ])\n                        ])\n                      ])\n                    ]))\n                  : (_openBlock(), _createElementBlock(\"div\", _hoisted_15, _toDisplayString(_ctx.getStepInfoText1.text), 1))\n              ]))\n            : _createCommentVNode(\"\", true),\n          (!_ctx.isFromTon)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [\n                _createElementVNode(\"div\", {\n                  class: _normalizeClass([\"BridgeProcessor-info-icon\", {\n            none: _ctx.state.step < 2,\n            pending: _ctx.state.step === 2,\n            done: _ctx.state.step > 2,\n          }])\n                }, null, 2),\n                _createElementVNode(\"div\", _hoisted_17, _toDisplayString(_ctx.getStepInfoText2), 1)\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_18, [\n            _createElementVNode(\"div\", {\n              class: _normalizeClass([\"BridgeProcessor-info-icon\", {\n            none: _ctx.state.step < 3,\n            pending: _ctx.state.step === 3,\n            done: _ctx.state.step > 3,\n          }])\n            }, null, 2),\n            _createElementVNode(\"div\", _hoisted_19, _toDisplayString(_ctx.getStepInfoText3), 1)\n          ]),\n          _createElementVNode(\"div\", _hoisted_20, [\n            _createElementVNode(\"div\", {\n              class: _normalizeClass([\"BridgeProcessor-info-icon\", {\n            none: _ctx.state.step < 4,\n            pending: _ctx.state.step === 4,\n            done: _ctx.state.step > 4,\n          }])\n            }, null, 2),\n            _createElementVNode(\"div\", _hoisted_21, _toDisplayString(_ctx.getStepInfoText4), 1)\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (_ctx.isGetTonCoinVisible)\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 4,\n          class: _normalizeClass([\"BridgeProcessor-getTonCoin\", { showLoader: _ctx.isMintingInProgress }]),\n          onClick: _cache[7] || (_cache[7] = \n//@ts-ignore\n(...args) => (_ctx.mint && _ctx.mint(...args)))\n        }, _toDisplayString(_ctx.$t(\"getToncoin\", { coin: _ctx.toCoin })), 3))\n      : _createCommentVNode(\"\", true),\n    (_ctx.isDoneVisible)\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 5,\n          class: \"BridgeProcessor-done\",\n          onClick: _cache[8] || (_cache[8] = \n//@ts-ignore\n(...args) => (_ctx.onDoneClick && _ctx.onDoneClick(...args)))\n        }, _toDisplayString(_ctx.$t(\"done\")), 1))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","import BN from \"bn.js\";\nimport TonWeb from \"tonweb\";\nimport { Address } from \"tonweb/dist/types/utils/address\";\n\nasync function burnJetton({\n  tonwebWallet,\n  destinationAddress,\n  userTonAddress,\n  jettonWalletAddress,\n  jettonAmountWithDecimals,\n}: {\n  tonwebWallet: any;\n  destinationAddress: BN;\n  userTonAddress: Address;\n  jettonWalletAddress: Address | null;\n  jettonAmountWithDecimals: BN;\n}) {\n  if (!jettonWalletAddress) return;\n  const burnOP = 0x595f07bc; // burn op\n  const queryId = new TonWeb.utils.BN(0);\n\n  const burnPayload = new TonWeb.boc.Cell();\n  burnPayload.bits.writeUint(burnOP, 32);\n  const customPayload = new TonWeb.boc.Cell();\n  customPayload.bits.writeUint(destinationAddress, 160);\n  burnPayload.bits.writeUint(queryId, 64);\n  burnPayload.bits.writeCoins(jettonAmountWithDecimals);\n  burnPayload.bits.writeAddress(userTonAddress);\n  burnPayload.bits.writeBit(1);\n  burnPayload.refs.push(customPayload);\n\n\n  await tonwebWallet.provider.send(\"ton_sendTransaction\", [\n    {\n      to: jettonWalletAddress?.toString(true, true, true),\n      value: TonWeb.utils.toNano(\"1\").toString(),\n      data: TonWeb.utils.bytesToBase64(await burnPayload.toBoc()),\n      dataType: \"boc\",\n    },\n  ]);\n}\n\nasync function mintJetton({\n  tonwebWallet,\n  queryId,\n  bridgeTonAddress,\n}: {\n  tonwebWallet: any;\n  queryId: string;\n  bridgeTonAddress: string;\n}) {\n  const mintOP = 8;\n\n  const mintPayload = new TonWeb.boc.Cell();\n  mintPayload.bits.writeUint(mintOP, 32);\n  mintPayload.bits.writeUint(new TonWeb.utils.BN(queryId), 64);\n\n  await tonwebWallet.provider.send(\"ton_sendTransaction\", [\n    {\n      to: bridgeTonAddress,\n      value: TonWeb.utils.toNano(\"1\").toString(),\n      data: TonWeb.utils.bytesToBase64(await mintPayload.toBoc()),\n      dataType: \"boc\",\n    },\n  ]);\n}\n\nexport { burnJetton, mintJetton };\n","function onCopyClick(e: MouseEvent) {\n  const target = e.target as any;\n\n  let timeout1: ReturnType<typeof setTimeout>;\n  let timeout2: ReturnType<typeof setTimeout>;\n\n  const triggerClass = (className: string) => {\n    if (target) {\n      target.classList.remove(className);\n      clearTimeout(timeout1);\n      clearTimeout(timeout2);\n\n      timeout1 = setTimeout(() => {\n        target.classList.add(className);\n      }, 17);\n\n      timeout2 = setTimeout(() => {\n        target.classList.remove(className);\n      }, 500);\n    }\n  };\n\n  if (navigator && navigator.clipboard && navigator.clipboard.writeText) {\n    navigator.clipboard.writeText(target.innerText).then(\n      function () {\n        triggerClass(\"success\");\n      },\n      function () {\n        triggerClass(\"failure\");\n      }\n    );\n  } else {\n    triggerClass(\"failure\");\n  }\n}\n\nexport { onCopyClick };\n","import TonWeb from \"tonweb\";\nimport {WalletContract} from \"tonweb/dist/types/contract/wallet/wallet-contract\";\n\nconst BN = TonWeb.utils.BN;\n\nexport const getNumber = (pair: string[]): number => parseInt(pair[1], 16);\n\nexport const getBN = (pair: string[]) /* TonWeb.utils.BN */ => new BN(pair[1].substr(2), 16);\n\nexport const findLogOutMsg = (outMessages?: any[]): any => {\n    if (!outMessages) return null;\n    for (const outMsg of outMessages) {\n        if (outMsg.destination === '') return outMsg;\n    }\n    return null;\n}\n\nexport const getRawMessageBytes = (logMsg: any): Uint8Array | null => {\n    const message = logMsg.message.substr(0, logMsg.message.length - 1); // remove '\\n' from end\n    return TonWeb.utils.base64ToBytes(message);\n}\n\nexport const getTextMessageBytes = (logMsg: any): Uint8Array | null => {\n    const message = logMsg.msg_data?.text;\n    const textBytes = TonWeb.utils.base64ToBytes(message);\n    const bytes = new Uint8Array(textBytes.length + 4);\n    bytes.set(textBytes, 4);\n    return bytes;\n}\n\nexport const getMessageBytes = (logMsg: any): Uint8Array | null => {\n    const msgType = logMsg.msg_data['@type'];\n    if (msgType === 'msg.dataText') {\n        return getTextMessageBytes(logMsg);\n    } else if (msgType === 'msg.dataRaw') {\n        return getRawMessageBytes(logMsg);\n    } else {\n        console.error('Unknown log msg type ' + msgType);\n        return null;\n    }\n}\n\nexport const makeAddress = (address: string): string => {\n    if (!address.startsWith('0x')) throw new Error('Invalid address ' + address);\n    let hex = address.substr(2);\n    while (hex.length < 40) {\n        hex = '0' + hex;\n    }\n    return '0x' + hex;\n}\n\nexport async function sendInternal(tonweb: TonWeb, wallet: WalletContract, secretKey: Uint8Array, byteArray: any /* Uint8Array | TonWeb.boc.Cell */, toAddress: string): Promise<boolean> {\n    let seqno = await wallet.methods.seqno().call();\n    if (!seqno) {\n        seqno = 0;\n    }\n    const query = await wallet.methods.transfer({\n        secretKey: secretKey,\n        toAddress: toAddress,\n        amount: TonWeb.utils.toNano('5'), // на газ, остаток вернется\n        seqno: seqno,\n        payload: byteArray,\n        sendMode: 3\n    });\n\n    const sendResponse = await query.send();\n    if (sendResponse[\"@type\"] === \"ok\") {\n        await wait(4000); // дадим выполниться чтобы далее получить верный seqno\n        return true;\n    } else {\n        console.error(sendResponse);\n        return false;\n    }\n}\n\nfunction wait(ms: number): Promise<void> {\n    return new Promise<void>(resolve => {\n        setTimeout(() => resolve(), ms);\n    });\n}","import TonWeb from \"tonweb\";\n// import {Bytes} from \"@ethersproject/bytes/src.ts\";\n// import {splitSignature} from \"ethers/lib/utils\";\nimport {makeAddress, sendInternal} from \"./BridgeTonUtils\";\nimport {WalletContract} from \"tonweb/dist/types/contract/wallet/wallet-contract\";\n\nexport interface EvmSignature {\n    publicKey: string; // secp_key in hex\n    r: string; // 256bit in hex\n    s: string; // 256bit in hex\n    v: number; // 8bit\n}\n\nexport interface EvmSignatures {\n    signatures: EvmSignature[];\n}\n\nconst decToHex = (dec: string): string => '0x' + new TonWeb.utils.BN(dec).toString(16);\n\nexport const parseEvmSignature = (data: any): EvmSignature => {\n    const tuple: any[] = data.tuple.elements;\n    const publicKey: string = makeAddress(decToHex(tuple[0].number.number));\n\n    const rsv: any[] = tuple[1].tuple.elements;\n    const r: string = decToHex(rsv[0].number.number);\n    const s: string = decToHex(rsv[1].number.number);\n    const v: number = Number(rsv[2].number.number);\n    return {\n        publicKey,\n        r,\n        s,\n        v\n    }\n}\n\n/**\n * @param voteId - hash of vote like '0xFF5856350817700B84368727835EEFE9BB10D8DB23FF4311F6936747ABC32308'\n */\nexport async function getEvmSignaturesFromCollector(tonweb: TonWeb, tonCollectorAddress: string, voteId: string): Promise<EvmSignatures | null> {\n    const intVoteId = new TonWeb.utils.BN(voteId.substr(2), 16).toString();\n    console.log('getEvmSignaturesFromCollector ', voteId, intVoteId);\n\n    const result: any = await tonweb.provider.call(tonCollectorAddress, 'get_external_voting_data', [['num', intVoteId]]);\n    console.log('getEvmSignaturesFromCollector raw result', result);\n    if (result.exit_code === 309) {\n        console.log('getEvmSignaturesFromCollector 309 no found')\n        return null;\n    }\n    const list: any[] = result.stack[0][1].elements;\n\n    const status: EvmSignatures = {\n        signatures: list.map(parseEvmSignature)\n    };\n    console.log('getEvmSignaturesFromCollector parsed result', status);\n\n    return status;\n}\n\n// export async function sendToCollector(tonweb: TonWeb, wallet: WalletContract, secretKey: Uint8Array, tonCollectorAddress: string, voteId: string, signature: Bytes | string): Promise<boolean> {\n//     const myAddress = await wallet.getAddress();\n//\n//     console.log('sendToCollector voteId=', voteId, 'signature=', signature, 'from ' + myAddress.toString(true));\n//\n//     const s = splitSignature(signature);\n//\n//     const bits = new TonWeb.boc.BitString(32 + 64 + 256 + 256 + 256 + 8);\n//     bits.writeUint(5, 32); // op\n//     bits.writeUint(0, 64); // query_id\n//     bits.writeUint(new TonWeb.utils.BN(voteId.substr(2), 16), 256);\n//     bits.writeUint(new TonWeb.utils.BN(s.r.substr(2), 16), 256);\n//     bits.writeUint(new TonWeb.utils.BN(s.s.substr(2), 16), 256);\n//     bits.writeUint(s.v, 8);\n//\n//     return sendInternal(tonweb, wallet, secretKey, bits.array, tonCollectorAddress);\n// }","import Web3 from \"web3\";\nimport TonWeb from \"tonweb\"\n\nexport interface TonAddress {\n    workchain: number; // int8\n    address_hash: string; // bytes32\n}\n\nexport interface TonTxID {\n    address_: TonAddress; // sender user TON address\n    tx_hash: string; // bytes32, transaction hash on TON bridge smart contract\n    lt: string; // uint64, transaction LT (logical time) on TON bridge smart contract\n}\n\nexport interface EvmTransaction {\n    blockTime: number;\n    blockHash: string;\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TonTransaction {\n    tx: TonTxID;\n}\n\nexport type NewOracleSet = string[]; // address[]\n\nexport interface Vote {\n    id: string;\n    data: string; // json\n    status: number;\n    statusTime: number; // in seconds\n}\n\nexport function hash(data: string): string {\n    const hash = Web3.utils.sha3(data)\n    if (!hash) throw new Error('empty hash');\n    return hash;\n}\n\nexport const MULTISIG_QUERY_TIMEOUT = 30 * 24 * 60 * 60; // 30 days\n\nexport function getQueryId(evmTransaction: EvmTransaction) /* BN */ {\n    const VERSION = 2;\n    const timeout = evmTransaction.blockTime + MULTISIG_QUERY_TIMEOUT + VERSION;\n\n    // web3@1.3.4 has an error in the algo for computing SHA\n    // it doesn't strictly check input string for valid HEX relying only for 0x prefix\n    // but the query string is formed that way: 0xBLOCKHASH + '_' + 0xTRANSACTIONHASH + '_' + LOGINDEX\n    // the keccak algo splits string to pairs of symbols, and treats them as hex bytes\n    // so _0 becames NaN, x7 becames NaN, d_ becames 13 (it only sees first d and skips invalid _)\n    // web3@1.6.1 has this error fixed, but for our case this means that we've got different hashes for different web3 versions\n    // and getLegacyQueryString code transforms query string in the way, that SHA from web3@1.6.1 can return the same exact value as web3@1.3.4\n    // for example:\n    // old one: 0xcad62a0e0090e30e0133586f86ed8b7d0d2eac5fa8ded73b8180931ff379b113_0x77e5617841b2d355fe588716b6f8f506b683e985fc98fdb819ddf566594d4cfd_64\n    // new one: 0xcad62a0e0090e30e0133586f86ed8b7d0d2eac5fa8ded73b8180931ff379b11300007e5617841b2d355fe588716b6f8f506b683e985fc98fdb819ddf566594d4cf0d64\n    // diff   :                                                                   ^^^^                                                              ^^\n    function getLegacyQueryString(str: string): string {\n        const strArr = str.split('');\n        strArr[66] = '0';\n        strArr[67] = '0';\n        strArr[68] = '0';\n        strArr[69] = '0';\n        strArr[133] = strArr[132];\n        strArr[132] = '0';\n        return strArr.join('');\n    }\n\n    const queryId = hash(\n        getLegacyQueryString(\n        evmTransaction.blockHash + '_' + evmTransaction.transactionHash + '_' + String(evmTransaction.logIndex)\n        )\n    ).substr(2, 8); // get first 32 bit\n\n    return new TonWeb.utils.BN(timeout).mul(new TonWeb.utils.BN(4294967296)).add(new TonWeb.utils.BN(queryId, 16));\n}","import { Contract } from \"ethers\";\n\nimport BRIDGE from \"@/ton-bridge-lib/abi/TokenBridge.json\";\n\nimport { Provider } from \"../providers/provider\";\nimport {TonAddress, TonTxID} from \"@/ton-bridge-lib/BridgeCommon\";\nexport class BridgeContract {\n  contracts: { [key: string]: Contract } = {};\n\n  private provider: Provider;\n\n  constructor(provider: Provider) {\n    this.provider = provider;\n  }\n\n  _getContract(address: string) {\n    if (!Object.keys(this.contracts).includes(address)) {\n      return this._registerContract(address);\n    }\n    if (!this.contracts[address].provider) {\n      return this._registerContract(address);\n    }\n    return this.contracts[address];\n  }\n\n  _registerContract(address: string) {\n    // const contract = new provider.web3!.eth.Contract(ERC20.abi as any[], address);\n    const contract = new Contract(\n      address,\n      BRIDGE.abi,\n      (this.provider as any).provider\n    );\n\n    this.contracts[address] = contract;\n    return contract;\n  }\n\n  symbol(address: string): string {\n    const contract = this._getContract(address);\n    return contract.symbol();\n  }\n\n  lock({\n    address,\n    token,\n    amount,\n    to_address_hash\n  }: {\n    address: string;\n    token: string;\n    amount: string;\n    to_address_hash: string;\n  }): Promise<any> {\n    const contract = this._getContract(address);\n    return contract\n      .connect((this.provider as any).provider.getSigner()!)\n      .lock(token, amount, to_address_hash);\n  }\n\n  unlock({\n    bridgeAddress,\n    ethReceiver,\n    token,\n    jettonAmount,\n    tx,\n    signatures,\n  }: {\n    bridgeAddress: string;\n    ethReceiver: string; // address\n    token: string; // address\n    jettonAmount: string; // uint64\n    tx: TonTxID;\n    signatures: any;\n  }): Promise<any> {\n    const contract = this._getContract(bridgeAddress);\n    const resp = contract\n      .connect((this.provider as any).provider.getSigner()!)\n      .unlock(\n        {\n          receiver: ethReceiver, // address\n          token,\n          amount: jettonAmount,\n          tx: {\n            address_hash: tx.address_.address_hash,\n            tx_hash: tx.tx_hash,\n            lt: tx.lt\n          }\n        },\n        signatures\n      );\n    return resp;\n  }\n}\n\n// const erc20Contract = new ERC20Contract();\n\n// export default erc20Contract;\n","import BN from \"bn.js\";\nimport { BigNumber, Contract } from \"ethers\";\n\nimport ERC20 from \"@/ton-bridge-lib/abi/ERC20.json\";\n\nimport { Provider } from \"../providers/provider\";\n\nexport class ERC20Contract {\n  contracts: { [key: string]: Contract } = {};\n\n  private provider: Provider;\n\n  constructor(provider: Provider) {\n    this.provider = provider;\n  }\n\n  _getContract(address: string) {\n    if (!Object.keys(this.contracts).includes(address)) {\n      return this._registerContract(address);\n    }\n    if (!this.contracts[address].provider) {\n      return this._registerContract(address);\n    }\n    return this.contracts[address];\n  }\n\n  _registerContract(address: string) {\n    // const contract = new provider.web3!.eth.Contract(ERC20.abi as any[], address);\n    const contract = new Contract(\n      address,\n      ERC20.abi,\n      (this.provider as any).provider\n    );\n    this.contracts[address] = contract;\n    return contract;\n  }\n\n  symbol(address: string): string {\n    const contract = this._getContract(address);\n    return contract.symbol();\n  }\n\n  decimals({ address }: { address: string }) {\n    const contract = this._getContract(address);\n    return contract.decimals();\n  }\n\n  balanceOf({\n    address,\n    account,\n  }: {\n    address: string;\n    account: string;\n  }): Promise<BN> {\n    const contract = this._getContract(address);\n    return contract.balanceOf(account);\n  }\n\n  allowance({\n    address,\n    owner,\n    spender,\n  }: {\n    address: string;\n    owner: string;\n    spender: string;\n  }): Promise<BigNumber> {\n    const contract = this._getContract(address);\n    return contract.allowance(owner, spender);\n  }\n\n  approve({\n    address,\n    spender,\n    amount,\n  }: {\n    address: string;\n    spender: string;\n    amount: string;\n  }): Promise<any> {\n    const contract = this._getContract(address);\n    return contract\n      .connect((this.provider as any).provider.getSigner()!)\n      .approve(spender, amount);\n  }\n}\n\n// const erc20Contract = new ERC20Contract();\n\n// export default erc20Contract;\n","import TonWeb from \"tonweb\";\n\nexport const BLOCK_CONFIRMATIONS_COUNT = 12;\n\nexport function parseField(data: any, field: string | number): any {\n    const x: any = data[field];\n    if (x === null || x === undefined) throw new Error('no \"' + field + '\"');\n    return x;\n}\n\n// 0xfe8af310e07838c114ad6c3227e4a08aa2c0ae31f6c88f3cdffcd493f15e7299\nexport function parseEvmTxHash(data: any, field: string): string {\n    const s: string = parseField(data, field);\n    if (s.length !== 66 || !s.startsWith('0x')) throw new Error('invalid eth tx hash ' + s);\n    return s.toLowerCase();\n}\n\n// 0xef95f2f1ed3ca60b048b4bf67cde2195961e0bba6f70bcbea9a2c4e133e34b46\nexport function parseEvmBlockHash(data: any, field: string): string {\n    const s: string = parseField(data, field);\n    if (s.length !== 66 || !s.startsWith('0x')) throw new Error('invalid eth block hash ' + s);\n    return s.toLowerCase();\n}\n\n// 0x1FF516E5ce789085CFF86d37fc27747dF852a80a\nexport function parseEvmAddress(data: any, field: string): string {\n    const s: string = parseField(data, field);\n    if (s.length !== 42 || !s.startsWith('0x')) throw new Error('invalid eth address ' + s);\n    return s.toLowerCase();\n}\n\nexport function parseNumber(data: any, field: string): number {\n    const n: number = Number(parseField(data, field));\n    if (isNaN(n)) throw new Error('invalid number ' + n);\n    if (n < 0) throw new Error('number is negative ' + n);\n    return n;\n}\n\n// 0xE5BC34E7CD6D8669967B117CF7644A940571D169FB8DC9358C2D123A07DFB9A4\nexport function parseTonAddress(data: any, field: string): string {\n    const s: string = parseField(data, field);\n    if (s.length !== 66 || !s.startsWith('0x')) throw new Error('invalid ton address ' + s);\n    return s.slice(2).toLowerCase(); // slice '0x'\n}\n\nexport function parseWc(data: any, field: string): number {\n    const n: number = Number(parseField(data, field));\n    if (n !== 0 && n !== -1) throw new Error('invalid wc ' + n);\n    return n;\n}\n\nexport function parseDecimals(data: any, field: number): number {\n    const n: number = Number(parseField(data, field));\n    if (!((n >= 0) && (n <= 255))) throw new Error('invalid decimals ' + n);\n    return n;\n}\n\nexport function parseBN(data: any, field: string): string {\n    const s: string = parseField(data, field);\n    const bn = new TonWeb.utils.BN(s);\n    if (bn.lte(new TonWeb.utils.BN(0))) throw new Error('bn is negative ' + s);\n    return s;\n}","import {EvmTransaction, hash, TonAddress, TonTransaction, TonTxID} from \"./BridgeCommon\";\nimport Web3 from \"web3\";\nimport TonWeb from \"tonweb\";\nimport {Log, TransactionReceipt} from \"web3-core\";\nimport {\n    BLOCK_CONFIRMATIONS_COUNT,\n    parseBN,\n    parseEvmAddress,\n    parseEvmBlockHash,\n    parseEvmTxHash,\n    parseNumber,\n    parseTonAddress,\n    parseWc\n} from \"./BridgeEvmUtils\";\nimport {findLogOutMsg, getMessageBytes, makeAddress} from \"./BridgeTonUtils\";\n\nconst BN = TonWeb.utils.BN;\n\nconst BURN_INPUT_LENGTH = 202;\nconst BURN_INPUT_PREFIX = '0xe057fbff';\n\nexport interface SwapEthToTonEvent extends EvmTransaction {\n    type: 'SwapEthToTon';\n    transactionHash: string;\n    logIndex: number;\n    blockNumber: number;\n    blockTime: number;\n    blockHash: string;\n\n    from: string; // address\n    to: TonAddress;\n    value: string; // uint256\n\n    rawData: string;\n    topics: string[];\n    transactionIndex: number;\n}\n\nexport interface SwapTonToEth extends TonTransaction {\n    type: 'SwapTonToEth';\n    receiver: string; // address\n    amount: string; // uint64\n    tx: TonTxID;\n    time: number;\n}\n\nexport class ToncoinBridge {\n\n    static getFeeAmount(amount: any /* BN */) /* BN */ {\n        const feeFlat = new BN(5000000000);\n        const feeFactor = new BN(25);\n        const feeBase = new BN(10000);\n\n        const rest = amount.sub(feeFlat);\n        const percentFee = rest.mul(feeFactor).div(feeBase);\n        return feeFlat.add(percentFee);\n    }\n\n    static getDataId(web3: Web3, d: SwapTonToEth, target?: string): string {\n        if (target) {\n            return hash(\n                web3.eth.abi.encodeParameters(\n                    ['int', 'address', 'address', 'uint256', 'int8', 'bytes32', 'bytes32', 'uint64'],\n                    [0xDA7A, target, d.receiver, d.amount, d.tx.address_.workchain, d.tx.address_.address_hash, d.tx.tx_hash, d.tx.lt]\n                )\n            );\n        } else { // ethereum mainnet Toncoin bridge hasn't `target`\n            return hash(\n                web3.eth.abi.encodeParameters(\n                    ['int', 'address', 'uint256', 'int8', 'bytes32', 'bytes32', 'uint64'],\n                    [0xDA7A, d.receiver, d.amount, d.tx.address_.workchain, d.tx.address_.address_hash, d.tx.tx_hash, d.tx.lt]\n                )\n            );\n        }\n    }\n\n    static getNewSetId(web3: Web3, setHash: number, addresses: string[], target?: string): string {\n        if (target) {\n            return hash(\n                web3.eth.abi.encodeParameters(\n                    ['int', 'address', 'int', 'address[]'],\n                    [0x5E7, target, setHash, addresses]\n                )\n            );\n        } else { // ethereum mainnet Toncoin bridge hasn't `target`\n            return hash(\n                web3.eth.abi.encodeParameters(\n                    ['int', 'int', 'address[]'],\n                    [0x5E7, setHash, addresses]\n                )\n            );\n        }\n    }\n\n    static getNewBurnStatusId(web3: Web3, newBurnStatus: boolean, nonce: number, target?: string): string {\n        if (target) {\n            return hash(\n                web3.eth.abi.encodeParameters(\n                    ['int', 'address', 'bool', 'int'],\n                    [0xB012, target, newBurnStatus, nonce]\n                )\n            );\n        } else { // ethereum mainnet Toncoin bridge hasn't `target`\n            return hash(\n                web3.eth.abi.encodeParameters(\n                    ['int', 'bool', 'int'],\n                    [0xB012, newBurnStatus, nonce]\n                )\n            );\n        }\n    }\n\n    static findLog = (web3: Web3, from: string, amount: string, workchain: string, addressHash: string, logs: Log[]): Log | null => {\n        let count = 0;\n        let result: Log | null = null;\n        for (const log of logs) {\n            if (log.topics.length === 3 &&\n                log.topics[1].toLowerCase().endsWith(from.substr(2)) &&\n                log.topics[2] === '0x' + addressHash) {\n                const decoded = web3.eth.abi.decodeParameters(\n                    ['int256', 'uint256'],\n                    log.data\n                );\n                if (decoded[0] === workchain && decoded[1] === amount) {\n                    result = log;\n                    count++;\n                }\n            }\n        }\n        if (count > 1) throw new Error('too many logs');\n        return result;\n    }\n\n    static createMultisigMsgBody(ethToTon: SwapEthToTonEvent) /* Cell */ {\n        const payload = new TonWeb.boc.Cell();\n        payload.bits.writeUint(4, 32); // op\n        payload.bits.writeUint(0, 8); // vote op\n        payload.bits.writeUint(new TonWeb.utils.BN(ethToTon.transactionHash.substr(2), 16), 256);\n        payload.bits.writeInt(ethToTon.logIndex, 16);\n        payload.bits.writeInt(ethToTon.to.workchain, 8);\n        payload.bits.writeUint(new TonWeb.utils.BN(ethToTon.to.address_hash, 16), 256);\n        payload.bits.writeUint(new TonWeb.utils.BN(ethToTon.value), 64);\n        return payload;\n    }\n\n    static isValidBurn = (tx: any, wtonAddress: string): boolean => {\n        if (tx.to.toLowerCase() !== wtonAddress.toLowerCase()) return false;\n        if (tx.from.toLowerCase() === wtonAddress.toLowerCase()) return false;\n        if (tx.isError !== '0') return false;\n        if (tx.txreceipt_status !== '1') return false;\n        if (!tx.input) return false;\n        if (tx.input.length !== BURN_INPUT_LENGTH) return false;\n        if (!tx.input.startsWith(BURN_INPUT_PREFIX)) return false;\n        if (tx.confirmations < BLOCK_CONFIRMATIONS_COUNT) return false;\n        return true;\n    }\n\n    static processEvmTransaction = async (web3: Web3, wtonAddress: string, tx: any, receipt: TransactionReceipt, currentBlockNumber: number): Promise<SwapEthToTonEvent> => {\n\n        // parse transaction\n\n        const blockNumber = parseNumber(tx, 'blockNumber');\n        const transactionHash = parseEvmTxHash(tx, 'hash');\n        const blockTime = parseNumber(tx, 'timeStamp');\n        const blockHash = parseEvmBlockHash(tx, 'blockHash');\n        const transactionIndex = parseNumber(tx, 'transactionIndex');\n        const from = parseEvmAddress(tx, 'from');\n        const to = parseEvmAddress(tx, 'to');\n        const input = tx.input;\n\n        // parse transaction input\n\n        if (input.length !== BURN_INPUT_LENGTH) throw new Error('invalid input length ' + input);\n        if (!input.startsWith(BURN_INPUT_PREFIX)) throw new Error(`input ${BURN_INPUT_PREFIX} ` + input);\n\n        // uint256 amount, int8 workchain, bytes32 address_hash\n        const decodedInput = web3.eth.abi.decodeParameters(\n            ['uint256', 'int8', 'bytes32'],\n            '0x' + input.slice(10)\n        );\n\n        const value = parseBN(decodedInput, '0');\n        const workchain = parseWc(decodedInput, '1');\n        const address_hash = parseTonAddress(decodedInput, '2');\n\n        // validate transaction\n\n        if (!receipt || Object.keys(receipt).length === 0) throw new Error('no receipt');\n        if (blockHash !== receipt.blockHash.toLowerCase()) throw new Error('invalid blockHash');\n        if (blockNumber !== receipt.blockNumber) throw new Error('invalid blockNumber');\n        if (from !== receipt.from.toLowerCase()) throw new Error('invalid from');\n        if (!receipt.status) throw new Error('invalid status');\n        if (wtonAddress.toLowerCase() !== receipt.to.toLowerCase()) throw new Error('invalid to');\n        if (transactionHash !== receipt.transactionHash.toLowerCase()) throw new Error('invalid transactionHash');\n        if (transactionIndex !== receipt.transactionIndex) throw new Error('invalid transactionIndex');\n\n        const log = ToncoinBridge.findLog(web3, from, value, workchain.toString(), address_hash, receipt.logs);\n        if (!log) throw new Error('cant find log');\n        const logIndex = parseNumber(log, 'logIndex');\n\n        if (currentBlockNumber - receipt.blockNumber < BLOCK_CONFIRMATIONS_COUNT) {\n            throw new Error('No block confirmations ' + (currentBlockNumber - receipt.blockNumber) + '(' + currentBlockNumber + '-' + receipt.blockNumber + ')');\n        }\n\n        return {\n            type: 'SwapEthToTon',\n            transactionHash,\n            logIndex, // 6\n            blockNumber, // 10132245\n            blockTime, // 1628967979\n            blockHash,\n            from,\n            to: {\n                workchain,\n                address_hash\n            },\n            value, // '0',\n            rawData: log.data,\n            topics: log.topics,\n            transactionIndex,\n        }\n    }\n\n    /**\n     * @param t transaction from ton-http-api\n     */\n    static processTonTransaction = (t: any): SwapTonToEth | null => {\n\n        // find log message\n\n        const logMsg = findLogOutMsg(t.out_msgs);\n        if (!logMsg) {\n            return null;\n        }\n\n        const bytes = getMessageBytes(logMsg);\n        if (bytes === null) {\n            return null;\n        }\n        if (bytes.length !== 28) {\n            return null;\n        }\n\n        // parse log message\n\n        const destinationAddress = makeAddress('0x' + TonWeb.utils.bytesToHex(bytes.slice(0, 20)));\n        const amountHex = TonWeb.utils.bytesToHex(bytes.slice(20, 28));\n        const amount = new BN(amountHex, 16);\n        const senderAddress = new TonWeb.utils.Address(t.in_msg.source);\n\n        // validate log message\n\n        const addressFromInMsg = new TextDecoder().decode(TonWeb.utils.base64ToBytes(t.in_msg.msg_data.text)).slice('swapTo#'.length);\n        if (destinationAddress.toLowerCase() !== addressFromInMsg.toLowerCase()) {\n            console.error('address from in_msg doesnt match ', addressFromInMsg, destinationAddress);\n            return null;\n        }\n        const amountFromInMsg = new BN(t.in_msg.value);\n        const amountFromInMsgAfterFee = amountFromInMsg.sub(ToncoinBridge.getFeeAmount(amountFromInMsg));\n        if (!amount.eq(amountFromInMsgAfterFee)) {\n            console.error('amount from in_msg doesnt match ', amount.toString(), amountFromInMsgAfterFee.toString(), amountFromInMsg.toString());\n            return null;\n        }\n\n        return {\n            type: 'SwapTonToEth',\n            receiver: destinationAddress,\n            amount: amount.toString(),\n            tx: {\n                address_: {\n                    workchain: senderAddress.wc,\n                    address_hash: '0x' + TonWeb.utils.bytesToHex(senderAddress.hashPart),\n                },\n                tx_hash: '0x' + TonWeb.utils.bytesToHex(TonWeb.utils.base64ToBytes(t.transaction_id.hash)),\n                lt: t.transaction_id.lt,\n            },\n            time: Number(t.utime)\n        };\n    }\n}","import Web3 from \"web3\";\nimport {EvmTransaction, hash, TonTransaction, TonTxID} from \"./BridgeCommon\";\nimport TonWeb from \"tonweb\";\nimport {Log, TransactionReceipt} from \"web3-core\";\nimport {\n    BLOCK_CONFIRMATIONS_COUNT, parseBN, parseDecimals,\n    parseEvmAddress,\n    parseEvmBlockHash,\n    parseEvmTxHash,\n    parseNumber, parseTonAddress, parseWc\n} from \"./BridgeEvmUtils\";\nimport {findLogOutMsg, getMessageBytes, makeAddress} from \"./BridgeTonUtils\";\n\nconst BN = TonWeb.utils.BN;\n\nconst LOCK_INPUT_LENGTH = 202;\nconst LOCK_INPUT_PREFIX = '0xca3369c6';\n\n// uint256 value, uint8 decimals\nexport const lockEventDataTypes = ['uint256', 'uint8'];\n\nexport interface LockEvent extends EvmTransaction {\n    type: 'Lock';\n    transactionHash: string;\n    logIndex: number;\n    blockNumber: number;\n    blockTime: number;\n    blockHash: string;\n\n    from: string;\n    token: string;\n    to_address_hash: string; // bytes32\n    amount: string;\n    decimals: number;\n\n    rawData: string;\n    topics: string[];\n    transactionIndex: number;\n}\n\nexport interface BurnEvent extends TonTransaction { // ton event\n    type: 'Burn';\n    ethReceiver: string; // EVM-address, 160bit\n    jettonAmount: string; // VarUint 16\n    token: string; // EVM-address, 160bit\n    tx: TonTxID;\n    time: number;\n}\n\nexport interface PayJettonMintEvent extends TonTransaction {\n    type: 'PayJettonMint',\n    queryId: string; // BN\n    tx: TonTxID;\n    time: number;\n}\n\nexport class TokenBridge {\n\n    static getDataId(\n        web3: Web3,\n        event: BurnEvent,\n        target: string,\n        chainId: number\n    ): string {\n        return hash(\n            web3.eth.abi.encodeParameters(\n                [\n                    'int',\n                    'address',\n                    'uint256',\n                    'address',\n                    'address',\n                    'uint256',\n                    'bytes32',\n                    'bytes32',\n                    'uint64',\n                ],\n                [\n                    0xda7a,\n                    target,\n                    chainId,\n                    event.ethReceiver,\n                    event.token,\n                    event.jettonAmount,\n                    event.tx.address_.address_hash,\n                    event.tx.tx_hash,\n                    event.tx.lt,\n                ]\n            )\n        );\n    }\n\n    static getNewSetId(web3: Web3, setHash: number, addresses: string[], target: string, chainId: number): string {\n        return hash(\n            web3.eth.abi.encodeParameters(\n                ['int', 'address', 'uint256', 'int', 'address[]'],\n                [0x5E7, target, chainId, setHash, addresses]\n            )\n        );\n    }\n\n    static getNewLockStatusId(web3: Web3, newLockStatus: boolean, nonce: number, target: string, chainId: number): string {\n        return hash(\n            web3.eth.abi.encodeParameters(\n                ['int', 'address', 'uint256', 'bool', 'int'],\n                [0xB012, target, chainId, newLockStatus, nonce]\n            )\n        );\n    }\n\n    static findLog = (web3: Web3, from: string, amount: string, addressHash: string, token: string, logs: Log[]): Log | null => {\n        let count = 0;\n        let result: Log | null = null;\n        for (const log of logs) {\n            if (\n                log.topics.length === 4 &&\n                log.topics[1].toLowerCase().endsWith(from.substr(2)) &&\n                log.topics[2].toLowerCase().endsWith(token.substr(2)) &&\n                log.topics[3] === '0x' + addressHash\n            ) {\n                const decoded = web3.eth.abi.decodeParameters(\n                    lockEventDataTypes,\n                    log.data\n                );\n                if (decoded[0] === amount) {\n                    result = log;\n                    count++;\n                }\n            }\n        }\n        if (count > 1) throw new Error('too many logs');\n        return result;\n    }\n\n    static createMultisigMsgBody(lockEvent: LockEvent, queryId: any /* BN */, chainId: number): any /* BitString */ {\n        const payload = new TonWeb.boc.Cell();\n        payload.bits.writeUint(4, 32); // op\n        payload.bits.writeUint(queryId, 64); //query id for execute voting\n        payload.bits.writeUint(0, 8); // execute voting op\n        payload.bits.writeUint(\n            new TonWeb.utils.BN(lockEvent.transactionHash.slice(2), 16),\n            256\n        );\n        payload.bits.writeInt(lockEvent.logIndex, 16);\n        payload.bits.writeUint(\n            new TonWeb.utils.BN(lockEvent.to_address_hash, 16),\n            256\n        );\n        payload.bits.writeCoins(new TonWeb.utils.BN(lockEvent.amount)); // mint_jetton_amount\n        payload.bits.writeCoins(new TonWeb.utils.BN(0)); // forward_coins_amount\n\n        const wrappedTokenData = new TonWeb.boc.Cell();\n        wrappedTokenData.bits.writeUint(chainId, 32);\n        wrappedTokenData.bits.writeUint(\n            new TonWeb.utils.BN(lockEvent.token.slice(2), 16),\n            160\n        );\n        wrappedTokenData.bits.writeUint(lockEvent.decimals, 8);\n        payload.refs.push(wrappedTokenData);\n        return payload;\n    }\n\n    static isValidLock = (tx: any, bridgeAddress: string): boolean => {\n        if (tx.to.toLowerCase() !== bridgeAddress.toLowerCase()) return false;\n        if (tx.from.toLowerCase() === bridgeAddress.toLowerCase()) return false;\n        if (tx.isError !== '0') return false;\n        if (tx.txreceipt_status !== '1') return false;\n        if (!tx.input) return false;\n        if (tx.input.length !== LOCK_INPUT_LENGTH) return false;\n        if (!tx.input.startsWith(LOCK_INPUT_PREFIX)) return false;\n        if (tx.confirmations < BLOCK_CONFIRMATIONS_COUNT) return false;\n        return true;\n    }\n\n    static processEvmTransaction = async (web3: Web3, bridgeAddress: string, tx: any, receipt: TransactionReceipt, currentBlockNumber: number): Promise<LockEvent> => {\n        // parse transaction\n\n        const blockNumber = parseNumber(tx, 'blockNumber');\n        const transactionHash = parseEvmTxHash(tx, 'hash');\n        const blockTime = parseNumber(tx, 'timeStamp');\n        const blockHash = parseEvmBlockHash(tx, 'blockHash');\n        const transactionIndex = parseNumber(tx, 'transactionIndex');\n        const from = parseEvmAddress(tx, 'from');\n        const to = parseEvmAddress(tx, 'to');\n        const input = tx.input;\n\n        // parse transaction input\n\n        if (input.length !== LOCK_INPUT_LENGTH) throw new Error('invalid input length ' + input);\n        if (!input.startsWith(LOCK_INPUT_PREFIX)) throw new Error(`input ${LOCK_INPUT_PREFIX} ` + input);\n\n        // function lock(address token, uint256 amount, bytes32 to_address_hash)\n        const lockInputTypes = ['address', 'uint256', 'bytes32'];\n        const inputData = '0x' + input.slice(10); // without method signature\n        const decodedInput = web3.eth.abi.decodeParameters(lockInputTypes, inputData);\n\n        const token = parseEvmAddress(decodedInput, '0');\n        const amount = parseBN(decodedInput, '1');\n        const address_hash = parseTonAddress(decodedInput, '2');\n\n        // validate transaction\n\n        if (!receipt || Object.keys(receipt).length === 0) throw new Error('no receipt');\n        if (blockHash !== receipt.blockHash.toLowerCase()) throw new Error('invalid blockHash');\n        if (blockNumber !== receipt.blockNumber) throw new Error('invalid blockNumber');\n        if (from !== receipt.from.toLowerCase()) throw new Error('invalid from');\n        if (!receipt.status) throw new Error('invalid status');\n        if (bridgeAddress.toLowerCase() !== receipt.to.toLowerCase()) throw new Error('invalid to');\n        if (transactionHash !== receipt.transactionHash.toLowerCase()) throw new Error('invalid transactionHash');\n        if (transactionIndex !== receipt.transactionIndex) throw new Error('invalid transactionIndex');\n\n        const log = TokenBridge.findLog(web3, from, amount, address_hash, token, receipt.logs);\n        if (!log) throw new Error('cant find log');\n        const logIndex = parseNumber(log, 'logIndex');\n\n        if (currentBlockNumber - receipt.blockNumber < BLOCK_CONFIRMATIONS_COUNT) {\n            throw new Error('No block confirmations ' + (currentBlockNumber - receipt.blockNumber) + '(' + currentBlockNumber + '-' + receipt.blockNumber + ')');\n        }\n\n        const decoded = web3.eth.abi.decodeParameters(lockEventDataTypes, log.data);\n        const decimals = parseDecimals(decoded, 1);\n\n        return {\n            type: 'Lock',\n            transactionHash,\n            logIndex,\n            blockNumber,\n            blockTime,\n            blockHash,\n\n            from,\n            token,\n            to_address_hash: address_hash,\n            amount,\n            decimals,\n\n            rawData: log.data,\n            topics: log.topics,\n            transactionIndex,\n        }\n    }\n\n    /**\n     * @param t transaction from ton-http-api\n     */\n    static processTonTransaction = (t: any): BurnEvent | null => {\n\n        // find log message\n\n        const logMsg = findLogOutMsg(t.out_msgs);\n        if (!logMsg) {\n            return null;\n        }\n\n        const bytes = getMessageBytes(logMsg);\n        if (bytes === null) {\n            return null;\n        }\n\n        // parse log message\n\n        const destinationAddress = makeAddress('0x' + TonWeb.utils.bytesToHex(bytes.slice(0, 20)));\n        const amountHex = TonWeb.utils.bytesToHex(bytes.slice(20, 36));\n        const amount = new BN(amountHex, 16);\n        const tokenAddress = makeAddress('0x' + TonWeb.utils.bytesToHex(bytes.slice(36, 56)));\n        const userSenderAddressHex = TonWeb.utils.bytesToHex(bytes.slice(56, 56 + 32))\n        const minterSenderAddress = new TonWeb.utils.Address(t.in_msg.source);\n\n        return {\n            type: 'Burn',\n            ethReceiver: destinationAddress,\n            token: tokenAddress,\n            jettonAmount: amount.toString(),\n            tx: {\n                address_: {\n                    workchain: 0,\n                    address_hash: '0x' + userSenderAddressHex\n                },\n                tx_hash:\n                    '0x' +\n                    TonWeb.utils.bytesToHex(\n                        TonWeb.utils.base64ToBytes(t.transaction_id.hash),\n                    ),\n                lt: t.transaction_id.lt,\n            },\n            time: Number(t.utime),\n        };\n    }\n\n    /**\n     * @param t transaction from ton-http-api\n     */\n    static processPayJettonMintTransaction = (t: any): PayJettonMintEvent | null => {\n\n        // find log message\n\n        const logMsg = findLogOutMsg(t.out_msgs);\n        if (!logMsg) {\n            return null;\n        }\n\n        const bytes = getMessageBytes(logMsg);\n        if (bytes === null) {\n            return null;\n        }\n\n        // parse log message\n        const queryIdHex = TonWeb.utils.bytesToHex(bytes.slice(0, 8));\n        const queryId = new BN(queryIdHex, 16);\n        const userSenderAddress = new TonWeb.utils.Address(t.in_msg.source);\n\n        return {\n            type: 'PayJettonMint',\n            queryId: queryId.toString(),\n            tx: {\n                address_: {\n                    workchain: userSenderAddress.wc,\n                    address_hash: '0x' + TonWeb.utils.bytesToHex(userSenderAddress.hashPart)\n                },\n                tx_hash:\n                    '0x' +\n                    TonWeb.utils.bytesToHex(\n                        TonWeb.utils.base64ToBytes(t.transaction_id.hash),\n                    ),\n                lt: t.transaction_id.lt,\n            },\n            time: Number(t.utime),\n        };\n    }\n\n}","import {EvmTransaction, getQueryId} from \"./BridgeCommon\";\nimport TonWeb from \"tonweb\";\nimport {sendInternal, getNumber} from \"./BridgeTonUtils\";\nimport {WalletContract} from \"tonweb/dist/types/contract/wallet/wallet-contract\";\n\nexport function getMultisigWalletId(chainId: number): number {\n    switch (chainId) {\n        case 56: // BSC mainnet\n            return 3;\n        case 97: // BSC testnet\n            return 3;\n        case 1: // ETH mainnet\n            return 4;\n        case 5: // ETH testnet Goerli\n            return 5;\n    }\n    throw new Error('unknown chainId ' + chainId);\n}\n\nexport async function getVotesInMultisig(tonweb: TonWeb, tonMultisigAddress: string, queryId: string, oraclesTotal: number): Promise<null | number[]> {\n    console.log(\"getVotesInMultisig \", queryId);\n\n    const result: any = await tonweb.provider.call(tonMultisigAddress, 'get_query_state', [[\"num\", queryId]]);\n\n    const a = getNumber(result.stack[0]);\n    const b = getNumber(result.stack[1]);\n\n    const arr: number[] = [];\n\n    const count = a === -1 ? oraclesTotal : b.toString(2).split('0').join('').length; // count of bits\n\n    for (let i = 0; i < count; i++) {\n        arr.push(1);\n    }\n    return arr;\n}\n\nexport async function hasMyVoteInMultisig(tonweb: TonWeb, tonMultisigAddress: string, tonMultisigIndex: number, ethToTon: EvmTransaction): Promise<boolean> {\n    const queryId = getQueryId(ethToTon).toString();\n\n    console.log('hasMyVoteInMultisig ', queryId);\n\n    const result: any = await tonweb.provider.call(tonMultisigAddress, 'message_signed_by_id?', [['num', tonMultisigIndex], ['num', queryId]]);\n    console.log('hasMyVoteInMultisig raw result', result);\n    const stack: any[] = result.stack;\n\n    return getNumber(stack[0]) === -1;\n}\n\nexport async function sendToMultisig(tonweb: TonWeb, wallet: WalletContract, secretKey: Uint8Array, tonMultisigAddress: string, tonMultisigIndex: number, chainId: number, tonBridgeAddress: string, ethToTon: EvmTransaction, payload: any /* Cell */): Promise<boolean> {\n    const myAddress = await wallet.getAddress();\n    const queryId = getQueryId(ethToTon);\n    console.log('sendToMultisig', ethToTon, 'from ' + myAddress.toString(true) + ' with query id ' + queryId.toString() + ' and index ' + tonMultisigIndex + ' to ' + tonMultisigAddress);\n\n    const WALLET_ID = getMultisigWalletId(chainId);\n\n    const orderHeader = TonWeb.Contract.createInternalMessageHeader(new TonWeb.utils.Address(tonBridgeAddress), TonWeb.utils.toNano('0.5'));\n    const msgToBridge = TonWeb.Contract.createCommonMsgInfo(orderHeader, undefined, payload);\n\n    const cell = new TonWeb.boc.Cell();\n    cell.bits.writeUint(tonMultisigIndex, 8);\n    cell.bits.writeBit(0); // null signatures dict\n    cell.bits.writeUint(WALLET_ID, 32);\n    cell.bits.writeUint(queryId, 64);\n    cell.bits.writeUint(3, 8); // send mode 3\n    cell.refs.push(msgToBridge);\n\n    const rootHash: Uint8Array = await cell.hash();\n    const rootSignature: Uint8Array = TonWeb.utils.nacl.sign.detached(rootHash, secretKey);\n\n    const body = new TonWeb.boc.Cell();\n    body.bits.writeBytes(rootSignature);\n    body.writeCell(cell);\n    return sendInternal(tonweb, wallet, secretKey, body, tonMultisigAddress);\n}","\nimport { MaxInt256 } from \"@ethersproject/constants\";\nimport { formatUnits, parseUnits } from \"@ethersproject/units\";\nimport BN from \"bn.js\";\nimport { ethers } from \"ethers\";\nimport { debounce } from \"lodash\";\nimport QRCodeStyling, { Options } from \"qr-code-styling\";\nimport TonWeb from \"tonweb\";\nimport { defineComponent, PropType } from \"vue\";\nimport { mapMutations } from \"vuex\";\nimport Web3 from \"web3\";\nimport { AbiItem } from \"web3-utils\";\n\nimport BRIDGE from \"@/ton-bridge-lib/abi/TokenBridge.json\";\nimport WTON_BRIDGE from \"@/ton-bridge-lib/abi/WTON.json\";\nimport {\n  getJettonWalletAddress,\n  getJettonWalletData,\n  getWrappedTokenData,\n} from \"@/ton-bridge-lib/BridgeJettonUtils\";\nimport {burnJetton, mintJetton} from \"@/api/tonWallet\";\nimport { onCopyClick } from \"@/utils\";\nimport { PARAMS } from \"@/utils/constants\";\nimport {\n  getEvmSignaturesFromCollector,\n  parseEvmSignature\n} from \"@/ton-bridge-lib/BridgeCollector\";\nimport {\n  getQueryId\n} from \"@/ton-bridge-lib/BridgeCommon\";\nimport { Provider } from \"@/utils/providers/provider\";\nimport { BridgeContract } from \"@/utils/services/Bridge.contract\";\nimport { ERC20Contract } from \"@/utils/services/ERC20.contract\";\n\nimport {\n  ComponentData,\n  ProviderDataForJettons,\n  ProviderDataForTON,\n} from \"./types\";\nimport {SwapTonToEth, ToncoinBridge} from \"@/ton-bridge-lib/ToncoinBridge\";\nimport {BurnEvent, TokenBridge} from \"@/ton-bridge-lib/TokenBridge\";\nimport {EvmSignature} from \"@/ton-bridge-lib/BridgeCollector\";\nimport {findLogOutMsg, getMessageBytes, getNumber, makeAddress} from \"@/ton-bridge-lib/BridgeTonUtils\";\nimport {getVotesInMultisig} from \"@/ton-bridge-lib/BridgeMultisig\";\n\nconst fromNano = TonWeb.utils.fromNano;\n\nexport default defineComponent({\n  props: {\n    isTestnet: {\n      type: Boolean,\n      required: true,\n    },\n    isRecover: {\n      type: Boolean,\n      required: true,\n    },\n    lt: {\n      type: Number,\n      required: true,\n    },\n    hash: {\n      type: String,\n      required: true,\n    },\n    isFromTon: {\n      type: Boolean,\n      required: true,\n    },\n    pair: {\n      type: String,\n      required: true,\n    },\n    tokenAddress: { type: String, required: true },\n    tokenSymbol: { type: String, required: true },\n    amount: {\n      type: Object as PropType<BN>,\n      required: true,\n    },\n    token: {\n      type: String,\n      required: true,\n    },\n\n    toAddress: {\n      type: String,\n      required: true,\n    },\n    provider: {\n      type: Object as PropType<Provider>,\n      required: true,\n    },\n    isInputsValid: {\n      type: Boolean,\n      required: true,\n    },\n  },\n\n  data(): ComponentData {\n    return {\n      updateStateIntervalForTon: null,\n      updateStateIntervalForJettons: null,\n      providerDataForTon: null,\n      providerDataForJettons: null,\n      ethToTon: null,\n      isInitInProgress: false,\n      isMintingInProgress: false,\n      isApprovingInProgress: false,\n      isBurningInProgress: false,\n      isLockingInProgress: false,\n\n      isQRCodeShown: false,\n      hasApprove: false,\n\n      state: {\n        swapId: \"\",\n        queryId: \"0\",\n        jettonEvmAddress: \"\",\n        fromCurrencySent: false,\n        toCurrencySent: false,\n        step: 0,\n        votes: null,\n        swapData: null,\n        burnData: null,\n        createTime: 0,\n        blockNumber: 0,\n      },\n    };\n  },\n\n  computed: {\n    netTypeName(): string {\n      return this.isTestnet ? \"test\" : \"main\";\n    },\n    params() {\n      const pairParams = PARAMS.networks[this.pair];\n      return pairParams[this.netTypeName as keyof typeof pairParams];\n    },\n    isGetTonCoinVisible(): boolean {\n      if (this.token === \"ton\") {\n        return (\n            this.isFromTon && !this.state.toCurrencySent && this.state.step === 4\n        );\n      } else {\n        if (this.isFromTon) {\n          return (\n              !this.state.toCurrencySent && this.state.step === 4\n          );\n        } else {\n          return this.state.step == 3;\n        }\n      }\n    },\n    isDoneVisible(): boolean {\n      return this.state.step > 4;\n    },\n    isCancelVisible(): boolean {\n      return this.isFromTon && this.state.step === 1;\n    },\n    fromCoin() {\n      return this.isFromTon\n        ? this.$t(`networks.ton.${this.netTypeName}.coinShort`)\n        : this.$t(`networks.${this.pair}.${this.netTypeName}.coinShort`);\n    },\n    toCoin() {\n      if (this.token === \"ton\") {\n        return !this.isFromTon\n          ? this.$t(`networks.ton.${this.netTypeName}.coinShort`)\n          : this.$t(`networks.${this.pair}.${this.netTypeName}.coinShort`);\n      } else {\n        return this.tokenSymbol;\n      }\n    },\n    getStepInfoText1() {\n      if (this.state.step === 1) {\n        if (this.isFromTon) {\n          if (this.token === \"ton\") {\n            const url = PARAMS.tonTransferUrl\n              .replace(\"<BRIDGE_ADDRESS>\", this.params.tonBridgeAddress)\n              .replace(\"<AMOUNT>\", this.amount.toString())\n              .replace(\"<TO_ADDRESS>\", this.toAddress);\n            return {\n              isOnlyText: false,\n              send1: this.$t(\"networks.ton.transactionSend1\"),\n              amountReadable: fromNano(this.amount),\n              send2: this.$t(\"networks.ton.transactionSend2\"),\n              toAddress: this.params.tonBridgeAddress,\n              withComment: this.$t(\"networks.ton.transactionSendComment\"),\n              comment: \"swapTo#\" + this.toAddress,\n              openWalletLabel: this.$t(\"networks.ton.openWallet\"),\n              openWalletUrl: url,\n              generateQRCode: this.isQRCodeShown\n                ? \"\"\n                : this.$t(\"networks.ton.generateQRCode\"),\n              scanQRCode: this.isQRCodeShown\n                ? this.$t(\"networks.ton.scanQRCode\")\n                : \"\",\n            };\n          } else return {};\n        } else {\n          return {\n            isOnlyText: true,\n            text: this.state.fromCurrencySent\n              ? this.$t(`networks.${this.pair}.transactionWait`)\n              : this.$t(`networks.${this.pair}.transactionSend`, {\n                  provider: this.provider.title,\n                }),\n          };\n        }\n      } else {\n        const pair = this.isFromTon ? \"ton\" : this.pair;\n        return {\n          isOnlyText: true,\n          text: this.$t(`networks.${pair}.transactionCompleted`),\n        };\n      }\n    },\n    getStepInfoText2(): string {\n      if (this.isFromTon) {\n        return \"\";\n      }\n      const providerData =\n        this.token === \"ton\"\n          ? this.providerDataForTon\n          : this.providerDataForJettons;\n\n      if (this.state.step === 2) {\n        let blocksConfirmations =\n          (providerData?.blockNumber || this.state.blockNumber) -\n          this.state.blockNumber;\n        blocksConfirmations = Math.max(\n          Math.min(blocksConfirmations, this.params.blocksConfirmations),\n          0\n        );\n        return this.$t(`networks.${this.pair}.blocksConfirmations`, {\n          count:\n            String(blocksConfirmations) +\n            \"/\" +\n            String(this.params.blocksConfirmations),\n        });\n      } else if (this.state.step > 2) {\n        return this.$t(\"blocksConfirmationsCollected\");\n      } else {\n        return this.$t(\"blocksConfirmationsWaiting\");\n      }\n    },\n    getStepInfoText3(): string {\n      if (this.token !== \"ton\" && !this.isFromTon) {\n        return this.getGetCoinsText(3);\n      } else {\n        return this.getOraclesText(3);\n      }\n    },\n    getStepInfoText4(): string {\n      if (this.token !== \"ton\" && !this.isFromTon) {\n        return this.getOraclesText(4);\n      } else {\n        return this.getGetCoinsText(4);\n      }\n    },\n  },\n\n  watch: {\n    \"state.step\": {\n      immediate: true,\n      handler(val) {\n        this.$emit(\"state-changed\");\n        this.$emit(\"transfer-in-progress\", val > 0);\n      },\n    },\n    token: {\n      immediate: true,\n      handler(newValue) {\n        this.onTokenChange(newValue);\n      },\n    },\n  },\n\n  mounted() {\n    this.$watch(\n      () => [this.amount],\n      debounce(async ([newAmount]: any) => {\n        this.checkApprove(newAmount);\n      }, 300)\n    );\n\n    this.$emit(\"ready\");\n  },\n\n  beforeDestroy() {\n    clearInterval(\n      this.updateStateIntervalForTon as ReturnType<typeof setInterval>\n    );\n    clearInterval(\n      this.updateStateIntervalForJettons as ReturnType<typeof setInterval>\n    );\n  },\n\n  methods: {\n    onCopyClick,\n    makeAddress,\n    parseEvmSignature,\n    getQueryId,\n    ...mapMutations({ setAlert: \"setAlert\" }),\n    async mint() {\n      if (this.isFromTon) {\n        if (this.token === \"ton\") {\n          await this.mintForTon();\n        } else {\n          await this.unlockForJettons();\n        }\n      } else {\n        if (this.token === \"ton\") {\n          throw new Error('can never happen');\n        } else {\n          await this.mintJetton();\n        }\n      }\n    },\n    onTokenChange(newValue: string) {\n      clearInterval(\n        this.updateStateIntervalForTon as ReturnType<typeof setInterval>\n      );\n      clearInterval(\n        this.updateStateIntervalForJettons as ReturnType<typeof setInterval>\n      );\n\n      if (newValue === \"ton\") {\n        this.updateStateForTon();\n        this.updateStateIntervalForTon = setInterval(\n          this.updateStateForTon,\n          5000\n        );\n      } else {\n        this.updateStateForJettons();\n        this.updateStateIntervalForJettons = setInterval(\n          this.updateStateForJettons,\n          5000\n        );\n      }\n    },\n\n    async checkApprove(amount: BN) {\n      if (!this.isFromTon && this.token !== \"ton\" && this.tokenAddress) {\n        console.log(\"checkApprove\");\n        const erc20Contract = new ERC20Contract(this.provider);\n        if (Web3.utils.isAddress(this.tokenAddress)) {\n          const userErcBalance = await erc20Contract.allowance({\n            address: this.tokenAddress,\n            spender: this.params.tonBridgeV2EVMAddress,\n            owner: this.provider.myAddress,\n          });\n          if (amount.gt(new BN(userErcBalance.toString()))) {\n            this.hasApprove = false;\n          } else {\n            this.hasApprove = true;\n            console.log(\"this.hasApprove\", this.hasApprove);\n          }\n        } else {\n          this.hasApprove = false;\n        }\n      }\n    },\n\n    async approve() {\n      this.isApprovingInProgress = true;\n      const erc20Contract = new ERC20Contract(this.provider);\n\n      const amount = MaxInt256.toString();\n      try {\n        const tx = await erc20Contract.approve({\n          address: this.tokenAddress,\n          spender: this.params.tonBridgeV2EVMAddress,\n          amount,\n        });\n        await tx.wait();\n        this.hasApprove = true;\n        this.isApprovingInProgress = false;\n      } catch (e: any) {\n        console.error(e);\n        this.isApprovingInProgress = false;\n\n        this.setAlert({\n          title: this.$t(\"errors.alertTitleError\"),\n          message: e.message,\n          buttonLabel: this.$t(\"errors.alertButtonClose\"),\n        });\n      }\n    },\n\n    getOraclesText(oraclesStep: number): string {\n      if (this.state.step === oraclesStep) {\n        const providerData =\n            this.token === \"ton\"\n                ? this.providerDataForTon\n                : this.providerDataForJettons;\n\n        const votesConfirmations =\n            (this.state.votes?.length || 0) +\n            \"/\" +\n            (providerData?.oraclesTotal || 0);\n        return this.$t(\"oraclesConfirmations\", {\n          count: String(votesConfirmations),\n        });\n      } else if (this.state.step > oraclesStep) {\n        return this.$t(\"oraclesConfirmationsCollected\");\n      } else {\n        return this.$t(\"oraclesConfirmationsWaiting\");\n      }\n    },\n\n    getGetCoinsText(getCoinsStep: number): string {\n      if (this.state.step === getCoinsStep) {\n        return this.state.toCurrencySent\n            ? this.$t(`networks.${this.pair}.transactionWait`)\n            : this.$t(\"getCoinsByProvider\", {\n              provider: this.token === 'ton' ? this.provider.title : 'TON Wallet',\n              toCoin: this.toCoin,\n            });\n      } else if (this.state.step > getCoinsStep) {\n        return this.$t(\"coinsSent\", { toCoin: this.toCoin });\n      } else {\n        const pair = this.isFromTon ? this.pair : \"ton\";\n        return this.$t(\"getCoins\", {\n          toCoin: this.toCoin,\n          toNetwork: this.$t(`networks.${pair}.${this.netTypeName}.name`),\n        });\n      }\n    },\n\n    generateQRCode() {\n      this.isQRCodeShown = true;\n\n      const url = PARAMS.tonTransferUrl\n        .replace(\"<BRIDGE_ADDRESS>\", this.params.tonBridgeAddress)\n        .replace(\"<AMOUNT>\", this.amount.toString())\n        .replace(\"<TO_ADDRESS>\", this.toAddress);\n\n      const options: Partial<Options> = {\n        data: url,\n        width: 225 * window.devicePixelRatio,\n        height: 225 * window.devicePixelRatio,\n        image: require(\"@/assets/pics/gem@large.png\"),\n        dotsOptions: {\n          color: \"#000000\",\n          type: \"extra-rounded\",\n        },\n        cornersSquareOptions: {\n          color: \"#000000\",\n          type: \"extra-rounded\",\n        },\n        cornersDotOptions: {\n          color: \"#000000\",\n          type: \"dot\",\n        },\n        imageOptions: {\n          hideBackgroundDots: true,\n          crossOrigin: \"use-credentials\",\n          imageSize: 1,\n        },\n        qrOptions: {\n          errorCorrectionLevel: \"L\",\n        },\n      };\n\n      const qrCode = new QRCodeStyling(options);\n      qrCode.append(this.$refs.qrcode as HTMLElement);\n    },\n    resetState() {\n      this.state.swapId = \"\";\n      this.state.queryId = \"0\";\n      this.state.jettonEvmAddress = \"\";\n      this.state.fromCurrencySent = false;\n      this.state.toCurrencySent = false;\n      this.state.step = 0;\n      this.state.votes = null;\n      this.state.swapData = null;\n      this.state.burnData = null;\n      this.state.createTime = 0;\n      this.state.blockNumber = 0;\n\n      this.isQRCodeShown = false;\n\n      this.$emit(\"reset-state\");\n    },\n    async loadState({ processingState }: any): Promise<boolean> {\n      if (!processingState) {\n        return false;\n      }\n\n      this.isInitInProgress = true;\n\n      if (\n        (processingState as any).token === \"ton\" &&\n        !this.providerDataForTon\n      ) {\n        this.providerDataForTon = await this.initProviderForTON();\n      } else if (!this.providerDataForJettons) {\n        this.providerDataForJettons = await this.initProviderForJettons();\n      }\n\n      this.isInitInProgress = false;\n\n      if (!this.providerDataForTon && !this.providerDataForJettons) {\n        return false;\n      }\n      Object.assign(this.state, processingState);\n      this.ethToTon = processingState.ethToTon;\n\n      if ((processingState as any).token === \"ton\") {\n        this.updateStateForTon();\n      } else {\n        this.updateStateForJettons();\n      }\n\n      return true;\n    },\n    saveState() {\n      this.$emit(\"save-state\", {\n        ...this.state,\n        isFromTon: this.isFromTon,\n        token: this.token,\n        tokenAddress: this.tokenAddress,\n        ethToTon: this.ethToTon,\n      });\n    },\n    deleteState() {\n      this.$emit(\"delete-state\");\n    },\n    async updateStateForTon() {\n      if (this.state.step === 1 && this.isFromTon) {\n        const swap = await this.getSwapForTON(\n          this.amount,\n          this.toAddress,\n          this.state.createTime\n        );\n        if (swap) {\n          this.state.swapId = this.getSwapTonToEthIdForTon(swap);\n          this.state.swapData = swap;\n          this.state.step = 3;\n        }\n      }\n\n      if (this.state.step === 2 && !this.isFromTon) {\n        const blockNumber = await this.provider.web3!.eth.getBlockNumber();\n        this.providerDataForTon!.blockNumber = blockNumber;\n\n        console.log(\n          this.providerDataForTon?.blockNumber,\n          this.state.blockNumber\n        );\n        const blocksConfirmations =\n          (this.providerDataForTon?.blockNumber || this.state.blockNumber) -\n          this.state.blockNumber;\n\n        if (blocksConfirmations > this.params.blocksConfirmations) {\n          const receipt = await this.provider.web3!.eth.getTransactionReceipt(\n              this.ethToTon!.transactionHash\n          );\n          this.ethToTon!.blockNumber = receipt.blockNumber;\n          const block = await this.provider.web3!.eth.getBlock(\n              receipt.blockNumber\n          );\n          this.ethToTon!.blockTime = Number(block.timestamp);\n          this.ethToTon!.blockHash = block.hash;\n          const log = ToncoinBridge.findLog(this.provider.web3!, this.ethToTon!.from, this.ethToTon!.value, this.ethToTon!.to.workchain.toString(), this.ethToTon!.to.address_hash, receipt.logs);\n          if (!log) throw new Error('cant find log');\n          this.ethToTon!.logIndex = log.logIndex;\n\n          this.state.queryId = this.getQueryId(this.ethToTon!).toString();\n          this.state.step = 3;\n        }\n      }\n\n      if (this.state.step === 3) {\n        this.state.votes = this.isFromTon\n          ? await this.getEthVoteForTON(this.state.swapId)\n          : await this.getTonVoteForTON(this.state.queryId);\n        if (\n          this.state.votes &&\n          this.state.votes!.length >=\n            (this.providerDataForTon!.oraclesTotal * 2) / 3\n        ) {\n          this.state.step = this.isFromTon ? 4 : 5;\n          if (this.isFromTon) {\n            this.$emit(\"ready-to-mint\");\n          }\n        }\n      }\n    },\n    async updateStateForJettons() {\n      if (this.state.step === 1 && this.isFromTon) {\n        await this.getSwapForJettons(this.toAddress, this.state.createTime);\n      }\n\n      if (this.state.step === 2 && !this.isFromTon) {\n        const blockNumber = await this.provider.web3!.eth.getBlockNumber();\n        this.providerDataForJettons!.blockNumber = blockNumber;\n\n        console.log(\n          this.providerDataForJettons?.blockNumber,\n          this.state.blockNumber\n        );\n        const blocksConfirmations =\n          (this.providerDataForJettons?.blockNumber || this.state.blockNumber) -\n          this.state.blockNumber;\n\n        if (blocksConfirmations > this.params.blocksConfirmations) {\n          const receipt = await this.provider.web3!.eth.getTransactionReceipt(\n              this.ethToTon!.transactionHash\n          );\n          this.ethToTon!.blockNumber = receipt.blockNumber;\n          const block = await this.provider.web3!.eth.getBlock(\n            receipt.blockNumber\n          );\n\n          this.ethToTon!.blockTime = Number(block.timestamp);\n          this.ethToTon!.blockHash = block.hash;\n\n          const log = TokenBridge.findLog(this.provider.web3!, this.ethToTon!.from, this.ethToTon!.value, this.ethToTon!.to.address_hash, this.tokenAddress.toLowerCase(), receipt.logs);\n          if (!log) throw new Error('cant find log');\n          this.ethToTon!.logIndex = log.logIndex;\n\n          this.state.queryId = this.getQueryId(this.ethToTon!).toString();\n          this.state.step = 3;\n        }\n      }\n\n      if (this.state.step === 3) {\n        if (this.token !== 'ton' && !this.isFromTon) {\n          const isPaid = await this.isJettonMintPaid(this.state.queryId);\n          console.log('isPaid', this.state.queryId, isPaid);\n          if (isPaid) {\n            this.state.step = 4;\n          }\n        } else {\n          this.state.votes = this.isFromTon\n              ? await this.getEthVoteForJettons(this.state.swapId)\n              : await this.getTonVoteForJettons(this.state.queryId);\n          if (\n              this.state.votes &&\n              this.state.votes!.length >=\n              (this.providerDataForJettons!.oraclesTotal * 2) / 3\n          ) {\n            this.state.step = 4;\n            this.$emit(\"ready-to-mint\");\n          }\n        }\n      }\n\n      if (this.state.step === 4) {\n        if (this.token !== 'ton' && !this.isFromTon) {\n          this.state.votes = await this.getTonVoteForJettons(this.state.queryId);\n          if (\n              this.state.votes &&\n              this.state.votes!.length >=\n              (this.providerDataForJettons!.oraclesTotal * 2) / 3\n          ) {\n            this.state.step = 5;\n          }\n        }\n      }\n    },\n    getSwapTonToEthIdForTon(d: SwapTonToEth): string {\n      const target = this.pair === \"eth\" && !this.isTestnet ? undefined : this.params.wTonAddress;\n      return ToncoinBridge.getDataId(this.provider.web3!, d, target)\n    },\n    getSwapTonToEthIdForJettons(d: BurnEvent): string {\n      return TokenBridge.getDataId(this.provider.web3!, d, this.params.tonBridgeV2EVMAddress, this.params.chainId);\n    },\n\n    getFeeAmountForTon(amount: BN): BN {\n      const rest = amount.sub(this.providerDataForTon!.feeFlat);\n      const percentFee = rest\n        .mul(this.providerDataForTon!.feeFactor)\n        .div(this.providerDataForTon!.feeBase);\n      return this.providerDataForTon!.feeFlat.add(percentFee);\n    },\n\n    async getSwapForTON(\n      myAmount: BN,\n      myToAddress: string,\n      myCreateTime: number\n    ): Promise<null | SwapTonToEth> {\n      console.log(\n        \"getTransactions\",\n        this.params.tonBridgeAddress,\n        this.lt && this.hash ? 1 : this.isRecover ? 200 : 40,\n        this.lt || undefined,\n        this.hash || undefined,\n        undefined,\n        this.lt && this.hash ? true : undefined\n      );\n      const transactions =\n        await this.providerDataForTon!.tonweb.provider.getTransactions(\n          this.params.tonBridgeAddress,\n          this.lt && this.hash ? 1 : this.isRecover ? 200 : 40,\n          this.lt || undefined,\n          this.hash || undefined,\n          undefined,\n          this.lt && this.hash ? true : undefined\n        );\n      console.log(\"ton txs\", transactions.length);\n\n\n      for (const t of transactions) {\n        if (!this.isRecover && !(this.lt && this.hash)) {\n          if (t.utime * 1000 < myCreateTime) continue;\n        }\n\n        const event = ToncoinBridge.processTonTransaction(t);\n\n        if (event) {\n\n          console.log(JSON.stringify(event));\n\n          const amountAfterFee = myAmount.sub(this.getFeeAmountForTon(myAmount));\n\n          if (\n            new BN(event.amount).eq(amountAfterFee) &&\n            event.receiver.toLowerCase() === myToAddress.toLowerCase()\n          ) {\n            return event;\n          }\n        }\n      }\n      return null;\n    },\n\n    async isJettonMintPaid(queryId: string): Promise<boolean> {\n      const transactions: any[] =\n          await this.providerDataForJettons!.tonweb.provider.getTransactions(\n              this.params.tonBridgeAddressV2,\n              40,\n          );\n\n      console.log(\"ton txs\", transactions.length);\n\n      for (const t of transactions) {\n        const event = TokenBridge.processPayJettonMintTransaction(t);\n        console.log(event);\n        if (event && event.queryId === queryId) {\n            return true;\n        }\n      }\n      return false;\n    },\n\n    async getSwapForJettons(\n      // myAmount: BN,\n      myToAddress: string,\n      myCreateTime: number\n    ): Promise<null | BurnEvent> {\n      console.log(\n        \"getTransactions\",\n        this.params.tonBridgeAddressV2,\n        this.lt && this.hash ? 1 : this.isRecover ? 200 : 40,\n        this.lt || undefined,\n        this.hash || undefined,\n        undefined,\n        this.lt && this.hash ? true : undefined\n      );\n      const transactions: any[] =\n        await this.providerDataForJettons!.tonweb.provider.getTransactions(\n          this.params.tonBridgeAddressV2,\n          this.lt && this.hash ? 1 : this.isRecover ? 200 : 40,\n          this.lt || undefined,\n          this.hash || undefined,\n          undefined,\n          this.lt && this.hash ? true : undefined\n        );\n      console.log(\"ton txs\", transactions.length);\n\n      for (const t of transactions) {\n        if (!this.isRecover && !(this.lt && this.hash)) {\n          if (t.utime * 1000 < myCreateTime) continue;\n        }\n\n        const event = TokenBridge.processTonTransaction(t);\n\n        if (event) {\n\n          console.log(JSON.stringify(event));\n\n          if (\n            event.ethReceiver.toLowerCase() === myToAddress.toLowerCase() &&\n            this.state.jettonEvmAddress.toLocaleLowerCase() ===\n              event.token.toLocaleLowerCase()\n          ) {\n            if (event) {\n              const swapId = this.getSwapTonToEthIdForJettons(event);\n              let isVotingFinished = true;\n              try {\n                isVotingFinished =\n                  await this.providerDataForJettons!.bridgeContract.methods.finishedVotings(\n                    swapId\n                  ).call();\n              } catch (error) {\n                console.error(error);\n                return null;\n              }\n              if (!isVotingFinished) {\n                this.state.swapId = this.getSwapTonToEthIdForJettons(event);\n                this.state.burnData = event;\n                this.state.step = 3;\n              }\n            }\n            return null;\n          }\n        }\n      }\n      return null;\n    },\n    async getEthVoteForTON(voteId: string): Promise<null | EvmSignature[]> {\n      const result = await getEvmSignaturesFromCollector(this.providerDataForTon!.tonweb as any, this.params.tonCollectorAddress, voteId);\n      return result ? result.signatures : null;\n    },\n    async getEthVoteForJettons(voteId: string): Promise<null | EvmSignature[]> {\n      const result = await getEvmSignaturesFromCollector(this.providerDataForJettons!.tonweb as any, this.params.tonCollectorAddressV2, voteId);\n      return result ? result.signatures : null;\n    },\n    async getTonVoteForTON(queryId: string): Promise<null | number[]> {\n      return getVotesInMultisig(this.providerDataForTon!.tonweb as any, this.params.tonMultisigAddress, queryId, this.providerDataForTon!.oraclesTotal);\n    },\n    async getTonVoteForJettons(queryId: string): Promise<null | number[]> {\n      return getVotesInMultisig(this.providerDataForJettons!.tonweb as any, this.params.tonMultisigAddressV2, queryId, this.providerDataForJettons!.oraclesTotal);\n    },\n    onDoneClick() {\n      this.deleteState();\n      this.resetState();\n    },\n    onCancelClick() {\n      this.deleteState();\n      this.resetState();\n    },\n    async checkProviderIsReady(): Promise<boolean> {\n      try {\n        if (!this.provider.isConnected) {\n          const error = this.$t(\"errors.providerIsDisconnected\", {\n            provider: this.provider.title,\n          });\n          throw new Error(error);\n        }\n\n        if (!this.provider.myAddress) {\n          throw new Error(this.$t(\"errors.cantGetAddress\"));\n        }\n\n        if (this.provider.chainId !== this.params.chainId) {\n          const error = this.$t(\"errors.wrongProviderNetwork\", {\n            network: this.$t(`networks.${this.pair}.${this.netTypeName}.name`),\n            provider: this.provider.title,\n          });\n          throw new Error(error);\n        }\n\n        if (\n          !new BN(\n            await this.provider.web3!.eth.getBalance(this.provider.myAddress)\n          ).gt(new BN(\"0\"))\n        ) {\n          throw new Error(this.$t(`networks.${this.pair}.errors.lowBalance`));\n        }\n      } catch (e: any) {\n        console.error(e.message);\n        this.setAlert({\n          title: this.$t(\"errors.alertTitleError\"),\n          message: e.message,\n          buttonLabel: this.$t(\"errors.alertButtonClose\"),\n        });\n        return false;\n      }\n\n      return true;\n    },\n    async mintForTon() {\n      if (this.isMintingInProgress) {\n        return;\n      }\n\n      const isProviderReady = await this.checkProviderIsReady();\n\n      if (!isProviderReady) {\n        this.$emit(\"mint-failed\");\n        return;\n      }\n      this.isMintingInProgress = true;\n\n      let receipt;\n      try {\n        let signatures = (this.state.votes! as EvmSignature[]).map((v) => {\n          return {\n            signer: v.publicKey,\n            signature: ethers.utils.joinSignature({ r: v.r, s: v.s, v: v.v }),\n          };\n        });\n\n        signatures = signatures.sort((a, b) => {\n          return new BN(a.signer.substr(2), 16).cmp(\n            new BN(b.signer.substr(2), 16)\n          );\n        });\n\n        receipt =\n          await this.providerDataForTon!.wtonContract.methods.voteForMinting(\n            this.state.swapData!,\n            signatures\n          )\n            .send({ from: this.provider.myAddress })\n            .on(\"transactionHash\", () => {\n              this.state.toCurrencySent = true;\n              this.isMintingInProgress = false;\n              this.deleteState();\n            });\n      } catch (e) {\n        console.error(e);\n        this.$emit(\"mint-failed\");\n        this.isMintingInProgress = false;\n        return;\n      }\n\n      this.isMintingInProgress = false;\n\n      if (receipt.status) {\n        this.state.step = 5;\n        this.deleteState();\n        this.$emit(\"minted-successfully\");\n      } else {\n        console.error(\"transaction fail\", receipt);\n        this.$emit(\"mint-failed\");\n      }\n    },\n    async unlockForJettons() {\n      if (this.isMintingInProgress) {\n        return;\n      }\n\n      const isProviderReady = await this.checkProviderIsReady();\n\n      if (!isProviderReady) {\n        this.$emit(\"mint-failed\");\n        return;\n      }\n      let signatures = (this.state.votes! as EvmSignature[]).map((v) => {\n        return {\n          signer: v.publicKey,\n          signature: ethers.utils.joinSignature({ r: v.r, s: v.s, v: v.v }),\n        };\n      });\n\n      signatures = signatures.sort((a, b) => {\n        return new BN(a.signer.substr(2), 16).cmp(\n          new BN(b.signer.substr(2), 16)\n        );\n      });\n\n      this.isMintingInProgress = true;\n      let receipt;\n\n      try {\n        if (!this.state.burnData) return;\n        const bridgeContract = new BridgeContract(this.provider);\n        receipt = await bridgeContract.unlock({\n          bridgeAddress: this.params.tonBridgeV2EVMAddress,\n          signatures,\n          ...this.state.burnData\n        });\n        receipt = await receipt.wait();\n        this.state.fromCurrencySent = true;\n        this.isMintingInProgress = false;\n        if (receipt.status) {\n          this.state.step = 5;\n          this.deleteState();\n          this.$emit(\"minted-successfully\");\n          this.isMintingInProgress = false;\n        } else {\n          console.error(\"transaction fail\", receipt);\n          this.$emit(\"mint-failed\");\n          this.isMintingInProgress = false;\n        }\n      } catch (error) {\n        this.isMintingInProgress = false;\n\n        console.error(error);\n      }\n    },\n    async burnForTON(): Promise<void> {\n      const isProviderReady = await this.checkProviderIsReady();\n\n      if (!isProviderReady) {\n        return;\n      }\n      this.isBurningInProgress = true;\n      const fromAddress = this.provider.myAddress;\n      const toAddress = this.toAddress;\n\n      const addressTon = new TonWeb.utils.Address(toAddress);\n      const wc = addressTon.wc;\n      const hashPart = TonWeb.utils.bytesToHex(addressTon.hashPart);\n\n      let receipt;\n\n      try {\n        receipt = await this.providerDataForTon!.wtonContract.methods.burn(\n          this.amount,\n          {\n            workchain: wc,\n            address_hash: \"0x\" + hashPart,\n          }\n        )\n          .send({ from: fromAddress })\n          .on(\"transactionHash\", () => {\n            this.state.fromCurrencySent = true;\n          });\n      } catch (e) {\n        this.isBurningInProgress = false;\n        console.error(e);\n        this.resetState();\n        return;\n      }\n\n      if (receipt.status) {\n        console.log(\"receipt\", receipt);\n\n        this.state.blockNumber = receipt.blockNumber;\n        this.ethToTon = {\n          type: 'SwapEthToTon',\n          transactionHash: receipt.transactionHash,\n          logIndex: receipt.events.SwapEthToTon.logIndex,\n          blockNumber: receipt.blockNumber,\n          blockTime: 0,\n          blockHash: \"\",\n\n          from: fromAddress,\n          to: {\n            workchain: wc,\n            address_hash: hashPart,\n          },\n          value: this.amount.toString(),\n\n          rawData: receipt.rawData,\n          topics: receipt.topics,\n          transactionIndex: receipt.transactionIndex\n        };\n        this.isBurningInProgress = false;\n        this.state.step = 2;\n      } else {\n        this.isBurningInProgress = false;\n        console.error(\"transaction fail\", receipt);\n      }\n    },\n    async lockToken(): Promise<void> {\n      const isProviderReady = await this.checkProviderIsReady();\n\n      if (!isProviderReady) {\n        return;\n      }\n      this.isBurningInProgress = true;\n      const fromAddress = this.provider.myAddress;\n      const toAddress = this.toAddress;\n\n      const addressTon = new TonWeb.utils.Address(toAddress);\n      const wc = addressTon.wc;\n      if (wc !== 0) throw new Error('Only basechain wallets supported');\n      const hashPart = TonWeb.utils.bytesToHex(addressTon.hashPart);\n\n      let receipt;\n      let amountUnits: string;\n\n      try {\n        const erc20Contract = new ERC20Contract(this.provider);\n\n        const decimals = await erc20Contract.decimals({\n          address: this.tokenAddress,\n        });\n\n        amountUnits = parseUnits(this.amount.toString(), decimals).toString();\n\n        const bridgeContract = new BridgeContract(this.provider);\n        receipt = await bridgeContract.lock({\n          address: this.params.tonBridgeV2EVMAddress,\n          token: this.tokenAddress,\n          amount: amountUnits,\n          to_address_hash: \"0x\" + hashPart\n        });\n        receipt = await receipt.wait();\n\n        this.state.fromCurrencySent = true;\n      } catch (e) {\n        this.isBurningInProgress = false;\n        console.error(e);\n        this.resetState();\n        return;\n      }\n\n      if (receipt.status) {\n        this.isBurningInProgress = false;\n\n        console.log(\"receipt\", receipt);\n\n        this.state.blockNumber = receipt.blockNumber;\n\n        const logIndex = receipt?.events?.find(\n          (v: any) => v.event === \"Lock\"\n        )?.logIndex;\n\n        this.ethToTon = {\n          type: 'SwapEthToTon',\n          transactionHash: receipt.transactionHash,\n          logIndex,\n          blockNumber: receipt.blockNumber,\n          blockTime: 0,\n          blockHash: \"\",\n          from: fromAddress,\n          to: {\n            workchain: wc,\n            address_hash: hashPart,\n          },\n          value: amountUnits,\n\n          rawData: receipt.rawData,\n          topics: receipt.topics,\n          transactionIndex: receipt.transactionIndex\n        };\n\n        this.state.step = 2;\n      } else {\n        console.error(\"transaction fail\", receipt);\n      }\n    },\n    async burnJetton() {\n      if (!this.providerDataForJettons) return;\n      try {\n        this.isBurningInProgress = true;\n        const wallets =\n          (await this.providerDataForJettons.tonwebWallet.provider.send(\n            \"ton_requestWallets\",\n            []\n          )) as any;\n\n        const wallet = wallets[0];\n\n        const userTonAddress = new TonWeb.Address(wallet.address);\n        if (userTonAddress.wc !== 0) throw new Error('Only basechain wallets supported');\n\n        const tokenAddress = this.tokenAddress;\n\n        const jettonWalletAddress = await getJettonWalletAddress({\n          tonweb: this.providerDataForJettons.tonweb,\n          userTonAddress,\n          tokenAddress,\n        });\n\n        const destinationAddress = new TonWeb.utils.BN(\n          this.provider.myAddress.slice(2),\n          16\n        );\n        const { decimals, tokenAddress: jettonEvmAddress } =\n          await getWrappedTokenData(\n            this.providerDataForJettons.tonweb,\n            this.tokenAddress\n          );\n\n        const { balance } = await getJettonWalletData(\n          this.providerDataForJettons.tonweb,\n          jettonWalletAddress!.toString(true, true, true)\n        );\n\n        const jettonAmountWithDecimals = new BN(\n          parseUnits(this.amount.toString(), decimals).toString()\n        );\n\n        if (!balance.gte(jettonAmountWithDecimals)) {\n          this.$emit(\"error\", {\n            input: \"amount\",\n            message: this.$t(\"errors.toncoinBalance\", {\n              coin: this.tokenSymbol,\n              balance: (+formatUnits(balance.toString(), decimals)).toFixed(0),\n            }),\n          });\n          this.isBurningInProgress = false;\n          return;\n        }\n\n        this.state.jettonEvmAddress = jettonEvmAddress;\n\n        this.state.step = 1;\n        await burnJetton({\n          tonwebWallet: this.providerDataForJettons.tonwebWallet,\n          destinationAddress,\n          userTonAddress,\n          jettonWalletAddress,\n          jettonAmountWithDecimals,\n        });\n        this.isBurningInProgress = false;\n      } catch (error) {\n        this.isBurningInProgress = false;\n\n        console.error(error);\n        this.resetState();\n      }\n    },\n    async mintJetton() {\n      if (!this.providerDataForJettons) return;\n      try {\n        this.isBurningInProgress = true;\n        const wallets =\n            (await this.providerDataForJettons.tonwebWallet.provider.send(\n                \"ton_requestWallets\",\n                []\n            )) as any;\n\n        const wallet = wallets[0];\n\n        const userTonAddress = new TonWeb.Address(wallet.address);\n        if (userTonAddress.wc !== 0) throw new Error('Only basechain wallets supported');\n\n        await mintJetton({\n          tonwebWallet: this.providerDataForJettons.tonwebWallet,\n          queryId: this.state.queryId,\n          bridgeTonAddress: this.params.tonBridgeAddressV2\n        });\n        this.isBurningInProgress = false;\n      } catch (error) {\n        this.isBurningInProgress = false;\n\n        console.error(error);\n        this.resetState();\n      }\n    },\n    async initProviderForTON(): Promise<ProviderDataForTON | null> {\n      const isProviderReady = await this.checkProviderIsReady();\n\n      if (!isProviderReady) {\n        return null;\n      }\n\n      const wtonContract = new this.provider.web3!.eth.Contract(\n        WTON_BRIDGE as AbiItem[],\n        this.params.wTonAddress\n      );\n      const oraclesTotal = (\n        await wtonContract.methods.getFullOracleSet().call()\n      ).length;\n\n      if (!(oraclesTotal > 0)) {\n        return null;\n      }\n\n      const tonweb = new TonWeb(\n        new TonWeb.HttpProvider(this.params.tonCenterUrl, {\n          apiKey: this.params.tonCenterApiKey,\n        })\n      );\n\n      const bridgeData = (\n        await tonweb.provider.call(\n          this.params.tonBridgeAddress,\n          \"get_bridge_data\",\n          []\n        )\n      ).stack;\n\n      if (bridgeData.length !== 8) {\n        console.error(\"Invalid bridge data\", bridgeData);\n        return null;\n      }\n\n      // const stateFlags = getNumber(bridgeData[0]);\n      // const totalLocked = getNumber(bridgeData[1]);\n      // const collectorWc = getNumber(bridgeData[2]);\n      // const collectorAddr = bridgeData[3][1]; // string\n\n      const feeFlat = new BN(bridgeData[4][1].slice(2), 16);\n      const feeNetwork = new BN(bridgeData[5][1].slice(2), 16);\n      const feeFactor = new BN(bridgeData[6][1].slice(2), 16);\n      const feeBase = new BN(bridgeData[7][1].slice(2), 16);\n\n      const res: ProviderDataForTON = {\n        blockNumber: 0,\n        wtonContract,\n        tonweb,\n        oraclesTotal,\n        feeFlat: feeFlat.add(feeNetwork),\n        feeFactor,\n        feeBase,\n      };\n\n      return res;\n    },\n    async initProviderForJettons(): Promise<ProviderDataForJettons | null> {\n      const isProviderReady = await this.checkProviderIsReady();\n\n      if (!isProviderReady) {\n        return null;\n      }\n\n      const tonWalletProvider = (window as any).ton;\n\n      if (!tonWalletProvider.isTonWallet) {\n        console.error(\"isTonWallet=\", tonWalletProvider.isTonWallet);\n        return null;\n      }\n\n      const tonwebWallet = new TonWeb(tonWalletProvider);\n\n      const bridgeContract = new this.provider.web3!.eth.Contract(\n        BRIDGE.abi as AbiItem[],\n        this.params.tonBridgeV2EVMAddress\n      );\n\n      const oraclesTotal = (await bridgeContract.methods.getFullOracleSet().call())\n        .length;\n\n      if (!(oraclesTotal > 0)) {\n        return null;\n      }\n\n      const tonweb = new TonWeb(\n        new TonWeb.HttpProvider(this.params.tonCenterUrl, {\n          apiKey: this.params.tonCenterApiKey,\n        })\n      );\n\n      const res: ProviderDataForJettons = {\n        blockNumber: 0,\n        bridgeContract,\n        tonweb,\n        tonwebWallet,\n        oraclesTotal,\n      };\n\n      return res;\n    },\n    async onTransferClick(): Promise<void> {\n      if (this.isInitInProgress) {\n        return;\n      }\n\n      this.isInitInProgress = true;\n\n      if (!this.isInputsValid) {\n        this.isInitInProgress = false;\n        return;\n      }\n\n      if (this.token === \"ton\" && !this.providerDataForTon) {\n        this.providerDataForTon = await this.initProviderForTON();\n      } else if (!this.providerDataForJettons) {\n        this.providerDataForJettons = await this.initProviderForJettons();\n      }\n\n      if (!(this.providerDataForTon || this.providerDataForJettons)) {\n        this.isInitInProgress = false;\n        return;\n      }\n\n      if (this.token === \"ton\" && this.providerDataForTon) {\n        if (!this.isFromTon) {\n          const userErcBalance = new BN(\n            await this.providerDataForTon.wtonContract.methods\n              .balanceOf(this.provider.myAddress)\n              .call()\n          );\n          if (this.amount.gt(userErcBalance)) {\n            this.$emit(\"error\", {\n              input: \"amount\",\n              message: this.$t(\"errors.toncoinBalance\", {\n                coin: \"TONCOIN\",\n                balance: fromNano(userErcBalance).toString(),\n              }),\n            });\n            this.isInitInProgress = false;\n\n            return;\n          }\n        }\n        this.isInitInProgress = false;\n\n        this.state.createTime = Date.now();\n        this.state.step = 1;\n\n        if (this.isFromTon) {\n          this.saveState();\n        } else {\n          await this.burnForTON();\n        }\n      } else if (this.providerDataForJettons) {\n        this.isInitInProgress = false;\n        if (!this.isFromTon) {\n          this.isLockingInProgress = true;\n\n          const erc20Contract = new ERC20Contract(this.provider);\n          const decimals = await erc20Contract.decimals({\n            address: this.tokenAddress,\n          });\n          const balance = new BN(\n            (\n              await erc20Contract.balanceOf({\n                address: this.tokenAddress,\n                account: this.provider.myAddress,\n              })\n            ).toString()\n          );\n          const tokenAmountWithDecimals = new BN(\n            parseUnits(this.amount.toString(), decimals).toString()\n          );\n          if (!balance.gte(tokenAmountWithDecimals)) {\n            this.$emit(\"error\", {\n              input: \"amount\",\n              message: this.$t(\"errors.toncoinBalance\", {\n                coin: this.tokenSymbol,\n                balance: (+formatUnits(balance.toString(), decimals)).toFixed(\n                  0\n                ),\n              }),\n            });\n            this.isLockingInProgress = false;\n            return;\n          }\n\n          await this.lockToken();\n          this.isLockingInProgress = false;\n          this.saveState();\n        } else {\n          this.isInitInProgress = false;\n\n          await this.burnJetton();\n        }\n      }\n    },\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=62be8e14&scoped=true&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=62be8e14&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-62be8e14\"]])\n\nexport default __exports__","import { vModelDynamic as _vModelDynamic, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-78dd5646\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"disabled\", \"readonly\", \"type\", \"id\", \"inputmode\"]\nconst _hoisted_2 = { class: \"CustomInput-labelWrapper\" }\nconst _hoisted_3 = [\"for\"]\nconst _hoisted_4 = {\n  key: 0,\n  class: \"CustomInput-arrow\"\n}\nconst _hoisted_5 = {\n  key: 1,\n  class: \"CustomInput-dropdown\"\n}\nconst _hoisted_6 = [\"onClick\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"CustomInput\", { hasData: _ctx.hasData, disabled: _ctx.disabled, error: !!_ctx.error && _ctx.hasData, isDropdownOpened: _ctx.isDropdownOpened }])\n  }, [\n    _withDirectives(_createElementVNode(\"input\", {\n      disabled: _ctx.disabled,\n      readonly: _ctx.hasDropdown,\n      type: _ctx.type,\n      id: 'CustomInput-' + _ctx.$uuid.v1(),\n      inputmode: _ctx.type === 'number' ? 'decimal' : 'text',\n      onInput: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('changed'))),\n      onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.isDropdownOpened = true)),\n      onFocus: _cache[2] || (_cache[2] = ($event: any) => (_ctx.isDropdownOpened = true)),\n      onBlur: _cache[3] || (_cache[3] = ($event: any) => (_ctx.$emit('blur'))),\n      onFocusout: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.onInputFocusOut && _ctx.onInputFocusOut(...args))),\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.model) = $event))\n    }, null, 40, _hoisted_1), [\n      [_vModelDynamic, _ctx.model]\n    ]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"label\", {\n        for: 'CustomInput-' + _ctx.$uuid.v1()\n      }, _toDisplayString((_ctx.hasData && _ctx.error) || _ctx.label), 9, _hoisted_3)\n    ]),\n    (_ctx.hasDropdown)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4))\n      : _createCommentVNode(\"\", true),\n    (_ctx.hasDropdown)\n      ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_5, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.dropdown, (item, index) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n              _createElementVNode(\"button\", {\n                onClick: ($event: any) => (_ctx.onOptionClick(item.value))\n              }, _toDisplayString(item.label), 9, _hoisted_6)\n            ]))\n          }), 128))\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 2))\n}","\nimport { defineComponent, PropType } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    error: {\n      type: String,\n      default: \"\",\n    },\n    label: {\n      type: String,\n      required: true,\n    },\n    type: {\n      type: String,\n      required: true,\n    },\n    modelValue: {\n      type: String,\n      required: true,\n    },\n    dropdown: {\n      type: Array as PropType<{ label: string; value: string }[]>,\n      default: () => [],\n    },\n  },\n\n  data() {\n    return {\n      isDropdownOpened: false,\n    };\n  },\n\n  computed: {\n    hasData(): boolean {\n      return !!this.modelValue;\n    },\n    model: {\n      get(): string {\n        type Item = {\n          label: string;\n          value: string;\n        };\n        if (this.hasDropdown) {\n          const item: Item | undefined = (this.dropdown as Array<Item>).find(\n            (item: Item) => item.value === this.modelValue\n          );\n          return item?.label || \"\";\n        } else {\n          return this.modelValue;\n        }\n      },\n      set(value: string) {\n        this.$emit(\"update:modelValue\", value);\n      },\n    },\n    hasDropdown(): boolean {\n      return !!this.dropdown?.length;\n    },\n  },\n  methods: {\n    onOptionClick(value: string) {\n      this.model = value;\n      this.isDropdownOpened = false;\n    },\n    onInputFocusOut(e: FocusEvent) {\n      if (!this.hasDropdown) {\n        return;\n      }\n      let elem = e.relatedTarget as any;\n      for (; elem && elem !== document; elem = elem.parentNode) {\n        if (elem === this.$el) return;\n      }\n\n      this.isDropdownOpened = false;\n    },\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=78dd5646&scoped=true&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=78dd5646&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-78dd5646\"]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-48d90522\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"Footer\" }\nconst _hoisted_2 = {\n  href: \"https://github.com/ton-blockchain/token-bridge\",\n  target: \"_blank\"\n}\nconst _hoisted_3 = {\n  href: \"https://github.com/ton-blockchain/TIPs/issues/24\",\n  target: \"_blank\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"footer\", _hoisted_1, [\n    _createTextVNode(\" v3.0.4, \"),\n    _createElementVNode(\"a\", _hoisted_2, _toDisplayString(_ctx.$t(\"sourceCode\")), 1),\n    _createTextVNode(\", \"),\n    _createElementVNode(\"a\", _hoisted_3, _toDisplayString(_ctx.$t(\"documentation\")), 1),\n    _createTextVNode(\". \")\n  ]))\n}","\nimport {defineComponent} from \"vue\";\n\nexport default defineComponent({});\n","import { render } from \"./index.vue?vue&type=template&id=48d90522&scoped=true&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=48d90522&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-48d90522\"]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5967577c\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"Header-testnet\"\n}\nconst _hoisted_2 = { class: \"Header-wrapper\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"Header-logoIcon\" }, null, -1))\nconst _hoisted_4 = { class: \"Header-logoLabel\" }\nconst _hoisted_5 = { class: \"Header-menu\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"Header-menuWrapper\"\n}\nconst _hoisted_7 = [\"data-icon\"]\nconst _hoisted_8 = { class: \"Header-menuList\" }\nconst _hoisted_9 = { \"data-id\": \"address\" }\nconst _hoisted_10 = { \"data-id\": \"disconnect\" }\nconst _hoisted_11 = [\"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"header\", {\n    class: _normalizeClass([\"Header\", { isScrolled: _ctx.isScrolled }])\n  }, [\n    (_ctx.isTestnet)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _toDisplayString(_ctx.$t(`testnetMessage`)), 1))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.isHistoryShown ? 'NuxtLink' : 'div'), {\n        to: _ctx.parentUrl,\n        class: _normalizeClass([\"Header-logo\", { isHistoryShown: _ctx.isHistoryShown }])\n      }, {\n        default: _withCtx(() => [\n          _hoisted_3,\n          _createElementVNode(\"span\", _hoisted_4, _toDisplayString(_ctx.$t(`logoLabel`)), 1)\n        ]),\n        _: 1\n      }, 8, [\"to\", \"class\"])),\n      _createElementVNode(\"div\", _hoisted_5, [\n        (_ctx.showMenu)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n              _createElementVNode(\"div\", {\n                class: \"Header-menuAddress\",\n                \"data-icon\": _ctx.provider?.name\n              }, [\n                _createElementVNode(\"span\", null, _toDisplayString(_ctx.address), 1)\n              ], 8, _hoisted_7),\n              _createElementVNode(\"ul\", _hoisted_8, [\n                _createElementVNode(\"li\", _hoisted_9, [\n                  _createElementVNode(\"span\", null, _toDisplayString(_ctx.address), 1)\n                ]),\n                _createElementVNode(\"li\", _hoisted_10, [\n                  _createElementVNode(\"button\", {\n                    onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.onDisconnectClick && _ctx.onDisconnectClick(...args))),\n                    disabled: _ctx.disableDisconnect\n                  }, _toDisplayString(_ctx.$t(`disconnectWallet`)), 9, _hoisted_11)\n                ])\n              ])\n            ]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ])\n  ], 2))\n}","\nimport { defineComponent, PropType } from \"vue\";\n\nimport { PARAMS } from \"@/utils/constants\";\nimport { Provider } from \"@/utils/providers/provider\";\n\ntype ComponentData = {\n  isScrolled: boolean;\n};\n\nexport default defineComponent({\n  name: \"Header\",\n  props: {\n    isTestnet: {\n      type: Boolean,\n      default: false,\n    },\n    showMenu: {\n      type: Boolean,\n      required: true,\n    },\n    provider: {\n      type: Object as PropType<Provider | null>,\n      required: true,\n    },\n    disableDisconnect: {\n      type: Boolean,\n      default: false,\n    },\n    isHistoryShown: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  data(): ComponentData {\n    return {\n      isScrolled: window.pageYOffset > 0,\n    };\n  },\n\n  computed: {\n    address(): string {\n      if (!this.provider) {\n        return \"\";\n      }\n      return (\n        this.provider.myAddress.slice(0, 6) +\n        \"…\" +\n        this.provider.myAddress.slice(-4)\n      );\n    },\n    parentUrl(): string {\n      const { historyAddress, historyNetwork, ...query } = this.$route.query;\n      return this.generateUrlWithQuery(query);\n    },\n    historyUrl(): string {\n      if (!this.provider || !this.provider.myAddress) {\n        return \"\";\n      }\n\n      let network = \"\";\n      Object.keys(PARAMS.networks).forEach((netKey: string) => {\n        const net = PARAMS.networks[netKey as keyof typeof PARAMS.networks];\n        Object.keys(net).forEach((subnetKey: string) => {\n          const subnet = net[subnetKey as keyof typeof net];\n          if (subnet.chainId === this.provider?.chainId) {\n            network = netKey;\n          }\n        });\n      });\n\n      const query = {\n        ...this.$route.query,\n        historyAddress: this.provider.myAddress,\n        historyNetwork: network,\n      };\n      return this.generateUrlWithQuery(query);\n    },\n  },\n\n  created() {\n    window.addEventListener(\"scroll\", this.onScroll);\n  },\n\n  beforeDestroy() {\n    window.removeEventListener(\"scroll\", this.onScroll);\n  },\n\n  methods: {\n    generateUrlWithQuery(query: any): string {\n      const urlVars: string[] = Object.keys(query).map((key: string) => {\n        return key + \"=\" + encodeURIComponent(query[key]);\n      });\n      return this.$router\n        .resolve(\"/\" + (urlVars ? \"?\" + urlVars.join(\"&\") : \"\"))\n        .href.replace(\"bridge\", \"\"); // TODO in nuxt this.localePath\n    },\n    onScroll() {\n      this.isScrolled = window.pageYOffset > 0;\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n    onDisconnectClick() {\n      this.provider?.disconnect();\n    },\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=5967577c&scoped=true&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=5967577c&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5967577c\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-137f0b1b\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"WalletsPopup-panel\" }\nconst _hoisted_2 = [\"onClick\"]\nconst _hoisted_3 = [\"data-icon\", \"disabled\"]\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"em\", null, null, -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_Transition, {\n    name: \"WalletsPopupTransition\",\n    appear: \"\"\n  }, {\n    default: _withCtx(() => [\n      _createElementVNode(\"aside\", {\n        class: _normalizeClass([\"WalletsPopup\", { isLoading: _ctx.isLoading }])\n      }, [\n        _createElementVNode(\"div\", {\n          class: \"WalletsPopup-overlay\",\n          onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.close && _ctx.close(...args)))\n        }),\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createElementVNode(\"ul\", null, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.providersList, (item) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: item,\n                onClick: ($event: any) => (_ctx.onProviderClick(item))\n              }, [\n                _createElementVNode(\"button\", {\n                  \"data-icon\": item,\n                  disabled: _ctx.isLoading,\n                  class: _normalizeClass({ showLoader: _ctx.isLoading && _ctx.loadingProviderName === item })\n                }, [\n                  _createTextVNode(_toDisplayString(_ctx.$t(`providers.${item}`)), 1),\n                  _hoisted_4\n                ], 10, _hoisted_3)\n              ], 8, _hoisted_2))\n            }), 128))\n          ]),\n          (!_ctx.uncancellable)\n            ? (_openBlock(), _createElementBlock(\"button\", {\n                key: 0,\n                class: \"WalletsPopup-panelClose\",\n                onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.close && _ctx.close(...args)))\n              }))\n            : _createCommentVNode(\"\", true)\n        ])\n      ], 2)\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from \"vue\";\n\nimport { Provider } from \"@/utils/providers/provider\";\n\nconst PROVIDERS = {\n  metamask: \"Metamask\",\n  // walletConnect: \"WalletConnect\",\n  // walletLink: \"WalletLink\",\n};\n\ntype ComponentData = {\n  isLoading: boolean;\n  loadingProviderName: string;\n};\n\nexport default defineComponent({\n  props: {\n    params: {\n      type: Object,\n      required: true,\n    },\n    uncancellable: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  data(): ComponentData {\n    return {\n      isLoading: false,\n      loadingProviderName: \"\",\n    };\n  },\n\n  computed: {\n    providersList(): string[] {\n      return Object.keys(PROVIDERS);\n    },\n  },\n\n  created() {\n    document.addEventListener(\"keydown\", this.onKeyDown);\n  },\n\n  beforeDestroy() {\n    document.removeEventListener(\"keydown\", this.onKeyDown);\n  },\n\n  methods: {\n    onKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === 27) {\n        this.close();\n      }\n    },\n    close() {\n      if (this.uncancellable) return;\n      if (this.isLoading) return;\n      this.$emit(\"cancel\");\n    },\n    async onProviderClick(providerName: string): Promise<void> {\n      if (this.isLoading) return;\n\n      this.isLoading = true;\n      this.loadingProviderName = providerName;\n\n      const providerComponentName: string =\n        PROVIDERS[providerName as keyof typeof PROVIDERS];\n      const ProviderComponent = await import(\n        `@/utils/providers/${providerName}/index`\n      );\n\n      try {\n        const provider = new ProviderComponent[\n          providerComponentName\n        ]() as Provider;\n\n        const result = await provider.connect({\n          rpcEndpoint: this.params.rpcEndpoint,\n          chainId: this.params.chainId,\n        });\n\n        this.isLoading = false;\n\n        if (!result) {\n          return;\n        }\n\n        this.$emit(\"wallet-connected\", provider);\n      } catch (e: any) {\n        const message = this.$te(e.message) ? this.$t(e.message) : e.message;\n        console.error(message);\n        alert(message);\n        this.isLoading = false;\n      }\n    },\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=137f0b1b&scoped=true&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=137f0b1b&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-137f0b1b\"]])\n\nexport default __exports__","\nimport BN from \"bn.js\";\nimport lodashDebounce from \"lodash.debounce\";\nimport debounce from \"lodash.debounce\";\nimport TonWeb from \"tonweb\";\nimport { defineComponent, markRaw, StyleValue } from \"vue\";\nimport Web3 from \"web3\";\n\nimport { getWrappedTokenData } from \"@/ton-bridge-lib/BridgeJettonUtils\";\nimport BridgeProcessor from \"@/components/BridgeProcessor/index.vue\";\nimport CustomInput from \"@/components/CustomInput/index.vue\";\nimport Footer from \"@/components/Footer/index.vue\";\nimport Header from \"@/components/Header/index.vue\";\n// import History from \"@/components/History/index.vue\";\nimport WalletsPopup from \"@/components/WalletsPopup/index.vue\";\nimport { PARAMS } from \"@/utils/constants\";\nimport { supportsLocalStorage } from \"@/utils/helpers\";\nimport { Provider } from \"@/utils/providers/provider\";\nimport { ERC20Contract } from \"@/utils/services/ERC20.contract\";\n\nimport { ComponentData } from \"./types\";\n\nconst PAIRS = [\"eth\", \"bsc\"];\nconst fromNano = TonWeb.utils.fromNano;\nconst toNano = TonWeb.utils.toNano;\n\nexport default defineComponent({\n  name: \"Bridge\",\n\n  components: {\n    BridgeProcessor,\n    WalletsPopup,\n    CustomInput,\n    Header,\n    Footer,\n    // History,\n  },\n\n  head(): object {\n    return {\n      title: this.$t(`networks.${this.pair}.pageTitle`),\n    };\n  },\n\n  data(): ComponentData {\n    return {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      getPairGasFee__debounced: () => {},\n      gasPrice: 0,\n\n      isTestnet: false,\n      isRecover: false,\n      lt: 0,\n      hash: \"\",\n\n      isFromTon: true,\n      pair: \"eth\",\n      token: \"ton\",\n      amountInput: \"\",\n      toAddress: \"\",\n      tokenAddress: \"\",\n      provider: null,\n\n      tokenSymbol: \"TON\",\n\n      isTransferInProgress: false,\n      isConnected: false,\n      walletsPopupState: \"closed\",\n      bridgeProcessorIsLoading: false,\n      history: {\n        address: \"\",\n        network: \"\",\n        isShown: false,\n      },\n      mainPageFixedPosition: 0,\n      errors: {\n        amount: \"\",\n        toAddress: \"\",\n        tokenAddress: \"\",\n      },\n    };\n  },\n\n  computed: {\n    isInputsValid(): boolean {\n      return !this.errors.amount && !this.errors.toAddress;\n    },\n    netTypeName(): string {\n      return this.isTestnet ? \"test\" : \"main\";\n    },\n    params(): ParamsNetwork {\n      const pairParams = PARAMS.networks[this.pair];\n      return pairParams[this.netTypeName as keyof typeof pairParams];\n    },\n    pairNetworkCoinUrl(): string {\n      const url = this.params.explorerUrl;\n      const address = this.params.wTonAddress;\n      return url.replace(\"<ADDRESS>\", address);\n    },\n    willReceive(): string {\n      if (this.bridgeFeeAmount.isZero()) {\n        return \"\";\n      } else {\n        const coin = this.$t(\n          `networks.${this.isFromTon ? this.pair : \"ton\"}.${\n            this.netTypeName\n          }.coin`\n        );\n        return this.$t(\"willReceive\", {\n          coin,\n          fee: fromNano(this.amount.sub(this.bridgeFeeAmount)),\n        });\n      }\n    },\n    pairFee(): string {\n      const n = this.gasPrice ? this.gasPrice / this.params.defaultGwei : 1;\n      const fee = this.isFromTon\n        ? this.params.coinsPerGweiTo * n\n        : this.params.coinsPerGweiFrom * n;\n\n      return this.$t(`networks.${this.pair}.gasFee`, {\n        fee: fee.toFixed(4),\n      });\n    },\n    amount(): BN {\n      try {\n        if (this.token === \"ton\") {\n          return toNano(this.amountInput.toString());\n        } else {\n          return new BN(this.amountInput.toString());\n        }\n      } catch (e) {\n        return new BN(0);\n      }\n    },\n    bridgeFeeAmount(): BN {\n      if (this.amount.lt(toNano(\"10\"))) {\n        return new BN(0);\n      } else {\n        const fixedFeeNano = toNano(\"5\");\n        const floatFeeNano = this.amount.sub(fixedFeeNano);\n        //10000 is multiplier to get integer value for 0.2500%\n        //100 is divider to convert percentages to fraction\n        return floatFeeNano\n          .muln(0.25 * 10000)\n          .divn(10000 * 100)\n          .add(fixedFeeNano); //5 + (this.amount - 5) * (0.25 / 100)\n      }\n    },\n    bridgeFee(): string {\n      if (this.bridgeFeeAmount.isZero()) {\n        return this.$t(\"bridgeFeeBelow10\");\n      } else {\n        return this.$t(\"bridgeFeeAbove10\", {\n          fee: fromNano(this.bridgeFeeAmount),\n        });\n      }\n    },\n    fromPairs(): string[] {\n      return [\"ton\", ...PAIRS];\n    },\n    toPairs(): string[] {\n      return [this.pair, ...PAIRS.filter((i) => i !== this.pair), \"ton\"];\n    },\n    isPairsBlocked(): boolean {\n      return this.isTransferInProgress /* || this.isConnected*/;\n    },\n    isInputsBlocked(): boolean {\n      return this.isTransferInProgress || !this.provider;\n    },\n    contentStyle(): StyleValue {\n      if (this.history.isShown) {\n        return {\n          position: \"fixed\",\n          top: -this.mainPageFixedPosition + \"px\",\n        };\n      } else {\n        return {};\n      }\n    },\n  },\n\n  watch: {\n    \"$route.query\": {\n      immediate: true,\n      handler(newVal: any) {\n        if (newVal.historyAddress && newVal.historyNetwork) {\n          this.history.isShown = true;\n          this.history.address = newVal.historyAddress;\n          this.history.network = newVal.historyNetwork;\n        } else {\n          this.history.isShown = false;\n        }\n      },\n    },\n    \"history.isShown\"(newVal: boolean) {\n      if (newVal) {\n        this.mainPageFixedPosition = window.pageYOffset;\n      } else {\n        this.mainPageFixedPosition = 0;\n      }\n    },\n    isFromTon(newVal: boolean, oldVal: boolean) {\n      this.getPairGasFee__debounced();\n\n      if (newVal !== oldVal) {\n        this.checkInputs();\n      }\n    },\n    async pair(newVal: string, oldVal: string): Promise<void> {\n      this.getPairGasFee__debounced();\n\n      if (newVal !== oldVal) {\n        this.checkInputs();\n      }\n\n      if (newVal !== oldVal && this.isConnected && this.provider) {\n        const isChanged = await this.provider.switchChain(this.params.chainId);\n        if (!isChanged) {\n          this.pair = oldVal;\n        }\n      }\n    },\n  },\n\n  created() {\n    this.getPairGasFee__debounced = lodashDebounce(this.getPairGasFee, 100);\n\n    if (this.$route.query.testnet) {\n      this.isTestnet =\n        this.$route.query.testnet.toString().toLowerCase() === \"true\";\n    }\n    if (this.$route.query.recover || this.$route.query.recovery) {\n      const isRecover =\n        (this.$route.query.recover?.toString() || \"\").toLowerCase() === \"true\";\n      const isRecovery =\n        (this.$route.query.recovery?.toString() || \"\").toLowerCase() === \"true\";\n      this.isRecover = isRecover || isRecovery;\n    }\n    if (this.$route.query.lt) {\n      const lt = parseInt(this.$route.query.lt.toString(), 10);\n      this.lt = !lt || isNaN(lt) ? 0 : lt;\n    }\n    if (this.$route.query.hash) {\n      this.hash = this.$route.query.hash.toString();\n    }\n    if (this.$route.query.amount) {\n      try {\n        this.amountInput = fromNano(this.$route.query.amount.toString());\n      } catch (e) {\n        this.amountInput = \"\"; // for empty string inside input\n      }\n    }\n    if (this.$route.query.toAddress) {\n      this.toAddress = this.$route.query.toAddress.toString();\n    }\n    if (this.$route.query.fromNetwork && this.$route.query.toNetwork) {\n      const fromNetwork = this.$route.query.fromNetwork\n        .toString()\n        .toLowerCase();\n      const toNetwork = this.$route.query.toNetwork.toString().toLowerCase();\n\n      if (fromNetwork === \"ton\" && PAIRS.includes(toNetwork)) {\n        this.isFromTon = true;\n        this.pair = toNetwork;\n      }\n\n      if (toNetwork === \"ton\" && PAIRS.includes(fromNetwork)) {\n        this.isFromTon = false;\n        this.pair = fromNetwork;\n      }\n    }\n  },\n\n  mounted() {\n    this.getPairGasFee__debounced();\n    this.loadStateBridge();\n    this.checkInputs();\n\n    this.$watch(\n      () => [this.tokenAddress, this.token, this.isFromTon],\n      debounce(async ([newTokenAddress, newToken]: any) => {\n        if (newToken === \"ton\") {\n          this.tokenSymbol = \"TON\";\n        } else {\n          this.tokenSymbol = \"\";\n          if (this.isFromTon) {\n            if (\n              newTokenAddress &&\n              TonWeb.utils.Address.isValid(newTokenAddress)\n            ) {\n              try {\n                const wrappedTokenData = await getWrappedTokenData(\n                  new TonWeb(new TonWeb.HttpProvider(this.params.tonCenterUrl, {\n                    apiKey: this.params.tonCenterApiKey\n                  })),\n                  this.tokenAddress\n                );\n                // if (wrappedTokenData.symbol) {\n                //   this.tokenSymbol = wrappedTokenData.symbol;\n                // }\n              } catch (error) {\n                console.error(error);\n                this.tokenSymbol = \"\";\n              }\n            }\n          } else {\n            if (\n              newTokenAddress &&\n              Web3.utils.isAddress(newTokenAddress) &&\n              this.provider\n            ) {\n              try {\n                const erc20Contract = new ERC20Contract(this.provider as any);\n                const symbol = await erc20Contract.symbol(newTokenAddress);\n                this.tokenSymbol = symbol;\n              } catch (error) {\n                this.tokenSymbol = \"\";\n              }\n            } else {\n              this.tokenSymbol = \"\";\n            }\n          }\n        }\n      }, 300)\n    );\n  },\n\n  methods: {\n    checkInputs() {\n      this.errors.amount = \"\";\n      this.errors.toAddress = \"\";\n      this.errors.tokenAddress = \"\";\n\n      if (this.isFromTon) {\n        if (!Web3.utils.isAddress(this.toAddress)) {\n          this.errors.toAddress = this.$t(\n            `networks.${this.pair}.errors.invalidAddress`\n          );\n        }\n      } else {\n        if (!TonWeb.utils.Address.isValid(this.toAddress)) {\n          this.errors.toAddress = this.$t(`networks.ton.errors.invalidAddress`);\n        }\n      }\n      if (this.isFromTon) {\n        if (!TonWeb.utils.Address.isValid(this.tokenAddress)) {\n          this.errors.tokenAddress = this.$t(\n            `networks.ton.errors.invalidAddress`\n          );\n        }\n      } else {\n        if (!Web3.utils.isAddress(this.tokenAddress)) {\n          this.errors.tokenAddress = this.$t(\n            `networks.${this.pair}.errors.invalidAddress`\n          );\n        }\n      }\n      if (this.token === \"ton\") {\n        if (this.amount.lt(toNano(\"10\"))) {\n          this.errors.amount = this.$t(\"errors.amountBelow10\");\n        }\n        try {\n          toNano(this.amountInput.toString());\n        } catch (e) {\n          this.errors.amount = this.$t(\"errors.notValidAmount\");\n        }\n        if (\n          this.toAddress.toLowerCase() ===\n            this.params.wTonAddress.toLowerCase() ||\n          this.toAddress.toLowerCase() ===\n            this.params.tonBridgeAddress.toLowerCase()\n        ) {\n          this.errors.toAddress = this.$t(\"errors.needPersonalAddress\");\n        }\n      } else {\n        //\n      }\n    },\n    onPairClick(switchDirection: boolean, toPair: string) {\n      if (this.isPairsBlocked) {\n        return;\n      }\n\n      if (switchDirection) {\n        this.isFromTon = !this.isFromTon;\n      }\n      this.pair = toPair;\n    },\n    resetState() {\n      this.isRecover = false;\n      this.lt = 0;\n      this.hash = \"\";\n      this.tokenAddress = \"\";\n      this.amountInput = \"\"; //to reset inside input directly\n      this.toAddress = \"\";\n    },\n    loadStateBridge() {\n      if (!supportsLocalStorage()) {\n        return;\n      }\n\n      const raw = localStorage.getItem(\"bridgeState\");\n\n      if (raw) {\n        let state: any;\n        try {\n          state = JSON.parse(raw);\n        } catch (e) {\n          return;\n        }\n\n        this.amountInput = state.amount;\n        this.toAddress = state.toAddress;\n        this.tokenAddress = state.tokenAddress;\n        this.pair = state.pair;\n        this.isFromTon = (state.processingState as any).isFromTon;\n\n        this.isTransferInProgress = true;\n      }\n    },\n    loadStateProcessor() {\n      if (!supportsLocalStorage()) {\n        return;\n      }\n\n      const raw = localStorage.getItem(\"bridgeState\");\n\n      if (raw) {\n        let state: any;\n        try {\n          state = JSON.parse(raw);\n        } catch (e) {\n          return;\n        }\n\n        this.token = (state.processingState as any).token;\n        this.tokenAddress = (state.processingState as any).tokenAddress;\n        console.log(\"loadState\");\n        // TODO vuex\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        this.$refs.bridgeProcessor.loadState(state);\n      }\n    },\n    saveState(processingState: any) {\n      if (!supportsLocalStorage()) {\n        return;\n      }\n\n      const state = {\n        amount: this.amountInput,\n        toAddress: this.toAddress,\n        pair: this.pair,\n        processingState: processingState,\n      };\n\n      localStorage.setItem(\"bridgeState\", JSON.stringify(state));\n    },\n    deleteState() {\n      if (!supportsLocalStorage()) {\n        return;\n      }\n\n      localStorage.removeItem(\"bridgeState\");\n    },\n    onTransferInProgress(isActive: boolean) {\n      this.isTransferInProgress = isActive;\n      this.checkInputs();\n    },\n    toggleFromTon() {\n      if (this.isPairsBlocked) {\n        return;\n      }\n      this.isFromTon = !this.isFromTon;\n    },\n    async getPairGasFee(): Promise<void> {\n      let data;\n      let gasPrice = 0;\n\n      try {\n        const response = await fetch(this.params.getGasUrl, {\n          method: \"GET\",\n          cache: \"no-store\",\n        });\n\n        if (!response.ok) {\n          throw new Error(`An error has occured: ${response.status}`);\n        }\n\n        data = await response.json();\n      } catch (e) {\n        this.gasPrice = 0;\n        return;\n      }\n\n      if (this.pair === \"eth\") {\n        gasPrice = parseFloat(data.average) / 10;\n      }\n\n      if (this.pair === \"bsc\") {\n        gasPrice = parseFloat(data.result.SafeGasPrice);\n      }\n\n      this.gasPrice = gasPrice > 0 ? gasPrice : this.params.defaultGwei;\n    },\n    onWalletConnected(provider: Provider) {\n      this.provider = markRaw(provider) as any;\n      // TODO vuex\n      this.bridgeProcessorIsLoading = !this.$refs.bridgeProcessor;\n      this.isConnected = true;\n      this.walletsPopupState = \"closed\";\n      (this.$refs?.bridgeProcessor as any)?.onTokenChange(this.token);\n\n      this.provider!.on(\"disconnect\", () => {\n        if (this.isTransferInProgress) {\n          this.walletsPopupState = \"opened-uncancellable\";\n        } else {\n          this.provider = null;\n          this.isConnected = false;\n          this.bridgeProcessorIsLoading = false;\n        }\n      });\n    },\n    onBridgeProcessorReady() {\n      this.loadStateProcessor();\n      this.bridgeProcessorIsLoading = false;\n    },\n    onBridgeTransferError(params: { input: string; message: string }) {\n      if (params.input === \"amount\") {\n        this.errors.amount = params.message;\n      }\n      if (params.input === \"toAddress\") {\n        this.errors.toAddress = params.message;\n      }\n    },\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=bd608f96&scoped=true&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=bd608f96&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-bd608f96\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from \"vue-router\";\n\nimport BridgePageVue from \"@/views/BridgePage/index.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"Bridge\",\n    component: BridgePageVue,\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\nexport default router;\n","import { createStore } from \"vuex\";\n\nexport default createStore({\n  state: () => ({ alert: null }),\n  mutations: {\n    setAlert(state, payload) {\n      state.alert = payload;\n    },\n  },\n  getters: {\n    alert(state) {\n      return state.alert;\n    },\n  },\n  actions: {},\n});\n","import \"@/assets/styles/reboot.css\";\nimport \"@/assets/styles/global.less\";\n\nimport { createApp } from \"vue\";\nimport UUID from \"vue-uuid\";\n\nimport App from \"./App.vue\";\nimport i18n from \"./i18n\";\nimport router from \"./router\";\nimport store from \"./store\";\n\ncreateApp(App).use(UUID).use(i18n).use(store).use(router).mount(\"#app\");\n","export const PARAMS: Params = {\n  appName: \"TON Bridge\",\n  appLogoUrl: \"https://ton.org/bridge/favicon.ico\",\n  tonTransferUrl:\n    \"ton://transfer/<BRIDGE_ADDRESS>?amount=<AMOUNT>&text=swapTo%23<TO_ADDRESS>\",\n  tonExplorerUrl: {\n    main: \"https://tonscan.org/address/<ADDRESS>\",\n    test: \"https://testnet.tonscan.org/address/<ADDRESS>\",\n  },\n  networks: {\n    eth: {\n      main: {\n        getGasUrl: \"https://ethereumgas.toncenter.com\",\n        explorerUrl: \"https://etherscan.io/token/<ADDRESS>\",\n        wTonAddress: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n        tonBridgeAddress: \"Ef_dJMSh8riPi3BTUTtcxsWjG8RLKnLctNjAM4rw8NN-xWdr\",\n        tonCollectorAddress: \"EQCuzvIOXLjH2tv35gY4tzhIvXCqZWDuK9kUhFGXKLImgxT5\",\n        tonMultisigAddress: \"kf87m7_QrVM4uXAPCDM4DuF9Rj5Rwa5nHubwiQG96JmyAo-S\",\n        tonBridgeAddressV2: \"\",\n        tonBridgeV2EVMAddress: \"\",\n        tonCollectorAddressV2: \"\",\n        tonMultisigAddressV2: \"\",\n        tonCenterUrl: \"https://toncenter.com/api/v2/jsonRPC\",\n        tonCenterApiKey:\n          \"d843619b379084d133f061606beecbf72ae2bf60e0622e808f2a3f631673599b\",\n        rpcEndpoint:\n          \"https://mainnet.infura.io/v3/d29ee9db9b7b4bbc8fa5d28047a3ff47\",\n        chainId: 1,\n        blocksConfirmations: 12,\n        defaultGwei: 25,\n        coinsPerGweiTo: 0.004,\n        coinsPerGweiFrom: 0.001,\n      },\n      test: {\n        getGasUrl: \"https://ethereumgas.toncenter.com\",\n        explorerUrl: \"https://goerli.etherscan.io/token/<ADDRESS>\",\n        wTonAddress: \"0xDB15ffaf2c88F2d89Db9365a5160D5b8c9448Ea6\",\n        tonBridgeAddress: \"Ef-56ZiqKUbtp_Ax2Qg4Vwh7yXXJCO8cNJAb229J6XXe4-aC\",\n        tonCollectorAddress: \"EQCA1W_I267-luVo9CzV7iCcrA1OO5vVeXD0QHACvBn1jIVU\",\n        tonMultisigAddress: \"kf-OV1dpgFVEzEmyvAETT8gnhqZ1IqHn8RzT6dmEmvnze-9n\",\n        tonBridgeV2EVMAddress: \"0x4E1edf0df291308e127F42af57E95519BDd78412\",\n        tonBridgeAddressV2: \"Ef8KQJu6icsG2p9kEmWvjr7OfXZriklfH07r0Bome7-oj6bq\",\n        tonCollectorAddressV2:\n          \"Ef8XgFexQROKv4NSFzV-KC0fb_pFZqkPDgFXHF32WEuniiaC\",\n        tonMultisigAddressV2:\n          \"Ef_J6OpV-tAdJjby1fvE6oD2-Put6VL4fuFn-g4qDVQDXPAi\",\n        tonCenterUrl: \"https://testnet.toncenter.com/api/v2/jsonRPC\",\n        tonCenterApiKey:\n          \"d843619b379084d133f061606beecbf72ae2bf60e0622e808f2a3f631673599b\",\n        rpcEndpoint:\n          \"https://goerli.infura.io/v3/1f24ea6b55e9432d993a9c0ff68eeee5\",\n        chainId: 5,\n        blocksConfirmations: 12,\n        defaultGwei: 25,\n        coinsPerGweiTo: 0.004,\n        coinsPerGweiFrom: 0.001,\n      },\n    },\n    bsc: {\n      main: {\n        getGasUrl:\n          \"https://gbsc.blockscan.com/gasapi.ashx?apikey=key&method=gasoracle\",\n        explorerUrl: \"https://bscscan.com/token/<ADDRESS>\",\n        wTonAddress: \"0x76A797A59Ba2C17726896976B7B3747BfD1d220f\",\n        tonBridgeAddress: \"Ef9NXAIQs12t2qIZ-sRZ26D977H65Ol6DQeXc5_gUNaUys5r\",\n        tonCollectorAddress: \"EQAHI1vGuw7d4WG-CtfDrWqEPNtmUuKjKFEFeJmZaqqfWTvW\",\n        tonMultisigAddress: \"kf8OvX_5ynDgbp4iqJIvWudSEanWo0qAlOjhWHtga9u2Yo7j\",\n        tonBridgeV2EVMAddress: \"\",\n        tonBridgeAddressV2: \"\",\n        tonCollectorAddressV2: \"\",\n        tonMultisigAddressV2: \"\",\n        tonCenterUrl: \"https://toncenter.com/api/v2/jsonRPC\",\n        tonCenterApiKey:\n          \"d843619b379084d133f061606beecbf72ae2bf60e0622e808f2a3f631673599b\",\n        rpcEndpoint: \"https://bsc-dataseed.binance.org/\",\n        chainId: 56,\n        blocksConfirmations: 12,\n        defaultGwei: 5,\n        coinsPerGweiTo: 0.0008,\n        coinsPerGweiFrom: 0.0002,\n      },\n      test: {\n        getGasUrl:\n          \"https://gbsc.blockscan.com/gasapi.ashx?apikey=key&method=gasoracle\",\n        explorerUrl: \"https://testnet.bscscan.com/token/<ADDRESS>\",\n        wTonAddress: \"0xdb15ffaf2c88f2d89db9365a5160d5b8c9448ea6\",\n        tonBridgeAddress: \"Ef_GmJntTDokxfhLGF1jRvMGC8Jav2V5keoNj4El2jzhHsID\",\n        tonCollectorAddress: \"EQDBNfV4DQzSyzNMw6BCTSZSoUi-CzWcYNsfhKxoDqfrwFtS\",\n        tonMultisigAddress: \"kf83VnnXuaqQV1Ts2qvUr6agacM0ydOux5NNa1mcU-cEO693\",\n        tonBridgeV2EVMAddress: \"0xA25805A3b25CBa417FCEa44d9A73c4f923415F5B\",\n        tonBridgeAddressV2: \"Ef9wQwTpfH3zF6L1cNpRQF4bjJE0sqYRrt_JfrQbmeJn_Hh2\",\n        tonCollectorAddressV2:\n          \"EQDCJE2o5aX0U5YZslZYFChWsgZpRFVml_b9xQPmLmVPegPW\",\n        tonMultisigAddressV2:\n          \"kf8ghwmw3afnQwnGG4W99hMvMxqlkfUm2QtHXiux1ElPO4tG\",\n        tonCenterUrl: \"https://testnet.toncenter.com/api/v2/jsonRPC\",\n        tonCenterApiKey:\n          \"d843619b379084d133f061606beecbf72ae2bf60e0622e808f2a3f631673599b\",\n        rpcEndpoint: \"https://data-seed-prebsc-1-s1.binance.org:8545/\",\n        chainId: 97,\n        blocksConfirmations: 12,\n        defaultGwei: 5,\n        coinsPerGweiTo: 0.0008,\n        coinsPerGweiFrom: 0.0002,\n      },\n    },\n  },\n};\n","function getScript(src: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const script: HTMLScriptElement = document.createElement(\"script\");\n    const prior = document.getElementsByTagName(\"script\")[0];\n    script.async = true;\n\n    script.onload = () => {\n      script.onload = null;\n      script.onerror = null;\n      setTimeout(resolve, 0);\n    };\n\n    script.onerror = () => {\n      script.onload = null;\n      script.onerror = null;\n      setTimeout(reject, 0);\n    };\n\n    script.src = src;\n    prior.parentNode!.insertBefore(script, prior);\n  });\n}\n\nfunction supportsLocalStorage(): boolean {\n  try {\n    return \"localStorage\" in window && window[\"localStorage\"] !== null;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction parseChainId(chainId: string | number): number {\n  if (typeof chainId === \"number\") {\n    return chainId;\n  }\n  if (typeof chainId === \"string\") {\n    return parseInt(chainId, chainId.toLowerCase().startsWith(\"0x\") ? 16 : 10);\n  } else {\n    return 0;\n  }\n}\n\nexport {\n  getScript,\n  parseChainId,\n  supportsLocalStorage\n};\n","var map = {\n\t\"./metamask/index\": [\n\t\t15517,\n\t\t517\n\t],\n\t\"./walletConnect/index\": [\n\t\t84528,\n\t\t528\n\t],\n\t\"./walletLink/index\": [\n\t\t41686,\n\t\t686\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 38988;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"517\":\"0b704fca\",\"528\":\"1dc83c57\",\"686\":\"5f521528\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"ton-token-bridge:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/token-bridge/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkton_token_bridge\"] = self[\"webpackChunkton_token_bridge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(26693); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_router_view","_resolveComponent","_component_layout","_openBlock","_createBlock","default","_withCtx","_createVNode","_","_hoisted_1","class","_component_Alert","_createElementBlock","_renderSlot","$slots","undefined","alert","key","title","message","buttonLabel","onClose","$event","setAlert","_createCommentVNode","_hoisted_2","_Transition","name","appear","_createElementVNode","onClick","args","close","_toDisplayString","defineComponent","props","type","String","required","created","document","addEventListener","this","onKeyDown","beforeUnmount","removeEventListener","methods","e","keyCode","$emit","__exports__","components","Alert","mapMutations","computed","mapGetters","mounted","documentElement","classList","add","primaryInput","watch","newVal","Layout","ctx","normalize","_normalize","interpolate","_interpolate","named","_named","createI18n","legacy","locale","navigator","language","split","process","fallbackLocale","messages","en","ru","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_component_Header","_component_CustomInput","_component_BridgeProcessor","_component_Footer","_component_WalletsPopup","isTestnet","isConnected","walletsPopupState","provider","history","isShown","isTransferInProgress","style","_normalizeStyle","contentStyle","_normalizeClass","isFromTon","disabled","isPairsBlocked","_createTextVNode","$t","netTypeName","left","right","_Fragment","_renderList","fromPairs","item","index","onPairClick","token","toggleFromTon","pair","toPairs","href","pairNetworkCoinUrl","target","isInputsBlocked","label","dropdown","value","modelValue","error","errors","tokenAddress","onChanged","onBlur","checkInputs","tokenSymbol","amount","amountInput","toAddress","_withDirectives","willReceive","_vShow","bridgeProcessorIsLoading","ref","isRecover","lt","hash","isInputsValid","onTransferInProgress","onStateChanged","getPairGasFee__debounced","onResetState","resetState","onSaveState","saveState","onDeleteState","deleteState","onReady","onBridgeProcessorReady","onError","onBridgeTransferError","pairFee","bridgeFee","params","uncancellable","onWalletConnected","onCancel","readIntFromBitString","bs","cursor","bits","BigInt","i","get","parseAddress","cell","hashPart","toString","s","padStart","TonWeb","async","getJettonWalletData","tonweb","jettonWalletAddress","jettonWalletData","call2","balance","ownerAddress","jettonMinterAddress","jettonWalletCode","getWrappedTokenData","wrappedTokenData","chainId","decimals","getJettonWalletAddress","userTonAddress","writeAddress","getWalletAddressResponse","toBoc","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","state","step","hasApprove","showLoader","isInitInProgress","isBurningInProgress","isLockingInProgress","onTransferClick","isApprovingInProgress","approve","isCancelVisible","onCancelClick","none","pending","done","getStepInfoText1","isOnlyText","text","send1","onCopyClick","amountReadable","send2","withComment","comment","openWalletUrl","openWalletLabel","isQRCodeShown","generateQRCode","scanQRCode","getStepInfoText2","getStepInfoText3","getStepInfoText4","isGetTonCoinVisible","isMintingInProgress","mint","coin","toCoin","isDoneVisible","onDoneClick","burnJetton","tonwebWallet","destinationAddress","jettonAmountWithDecimals","burnOP","queryId","burnPayload","writeUint","customPayload","writeCoins","writeBit","refs","push","send","to","data","dataType","mintJetton","bridgeTonAddress","mintOP","mintPayload","timeout1","timeout2","triggerClass","className","remove","clearTimeout","setTimeout","clipboard","writeText","innerText","then","getNumber","parseInt","findLogOutMsg","outMessages","outMsg","destination","getRawMessageBytes","logMsg","substr","length","getTextMessageBytes","msg_data","textBytes","bytes","Uint8Array","set","getMessageBytes","msgType","console","makeAddress","address","startsWith","Error","hex","decToHex","dec","parseEvmSignature","tuple","elements","publicKey","number","rsv","r","v","Number","getEvmSignaturesFromCollector","tonCollectorAddress","voteId","intVoteId","log","result","call","exit_code","list","stack","status","signatures","map","Web3","MULTISIG_QUERY_TIMEOUT","getQueryId","evmTransaction","VERSION","timeout","blockTime","getLegacyQueryString","str","strArr","join","blockHash","transactionHash","logIndex","mul","BridgeContract","constructor","_getContract","Object","keys","contracts","includes","_registerContract","contract","Contract","BRIDGE","symbol","lock","to_address_hash","connect","getSigner","unlock","bridgeAddress","ethReceiver","jettonAmount","tx","resp","receiver","address_hash","address_","tx_hash","ERC20Contract","ERC20","balanceOf","account","allowance","owner","spender","BLOCK_CONFIRMATIONS_COUNT","parseField","field","x","parseEvmTxHash","toLowerCase","parseEvmBlockHash","parseEvmAddress","parseNumber","isNaN","parseTonAddress","slice","parseWc","parseDecimals","parseBN","bn","lte","BN","BURN_INPUT_LENGTH","BURN_INPUT_PREFIX","ToncoinBridge","static","feeFlat","feeFactor","feeBase","rest","sub","percentFee","div","web3","d","eth","abi","encodeParameters","workchain","setHash","addresses","newBurnStatus","nonce","ethToTon","payload","writeInt","from","addressHash","logs","count","topics","endsWith","decoded","decodeParameters","wtonAddress","isError","txreceipt_status","input","confirmations","receipt","currentBlockNumber","blockNumber","transactionIndex","decodedInput","findLog","rawData","t","out_msgs","amountHex","senderAddress","in_msg","source","addressFromInMsg","TextDecoder","decode","amountFromInMsg","amountFromInMsgAfterFee","getFeeAmount","eq","wc","transaction_id","time","utime","LOCK_INPUT_LENGTH","LOCK_INPUT_PREFIX","lockEventDataTypes","TokenBridge","event","newLockStatus","lockEvent","lockInputTypes","inputData","userSenderAddressHex","queryIdHex","userSenderAddress","getVotesInMultisig","tonMultisigAddress","oraclesTotal","a","b","arr","fromNano","Boolean","updateStateIntervalForTon","updateStateIntervalForJettons","providerDataForTon","providerDataForJettons","swapId","jettonEvmAddress","fromCurrencySent","toCurrencySent","votes","swapData","burnData","createTime","pairParams","PARAMS","fromCoin","url","tonBridgeAddress","replace","providerData","blocksConfirmations","Math","max","min","getOraclesText","getGetCoinsText","immediate","handler","val","newValue","onTokenChange","$watch","debounce","newAmount","checkApprove","beforeDestroy","clearInterval","mintForTon","unlockForJettons","updateStateForTon","setInterval","updateStateForJettons","erc20Contract","userErcBalance","tonBridgeV2EVMAddress","myAddress","gt","MaxInt256","wait","oraclesStep","votesConfirmations","getCoinsStep","toNetwork","options","width","window","devicePixelRatio","height","image","require","dotsOptions","color","cornersSquareOptions","cornersDotOptions","imageOptions","hideBackgroundDots","crossOrigin","imageSize","qrOptions","errorCorrectionLevel","qrCode","QRCodeStyling","append","$refs","qrcode","processingState","initProviderForJettons","initProviderForTON","assign","swap","getSwapForTON","getSwapTonToEthIdForTon","getBlockNumber","getTransactionReceipt","block","getBlock","timestamp","getEthVoteForTON","getTonVoteForTON","getSwapForJettons","getEthVoteForJettons","getTonVoteForJettons","isPaid","isJettonMintPaid","wTonAddress","getDataId","getSwapTonToEthIdForJettons","getFeeAmountForTon","myAmount","myToAddress","myCreateTime","transactions","getTransactions","processTonTransaction","JSON","stringify","amountAfterFee","tonBridgeAddressV2","processPayJettonMintTransaction","toLocaleLowerCase","isVotingFinished","bridgeContract","finishedVotings","tonCollectorAddressV2","tonMultisigAddressV2","network","getBalance","isProviderReady","checkProviderIsReady","signer","signature","ethers","sort","cmp","wtonContract","voteForMinting","on","fromAddress","addressTon","burn","events","SwapEthToTon","amountUnits","parseUnits","find","wallets","wallet","gte","formatUnits","toFixed","WTON_BRIDGE","getFullOracleSet","tonCenterUrl","apiKey","tonCenterApiKey","bridgeData","feeNetwork","res","tonWalletProvider","ton","isTonWallet","Date","now","burnForTON","tokenAmountWithDecimals","lockToken","hasData","isDropdownOpened","readonly","hasDropdown","id","$uuid","v1","inputmode","onInput","onFocus","onFocusout","onInputFocusOut","model","_vModelDynamic","for","onOptionClick","Array","elem","relatedTarget","parentNode","$el","isScrolled","_resolveDynamicComponent","isHistoryShown","parentUrl","showMenu","onDisconnectClick","disableDisconnect","pageYOffset","historyAddress","historyNetwork","query","$route","generateUrlWithQuery","historyUrl","forEach","netKey","net","subnetKey","subnet","onScroll","urlVars","encodeURIComponent","$router","resolve","disconnect","isLoading","providersList","onProviderClick","loadingProviderName","PROVIDERS","metamask","providerName","providerComponentName","ProviderComponent","rpcEndpoint","$te","PAIRS","toNano","BridgeProcessor","WalletsPopup","CustomInput","Header","Footer","head","gasPrice","mainPageFixedPosition","explorerUrl","bridgeFeeAmount","isZero","fee","defaultGwei","coinsPerGweiTo","coinsPerGweiFrom","fixedFeeNano","floatFeeNano","muln","divn","filter","position","top","oldVal","isChanged","switchChain","lodashDebounce","getPairGasFee","testnet","recover","recovery","isRecovery","fromNetwork","loadStateBridge","newTokenAddress","newToken","switchDirection","toPair","supportsLocalStorage","raw","localStorage","getItem","parse","loadStateProcessor","bridgeProcessor","loadState","setItem","removeItem","isActive","response","fetch","getGasUrl","method","cache","ok","json","parseFloat","average","SafeGasPrice","markRaw","routes","path","component","BridgePageVue","router","createRouter","createWebHistory","createStore","mutations","getters","actions","createApp","App","use","UUID","i18n","store","mount","appName","appLogoUrl","tonTransferUrl","tonExplorerUrl","main","test","networks","bsc","getScript","src","Promise","reject","script","createElement","prior","getElementsByTagName","onload","onerror","insertBefore","parseChainId","webpackAsyncContext","req","__webpack_require__","o","code","ids","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","getter","__esModule","definition","defineProperty","enumerable","f","chunkId","all","reduce","promises","u","miniCssF","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","needAttach","scripts","getAttribute","charset","nc","setAttribute","onScriptComplete","prev","doneFns","removeChild","bind","appendChild","Symbol","toStringTag","nmd","paths","children","p","installedChunks","installedChunkData","promise","loadingEnded","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}