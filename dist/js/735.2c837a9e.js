"use strict";(self["webpackChunkton_token_bridge"]=self["webpackChunkton_token_bridge"]||[]).push([[735],{9735:function(e,n,t){t.r(n),t.d(n,{Metamask:function(){return a}});var i=t(2482),s=t(6141),o=t(9432),h=t(1832),c=t.n(h),r=t(7688),d=t(5941);class a{constructor(){(0,i.Z)(this,"name","metamask"),(0,i.Z)(this,"title","Metamask"),(0,i.Z)(this,"web3",null),(0,i.Z)(this,"myAddress",""),(0,i.Z)(this,"chainId",0),(0,i.Z)(this,"isConnected",!1),(0,i.Z)(this,"emitter",void 0),(0,i.Z)(this,"provider",void 0),this.emitter=(0,o.i)(),this.onAccountsChanged=this.onAccountsChanged.bind(this),this.onChainChanged=this.onChainChanged.bind(this),this.onDisconnect=this.onDisconnect.bind(this),this.onConnect=this.onConnect.bind(this)}on(e,n){return this.emitter.on(e,n)}async connect(e){if(!window.ethereum)throw new Error("errors.installMetamask");try{await window.ethereum.request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]});const e=(await window.ethereum.send("eth_requestAccounts")).result;this.myAddress=e[0]}catch(n){if(4001===n.code)return d.log(n.message),!1;throw new Error(n.message)}return this.chainId=(0,r.DQ)(window.ethereum.networkVersion),this.isConnected=window.ethereum.isConnected(),this.web3=new(c())(window.ethereum),this.provider=new s.Q(this.web3?.currentProvider),window.ethereum.on("accountsChanged",this.onAccountsChanged),window.ethereum.on("chainChanged",this.onChainChanged),window.ethereum.on("disconnect",this.onDisconnect),window.ethereum.on("connect",this.onConnect),!0}onAccountsChanged(e){d.log("account changed, old address: ",this.myAddress),e&&e.length?this.myAddress=e[0]:this.myAddress="",d.log("account changed, new address: ",this.myAddress),this.onDisconnect(0,"")}onChainChanged(e){d.log("chain changed, old chain: ",this.chainId),this.chainId=(0,r.DQ)(e),d.log("chain changed, new chain: ",this.chainId),this.onDisconnect(0,"")}onDisconnect(e,n){this.isConnected=!1,d.log("disconnected"),window.ethereum.removeAllListeners(),this.emitter.emit("disconnect"),this.emitter.events={}}onConnect(){this.isConnected=!0,d.log("connected")}async switchChain(e){try{await window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:"0x"+e.toString(16)}]})}catch(n){return d.log(n.message),!1}return!0}disconnect(){this.onDisconnect(0,"")}}}}]);
//# sourceMappingURL=735.2c837a9e.js.map