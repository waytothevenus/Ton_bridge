{"version":3,"file":"js/app.106e92ca.js","mappings":"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","sources":["webpack://ton-token-bridge/./src/App.vue?1cba","webpack://ton-token-bridge/./src/components/Layout/index.vue?cb55","webpack://ton-token-bridge/./src/components/Alert/index.vue?a547","webpack://ton-token-bridge/./src/components/Alert/index.vue?c817","webpack://ton-token-bridge/./src/components/Alert/index.vue","webpack://ton-token-bridge/./src/components/Layout/index.vue?fe81","webpack://ton-token-bridge/./src/components/Layout/index.vue","webpack://ton-token-bridge/./src/App.vue?847a","webpack://ton-token-bridge/./src/App.vue","webpack://ton-token-bridge/./src/locales/en.json","webpack://ton-token-bridge/./src/locales/ru.json","webpack://ton-token-bridge/./src/i18n.ts","webpack://ton-token-bridge/./src/views/BridgePage/index.vue?b9ab","webpack://ton-token-bridge/./src/components/BridgeProcessor/index.vue?7657","webpack://ton-token-bridge/./src/ton-bridge-lib/Paranoid.ts","webpack://ton-token-bridge/./src/ton-bridge-lib/BridgeJettonUtils.ts","webpack://ton-token-bridge/./src/api/tonWallet.ts","webpack://ton-token-bridge/./src/utils/index.ts","webpack://ton-token-bridge/./src/ton-bridge-lib/BridgeTonUtils.ts","webpack://ton-token-bridge/./src/ton-bridge-lib/BridgeCollector.ts","webpack://ton-token-bridge/./src/ton-bridge-lib/BridgeCommon.ts","webpack://ton-token-bridge/./src/utils/services/ERC20.contract.ts","webpack://ton-token-bridge/./src/ton-bridge-lib/BridgeEvmUtils.ts","webpack://ton-token-bridge/./src/ton-bridge-lib/ToncoinBridge.ts","webpack://ton-token-bridge/./src/ton-bridge-lib/TokenBridge.ts","webpack://ton-token-bridge/./src/ton-bridge-lib/BridgeMultisig.ts","webpack://ton-token-bridge/./src/components/BridgeProcessor/index.vue?f8df","webpack://ton-token-bridge/./src/components/BridgeProcessor/index.vue","webpack://ton-token-bridge/./src/components/CustomInput/index.vue?588b","webpack://ton-token-bridge/./src/components/CustomInput/index.vue?ab6c","webpack://ton-token-bridge/./src/components/CustomInput/index.vue","webpack://ton-token-bridge/./src/components/Footer/index.vue?978e","webpack://ton-token-bridge/./src/components/Footer/index.vue?c866","webpack://ton-token-bridge/./src/components/Footer/index.vue","webpack://ton-token-bridge/./src/components/Header/index.vue?6b38","webpack://ton-token-bridge/./src/components/Header/index.vue?cfa2","webpack://ton-token-bridge/./src/components/Header/index.vue","webpack://ton-token-bridge/./src/components/WalletsPopup/index.vue?6d3f","webpack://ton-token-bridge/./src/components/WalletsPopup/index.vue?6fd6","webpack://ton-token-bridge/./src/components/WalletsPopup/index.vue","webpack://ton-token-bridge/./src/views/BridgePage/index.vue?d159","webpack://ton-token-bridge/./src/views/BridgePage/index.vue","webpack://ton-token-bridge/./src/router/index.ts","webpack://ton-token-bridge/./src/store/index.ts","webpack://ton-token-bridge/./src/main.ts","webpack://ton-token-bridge/./src/utils/constants.ts","webpack://ton-token-bridge/./src/utils/helpers.ts","webpack://ton-token-bridge/./src/utils/providers/ lazy ^\\.\\/.*\\/index$ namespace object","webpack://ton-token-bridge/webpack/bootstrap","webpack://ton-token-bridge/webpack/runtime/amd options","webpack://ton-token-bridge/webpack/runtime/chunk loaded","webpack://ton-token-bridge/webpack/runtime/compat get default export","webpack://ton-token-bridge/webpack/runtime/define property getters","webpack://ton-token-bridge/webpack/runtime/ensure chunk","webpack://ton-token-bridge/webpack/runtime/get javascript chunk filename","webpack://ton-token-bridge/webpack/runtime/get mini-css chunk filename","webpack://ton-token-bridge/webpack/runtime/global","webpack://ton-token-bridge/webpack/runtime/hasOwnProperty shorthand","webpack://ton-token-bridge/webpack/runtime/load script","webpack://ton-token-bridge/webpack/runtime/make namespace object","webpack://ton-token-bridge/webpack/runtime/node module decorator","webpack://ton-token-bridge/webpack/runtime/publicPath","webpack://ton-token-bridge/webpack/runtime/jsonp chunk loading","webpack://ton-token-bridge/webpack/startup"],"sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n  const _component_layout = _resolveComponent(\"layout\")!\n\n  return (_openBlock(), _createBlock(_component_layout, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_router_view)\n    ]),\n    _: 1\n  }))\n}","import { renderSlot as _renderSlot, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7043d382\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"LayoutDefault\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Alert = _resolveComponent(\"Alert\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _renderSlot(_ctx.$slots, \"default\", {}, undefined, true),\n    (_ctx.alert)\n      ? (_openBlock(), _createBlock(_component_Alert, {\n          key: 0,\n          title: _ctx.alert.title,\n          message: _ctx.alert.message,\n          buttonLabel: _ctx.alert.buttonLabel,\n          onClose: _cache[0] || (_cache[0] = ($event: any) => (_ctx.setAlert(null)))\n        }, null, 8, [\"title\", \"message\", \"buttonLabel\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Transition as _Transition, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-01a3d5d7\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"Alert\" }\nconst _hoisted_2 = { class: \"Alert-panel\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_Transition, {\n    name: \"AlertTransition\",\n    appear: \"\"\n  }, {\n    default: _withCtx(() => [\n      _createElementVNode(\"aside\", _hoisted_1, [\n        _createElementVNode(\"div\", {\n          class: \"Alert-overlay\",\n          onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.close && _ctx.close(...args)))\n        }),\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"h2\", null, _toDisplayString(_ctx.title), 1),\n          _createElementVNode(\"p\", null, _toDisplayString(_ctx.message), 1),\n          _createElementVNode(\"button\", {\n            onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.close && _ctx.close(...args)))\n          }, _toDisplayString(_ctx.buttonLabel), 1)\n        ])\n      ])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    title: { type: String, required: true },\n    message: { type: String, required: true },\n    buttonLabel: { type: String, required: true },\n  },\n  created() {\n    document.addEventListener(\"keydown\", this.onKeyDown);\n  },\n\n  beforeUnmount() {\n    document.removeEventListener(\"keydown\", this.onKeyDown);\n  },\n\n  methods: {\n    onKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === 27) {\n        this.close();\n      }\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=01a3d5d7&scoped=true&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=01a3d5d7&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-01a3d5d7\"]])\n\nexport default __exports__","\nimport { primaryInput } from \"detect-it\";\nimport { defineComponent } from \"vue\";\nimport { mapGetters, mapMutations } from \"vuex\";\n\nimport Alert from \"@/components/Alert/index.vue\";\n\nexport default defineComponent({\n  name: \"LayoutDefault\",\n\n  components: { Alert },\n  methods: { ...mapMutations([\"setAlert\"]) },\n\n  computed: {\n    ...mapGetters([\"alert\"]),\n  },\n\n  mounted() {\n    // for active/hovers on touch/mouse devices\n    document.documentElement.classList.add(\n      primaryInput === \"touch\" ? \"isTouch\" : \"isPointer\"\n    );\n  },\n\n  watch: {\n    alert: function (newVal) {\n      if (newVal !== null) {\n        this.alert = { ...newVal };\n      }\n    },\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=7043d382&scoped=true&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=7043d382&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7043d382\"]])\n\nexport default __exports__","\nimport { defineComponent } from \"vue\";\n\nimport Layout from \"@/components/Layout/index.vue\";\n\nexport default defineComponent({ components: { Layout } });\n","import { render } from \"./App.vue?vue&type=template&id=112ad411&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export default {\n  \"logoLabel\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Bridge\"])},\n  \"connectWallet\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Connect Wallet\"])},\n  \"testnetMessage\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"This is the testnet version. Dont send real coins!\"])},\n  \"providers\": {\n    \"metamask\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Metamask\"])},\n    \"walletConnect\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"WalletConnect\"])},\n    \"walletLink\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Coinbase Wallet\"])}\n  },\n  \"networks\": {\n    \"ton\": {\n      \"currency\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])},\n      \"transactionCompleted\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON transaction completed successfully\"])},\n      \"transactionSend1\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Please send \"])},\n      \"transactionSend2\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin to the address\"])},\n      \"transactionSendComment\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"with the comment\"])},\n      \"openWallet\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Open Wallet\"])},\n      \"generateQRCode\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Generate QR Code\"])},\n      \"scanQRCode\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"or scan QR code below\"])},\n      \"errors\": {\n        \"invalidAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Not valid TON address\"])}\n      },\n      \"main\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"The Open Network\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"The Open\\nNetwork\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])}\n      },\n      \"test\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON Testnet\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON\\nTestnet\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])}\n      }\n    },\n    \"eth\": {\n      \"currency\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"ETH\"])},\n      \"pageTitle\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON-ETH Bridge\"])},\n      \"gasFee\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Ethereum gas fee ~ \", _interpolate(_named(\"fee\")), \" ETH\"])},\n      \"transactionCompleted\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum transaction completed successfully\"])},\n      \"transactionWait\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Please wait for the Ethereum transaction to be processed\"])},\n      \"transactionSend\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Please send Ethereum transaction in \", _interpolate(_named(\"provider\"))])},\n      \"blocksConfirmations\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Collected \", _interpolate(_named(\"count\")), \" Ethereum block confirmations\"])},\n      \"errors\": {\n        \"invalidAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Not valid ETH address\"])},\n        \"lowBalance\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"You need to have ETH on your wallet to pay for gas in the Ethereum network\"])}\n      },\n      \"main\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum Network\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum\\nNetwork\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"ETH\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN (ERC-20)\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN\"])}\n      },\n      \"test\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum Goerli\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum\\nGoerli\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"ETH\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN (ERC-20)\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN\"])}\n      }\n    },\n    \"bsc\": {\n      \"currency\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BNB\"])},\n      \"pageTitle\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON-BSC Bridge\"])},\n      \"gasFee\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"BSC gas fee ~ \", _interpolate(_named(\"fee\")), \" BNB\"])},\n      \"transactionCompleted\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC transaction completed successfully\"])},\n      \"transactionWait\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Please wait for the BSC transaction to be processed\"])},\n      \"transactionSend\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Please send BSC transaction in \", _interpolate(_named(\"provider\"))])},\n      \"blocksConfirmations\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Collected \", _interpolate(_named(\"count\")), \" BSC block confirmations\"])},\n      \"errors\": {\n        \"invalidAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Not valid BSC address\"])},\n        \"lowBalance\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"You need to have BNB on your wallet to pay for gas in the BSC network\"])}\n      },\n      \"main\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Binance Smart Chain\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Binance\\nSmart Chain\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN (BEP-20)\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN\"])}\n      },\n      \"test\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC Testnet\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC\\nTestnet\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN (BEP-20)\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN\"])}\n      }\n    }\n  },\n  \"tokenAddress\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Token address in \", _interpolate(_named(\"network\")), \" network\"])},\n  \"sendToken\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Asset\"])},\n  \"amountOfTon\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Amount \", _interpolate(_named(\"tokenSymbol\"))])},\n  \"addressInputLabel\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Destination address in \", _interpolate(_named(\"network\")), \" network\"])},\n  \"willReceive\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"You will receive \", _interpolate(_named(\"fee\")), \" \", _interpolate(_named(\"coin\"))])},\n  \"bridgeFeeAbove10\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Bridge fee - \", _interpolate(_named(\"fee\")), \" TON\"])},\n  \"bridgeFeeBelow10\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Bridge fee - 5 TON + 0.25% of amount\"])},\n  \"tokenBridgeFee\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Bridge fee - 1 TON\"])},\n  \"sourceCode\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Source Code\"])},\n  \"howItWorks\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"How it works\"])},\n  \"documentation\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Documentation\"])},\n  \"transferHistory\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"History\"])},\n  \"disconnectWallet\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Disconnect\"])},\n  \"transfer\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Transfer\"])},\n  \"getToncoin\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Get \", _interpolate(_named(\"coin\"))])},\n  \"done\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Done\"])},\n  \"cancel\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Cancel\"])},\n  \"blocksConfirmationsCollected\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"The confirmations of the blocks are collected\"])},\n  \"blocksConfirmationsWaiting\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Wait a bit for the blocks confirmations\"])},\n  \"oraclesConfirmations\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Collected \", _interpolate(_named(\"count\")), \" confirmations of oracles\"])},\n  \"oraclesConfirmationsCollected\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"The confirmations of the oracles are collected\"])},\n  \"oraclesConfirmationsWaiting\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Wait a bit for the oracles to confirm the transfer\"])},\n  \"getCoinsByProvider\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Get \", _interpolate(_named(\"toCoin\")), \"s by \", _interpolate(_named(\"provider\"))])},\n  \"coinsSent\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([_interpolate(_named(\"toCoin\")), \"s have been sent\"])},\n  \"getCoins\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Get \", _interpolate(_named(\"toCoin\")), \"s in \", _interpolate(_named(\"toNetwork\"))])},\n  \"otherTokens\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Other tokens\"])},\n  \"tokens\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"token\"])},\n  \"errors\": {\n    \"alertTitleError\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Error\"])},\n    \"alertButtonClose\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Close\"])},\n    \"notValidAmount\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Amount is not valid number\"])},\n    \"amountBelow10\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Amount must be at least 10 TON\"])},\n    \"needPersonalAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Please enter YOUR address to receive\"])},\n    \"toncoinBalance\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"You have only \", _interpolate(_named(\"balance\")), \" \", _interpolate(_named(\"coin\"))])},\n    \"installMetamask\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Please install MetaMask\"])},\n    \"wrongProviderNetwork\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Set chain to \", _interpolate(_named(\"network\")), \" in \", _interpolate(_named(\"provider\"))])},\n    \"cantGetAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Can't get account address\"])},\n    \"providerIsDisconnected\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([_interpolate(_named(\"provider\")), \" is disconnected\"])}\n  },\n  \"history\": {\n    \"title\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Recent history\"])},\n    \"recentHistory\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Recent history\"])},\n    \"age\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Date\"])},\n    \"amountFrom\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Amount / From (Network)\"])},\n    \"amountTo\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Amount Received / To (Network)\"])},\n    \"fee\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Gas / Bridge Fee\"])},\n    \"status\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Status\"])},\n    \"completed\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"completed\"])},\n    \"getToncoin\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Get \", _interpolate(_named(\"coin\"))])},\n    \"connect\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Connect\"])},\n    \"oracles\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([_interpolate(_named(\"count\")), \" of oracles\"])},\n    \"notFound\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"No transfers found\"])}\n  }\n}","export default {\n  \"logoLabel\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Бридж\"])},\n  \"connectWallet\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Подключить Кошелек\"])},\n  \"testnetMessage\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Работа в режиме тестовой сети. Не отправляйте реальные монеты!\"])},\n  \"providers\": {\n    \"metamask\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Metamask\"])},\n    \"walletConnect\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"WalletConnect\"])},\n    \"walletLink\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Coinbase Wallet\"])}\n  },\n  \"networks\": {\n    \"ton\": {\n      \"currency\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])},\n      \"transactionCompleted\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Транзакция TON успешно завершена\"])},\n      \"transactionSend1\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Пожалуйста, отправьте \"])},\n      \"transactionSend2\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin на адрес\"])},\n      \"transactionSendComment\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"с комментарием\"])},\n      \"openWallet\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Открыть Кошелек\"])},\n      \"generateQRCode\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Сгенерировать QR-код\"])},\n      \"scanQRCode\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"или отсканируйте QR-код ниже\"])},\n      \"errors\": {\n        \"invalidAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Не валидный TON адрес\"])}\n      },\n      \"main\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"The Open Network\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"The Open\\nNetwork\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])}\n      },\n      \"test\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON Testnet\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON\\nTestnet\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Toncoin\"])}\n      }\n    },\n    \"eth\": {\n      \"currency\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"ETH\"])},\n      \"pageTitle\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON-ETH Бридж\"])},\n      \"gasFee\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Комиссия Ethereum (газ) ~ \", _interpolate(_named(\"fee\")), \" ETH\"])},\n      \"transactionCompleted\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Транзакция Ethereum успешно завершена\"])},\n      \"transactionWait\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Пожалуйста, подождите пока обрабатывается транзакция Ethereum\"])},\n      \"transactionSend\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Пожалуйста, подтвердите Ethereum транзакцию в \", _interpolate(_named(\"provider\"))])},\n      \"blocksConfirmations\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Собрано \", _interpolate(_named(\"count\")), \" подтверждений блоков Ethereum\"])},\n      \"errors\": {\n        \"invalidAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Не валидный ETH адрес\"])},\n        \"lowBalance\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"У вас должны быть ETH в кошельке чтобы оплатить газ в сети Ethereum\"])}\n      },\n      \"main\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum Network\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum\\nNetwork\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"ETH\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN (ERC-20)\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN\"])}\n      },\n      \"test\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum Goerli\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ethereum\\nGoerli\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"ETH\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN (ERC-20)\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN\"])}\n      }\n    },\n    \"bsc\": {\n      \"currency\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BNB\"])},\n      \"pageTitle\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TON-BSC Бридж\"])},\n      \"gasFee\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Комиссия BSC (газ) ~ \", _interpolate(_named(\"fee\")), \" BNB\"])},\n      \"transactionCompleted\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Транзакция BSC успешно завершена\"])},\n      \"transactionWait\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Пожалуйста, подождите пока обрабатывается транзакция BSC\"])},\n      \"transactionSend\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Пожалуйста, подтвердите BSC транзакцию в \", _interpolate(_named(\"provider\"))])},\n      \"blocksConfirmations\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Собрано \", _interpolate(_named(\"count\")), \" подтверждений блоков BSC\"])},\n      \"errors\": {\n        \"invalidAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Не валидный BSC адрес\"])},\n        \"lowBalance\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"У вас должны быть BNB в кошельке чтобы оплатить газ в сети BSC\"])}\n      },\n      \"main\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Binance Smart Chain\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Binance\\nSmart Chain\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN (BEP-20)\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN\"])}\n      },\n      \"test\": {\n        \"name\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC Testnet\"])},\n        \"nameSwitcher\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC\\nTestnet\"])},\n        \"nameShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"BSC\"])},\n        \"coin\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN (BEP-20)\"])},\n        \"coinShort\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"TONCOIN\"])}\n      }\n    }\n  },\n  \"sendToken\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Токен\"])},\n  \"amountOfTon\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Количество \", _interpolate(_named(\"tokenSymbol\"))])},\n  \"tokenAddress\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Адрес токена в сети \", _interpolate(_named(\"network\"))])},\n  \"addressInputLabel\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Адрес получения в сети \", _interpolate(_named(\"network\"))])},\n  \"willReceive\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Вы получите \", _interpolate(_named(\"fee\")), \" \", _interpolate(_named(\"coin\"))])},\n  \"bridgeFeeAbove10\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Комиссия бриджа - \", _interpolate(_named(\"fee\")), \" TON\"])},\n  \"bridgeFeeBelow10\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Комиссия бриджа - 5 TON + 0.25% от суммы\"])},\n  \"tokenBridgeFee\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Комиссия бриджа - 1 TON\"])},\n  \"sourceCode\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Исходный код\"])},\n  \"howItWorks\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Как это работает\"])},\n  \"documentation\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Документация\"])},\n  \"transferHistory\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"История\"])},\n  \"disconnectWallet\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Отключить\"])},\n  \"transfer\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Перевод\"])},\n  \"getToncoin\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Получить \", _interpolate(_named(\"coin\"))])},\n  \"done\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Готово\"])},\n  \"cancel\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Отменить\"])},\n  \"blocksConfirmationsCollected\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Собраны подтверждения блоков\"])},\n  \"blocksConfirmationsWaiting\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Пожалуйста, подождите подтверждения блоков\"])},\n  \"oraclesConfirmations\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Собрано \", _interpolate(_named(\"count\")), \" подтверждений оракулов\"])},\n  \"oraclesConfirmationsCollected\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Собраны подтверждения оракулов\"])},\n  \"oraclesConfirmationsWaiting\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Пожалуйста, подождите подтверждения оракулов\"])},\n  \"getCoinsByProvider\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Получите \", _interpolate(_named(\"toCoin\")), \" в \", _interpolate(_named(\"provider\"))])},\n  \"coinsSent\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([_interpolate(_named(\"toCoin\")), \" были отправлены\"])},\n  \"getCoins\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Получите \", _interpolate(_named(\"toCoin\")), \" в \", _interpolate(_named(\"toNetwork\"))])},\n  \"otherTokens\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Другие токены\"])},\n  \"tokens\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"токены\"])},\n  \"errors\": {\n    \"alertTitleError\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ошибка\"])},\n    \"alertButtonClose\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Закрыть\"])},\n    \"notValidAmount\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Введено не валидное число\"])},\n    \"amountBelow10\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Количество должно быть не менее 10 TON\"])},\n    \"needPersonalAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Пожалуйста, введите СВОЙ адрес для получения\"])},\n    \"toncoinBalance\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"У вас всего \", _interpolate(_named(\"balance\")), \" \", _interpolate(_named(\"coin\"))])},\n    \"installMetamask\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Пожалуйста, установите MetaMask\"])},\n    \"wrongProviderNetwork\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Переключите сеть на \", _interpolate(_named(\"network\")), \" в \", _interpolate(_named(\"provider\"))])},\n    \"cantGetAddress\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Не могу получить адрес аккаунта\"])},\n    \"providerIsDisconnected\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([_interpolate(_named(\"provider\")), \" отключился\"])}\n  },\n  \"history\": {\n    \"title\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"История\"])},\n    \"recentHistory\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"История\"])},\n    \"age\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Дата\"])},\n    \"amountFrom\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Количество / Откуда (сеть)\"])},\n    \"amountTo\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Получено / Куда (сеть)\"])},\n    \"fee\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Газ / Бридж комиссии\"])},\n    \"status\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Статус\"])},\n    \"completed\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"завершено\"])},\n    \"getToncoin\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\"Получить \", _interpolate(_named(\"coin\"))])},\n    \"connect\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Подключить\"])},\n    \"oracles\": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([_interpolate(_named(\"count\")), \" оракулов\"])},\n    \"notFound\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Переводы не найдены\"])}\n  }\n}","import { createI18n } from \"vue-i18n\";\n\nimport en from \"./locales/en.json\";\nimport ru from \"./locales/ru.json\";\n\nexport default createI18n({\n  legacy: false,\n  locale:\n    navigator?.language?.split(\"-\")?.[0] ||\n    process.env.VUE_APP_I18N_LOCALE ||\n    \"en\",\n  fallbackLocale: process.env.VUE_APP_I18N_FALLBACK_LOCALE || \"en\",\n  messages: { en, ru },\n});\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, vShow as _vShow, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-809c3372\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"Bridge\" }\nconst _hoisted_2 = { class: \"Bridge-content\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, null, -1))\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"Bridge-imgAspect\" }, null, -1))\nconst _hoisted_5 = [\n  _hoisted_4\n]\nconst _hoisted_6 = { class: \"Bridge-form\" }\nconst _hoisted_7 = { class: \"Bridge-switcherTitle\" }\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"em\", null, null, -1))\nconst _hoisted_9 = [\"disabled\", \"onClick\"]\nconst _hoisted_10 = {\n  key: 0,\n  class: \"Bridge-switcherAnno\"\n}\nconst _hoisted_11 = [\"disabled\"]\nconst _hoisted_12 = { class: \"Bridge-switcherTitle\" }\nconst _hoisted_13 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"em\", null, null, -1))\nconst _hoisted_14 = [\"disabled\", \"onClick\"]\nconst _hoisted_15 = {\n  key: 0,\n  class: \"Bridge-switcherAnno\"\n}\nconst _hoisted_16 = [\"href\"]\nconst _hoisted_17 = { class: \"Bridge-bridgeWrapper\" }\nconst _hoisted_18 = {\n  key: 1,\n  class: \"Bridge-bridgeLoader\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Header = _resolveComponent(\"Header\")!\n  const _component_CustomInput = _resolveComponent(\"CustomInput\")!\n  const _component_BridgeProcessor = _resolveComponent(\"BridgeProcessor\")!\n  const _component_Footer = _resolveComponent(\"Footer\")!\n  const _component_WalletsPopup = _resolveComponent(\"WalletsPopup\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_Header, {\n      \"is-testnet\": _ctx.isTestnet,\n      \"show-menu\": _ctx.isEthereumWalletConnected && _ctx.walletsPopupState === 'closed',\n      ethereumProvider: _ctx.ethereumProvider,\n      \"disable-disconnect\": _ctx.isTransferInProgress\n    }, null, 8, [\"is-testnet\", \"show-menu\", \"ethereumProvider\", \"disable-disconnect\"]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _hoisted_3,\n      _createElementVNode(\"main\", null, [\n        _createElementVNode(\"div\", {\n          class: _normalizeClass([\"Bridge-img\", { isFromTon: _ctx.isFromTon }])\n        }, _hoisted_5, 2),\n        _createElementVNode(\"div\", _hoisted_6, [\n          _createElementVNode(\"div\", {\n            class: _normalizeClass([\"Bridge-switchers\", { isFromTon: _ctx.isFromTon }])\n          }, [\n            _createElementVNode(\"div\", {\n              class: _normalizeClass([\"Bridge-switcher\", { disabled: _ctx.isPairsBlocked }])\n            }, [\n              _createElementVNode(\"div\", _hoisted_7, [\n                _createElementVNode(\"span\", null, [\n                  _createTextVNode(_toDisplayString(_ctx.$t(`networks.ton.${_ctx.netTypeName}.nameSwitcher`)), 1),\n                  _hoisted_8\n                ]),\n                _createElementVNode(\"ul\", {\n                  class: _normalizeClass([\"Bridge-switcherList\", { left: _ctx.isFromTon, right: !_ctx.isFromTon }])\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.fromPairs, (item, index) => {\n                    return (_openBlock(), _createElementBlock(\"li\", { key: item }, [\n                      _createElementVNode(\"button\", {\n                        disabled: index === 0,\n                        onClick: ($event: any) => (_ctx.onPairClick(true, item))\n                      }, _toDisplayString(_ctx.$t(`networks.${item}.${_ctx.netTypeName}.name`)), 9, _hoisted_9)\n                    ]))\n                  }), 128))\n                ], 2)\n              ]),\n              (_ctx.token === 'ton')\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _toDisplayString(_ctx.$t(`networks.ton.${_ctx.netTypeName}.coin`)), 1))\n                : _createCommentVNode(\"\", true)\n            ], 2),\n            _createElementVNode(\"button\", {\n              class: \"Bridge-switcher-arrow\",\n              disabled: _ctx.isPairsBlocked,\n              onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.toggleFromTon && _ctx.toggleFromTon(...args)))\n            }, null, 8, _hoisted_11),\n            _createElementVNode(\"div\", {\n              class: _normalizeClass([\"Bridge-switcher\", { disabled: _ctx.isPairsBlocked }])\n            }, [\n              _createElementVNode(\"div\", _hoisted_12, [\n                _createElementVNode(\"span\", null, [\n                  _createTextVNode(_toDisplayString(_ctx.$t(`networks.${_ctx.pair}.${_ctx.netTypeName}.nameSwitcher`)), 1),\n                  _hoisted_13\n                ]),\n                _createElementVNode(\"ul\", {\n                  class: _normalizeClass([\"Bridge-switcherList\", { left: !_ctx.isFromTon, right: _ctx.isFromTon }])\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.toPairs, (item, index) => {\n                    return (_openBlock(), _createElementBlock(\"li\", { key: item }, [\n                      _createElementVNode(\"button\", {\n                        disabled: index === 0,\n                        onClick: ($event: any) => (\n                        _ctx.onPairClick(\n                          item === 'ton',\n                          item === 'ton' ? _ctx.pair : item\n                        )\n                      )\n                      }, _toDisplayString(_ctx.$t(`networks.${item}.${_ctx.netTypeName}.name`)), 9, _hoisted_14)\n                    ]))\n                  }), 128))\n                ], 2)\n              ]),\n              (_ctx.token === 'ton')\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [\n                    _createElementVNode(\"a\", {\n                      href: _ctx.pairNetworkCoinUrl,\n                      target: \"_blank\"\n                    }, _toDisplayString(_ctx.$t(`networks.${_ctx.pair}.${_ctx.netTypeName}.coin`)), 9, _hoisted_16)\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ], 2)\n          ], 2),\n          _createVNode(_component_CustomInput, {\n            key: \"token\",\n            disabled: _ctx.isInputsBlocked || !this.isTestnet,\n            label: _ctx.$t('sendToken'),\n            type: \"text\",\n            dropdown: [\n              { label: 'Toncoin', value: 'ton' },\n              { label: _ctx.$t('otherTokens'), value: 'otherTokens' },\n            ],\n            modelValue: _ctx.token,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.token) = $event))\n          }, null, 8, [\"disabled\", \"label\", \"dropdown\", \"modelValue\"]),\n          (!_ctx.isToncoinTransfer)\n            ? (_openBlock(), _createBlock(_component_CustomInput, {\n                key: \"tokenAddress\",\n                disabled: _ctx.isInputsBlocked,\n                label: _ctx.$t('tokenAddress', {network: _ctx.isFromTon ? 'TON' : _ctx.pair.toUpperCase()}),\n                type: \"text\",\n                error: _ctx.errors.tokenAddress,\n                onChanged: _cache[2] || (_cache[2] = ($event: any) => (_ctx.errors.tokenAddress = '')),\n                onBlur: _ctx.checkInputs,\n                modelValue: _ctx.tokenAddress,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.tokenAddress) = $event))\n              }, null, 8, [\"disabled\", \"label\", \"error\", \"onBlur\", \"modelValue\"]))\n            : _createCommentVNode(\"\", true),\n          _createVNode(_component_CustomInput, {\n            key: \"amountInput\",\n            disabled: _ctx.isInputsBlocked,\n            label: _ctx.$t('amountOfTon', {tokenSymbol: _ctx.tokenSymbol}),\n            type: \"text\",\n            error: _ctx.errors.amount,\n            onChanged: _cache[4] || (_cache[4] = ($event: any) => (_ctx.errors.amount = '')),\n            onBlur: _ctx.checkInputs,\n            modelValue: _ctx.amountInput,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.amountInput) = $event))\n          }, null, 8, [\"disabled\", \"label\", \"error\", \"onBlur\", \"modelValue\"]),\n          _createVNode(_component_CustomInput, {\n            key: \"toAddress\",\n            disabled: _ctx.isInputsBlocked,\n            label: _ctx.$t(`addressInputLabel`, {network: _ctx.isFromTon ? _ctx.pair.toUpperCase() : 'TON'}),\n            type: \"text\",\n            error: _ctx.errors.toAddress,\n            onChanged: _cache[6] || (_cache[6] = ($event: any) => (_ctx.errors.toAddress = '')),\n            onBlur: _ctx.checkInputs,\n            modelValue: _ctx.toAddress,\n            \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.toAddress) = $event))\n          }, null, 8, [\"disabled\", \"label\", \"error\", \"onBlur\", \"modelValue\"]),\n          _withDirectives(_createElementVNode(\"div\", {\n            class: _normalizeClass([\"Bridge-willReceive\", { isFromTon: _ctx.isFromTon }])\n          }, _toDisplayString(_ctx.willReceive), 3), [\n            [_vShow, !_ctx.isTransferInProgress && _ctx.willReceive]\n          ]),\n          _createElementVNode(\"div\", _hoisted_17, [\n            (!_ctx.isEthereumWalletConnected)\n              ? (_openBlock(), _createElementBlock(\"button\", {\n                  key: 0,\n                  class: \"Bridge-connect\",\n                  onClick: _cache[8] || (_cache[8] = ($event: any) => (_ctx.walletsPopupState = 'opened'))\n                }, _toDisplayString(_ctx.$t(\"connectWallet\")), 1))\n              : _createCommentVNode(\"\", true),\n            (_ctx.isEthereumWalletConnected && _ctx.bridgeProcessorIsLoading)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18))\n              : _createCommentVNode(\"\", true),\n            (_ctx.isEthereumWalletConnected)\n              ? (_openBlock(), _createBlock(_component_BridgeProcessor, {\n                  ref: \"bridgeProcessor\",\n                  key: _ctx.pair,\n                  \"is-testnet\": _ctx.isTestnet,\n                  \"is-recover\": _ctx.isRecover,\n                  lt: _ctx.lt,\n                  hash: _ctx.hash,\n                  \"is-from-ton\": _ctx.isFromTon,\n                  pair: _ctx.pair,\n                  tokenAddress: _ctx.tokenAddress,\n                  amount: _ctx.amountInput,\n                  \"to-address\": _ctx.toAddress,\n                  tokenSymbol: _ctx.tokenSymbol,\n                  ethereumProvider: _ctx.ethereumProvider,\n                  token: _ctx.token,\n                  \"is-inputs-valid\": _ctx.isInputsValid,\n                  onTransferInProgress: _ctx.onTransferInProgress,\n                  onStateChanged: _ctx.getPairGasFee__debounced,\n                  onResetState: _ctx.resetState,\n                  onSaveState: _ctx.saveState,\n                  onDeleteState: _ctx.deleteState,\n                  onReady: _ctx.onBridgeProcessorReady,\n                  onError: _ctx.onBridgeTransferError\n                }, null, 8, [\"is-testnet\", \"is-recover\", \"lt\", \"hash\", \"is-from-ton\", \"pair\", \"tokenAddress\", \"amount\", \"to-address\", \"tokenSymbol\", \"ethereumProvider\", \"token\", \"is-inputs-valid\", \"onTransferInProgress\", \"onStateChanged\", \"onResetState\", \"onSaveState\", \"onDeleteState\", \"onReady\", \"onError\"]))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _withDirectives(_createElementVNode(\"div\", { class: \"Bridge-pairFee\" }, _toDisplayString(_ctx.pairFee), 513), [\n            [_vShow, !_ctx.isTransferInProgress]\n          ]),\n          _withDirectives(_createElementVNode(\"div\", { class: \"Bridge-bridgeFee\" }, _toDisplayString(_ctx.bridgeFee), 513), [\n            [_vShow, !_ctx.isTransferInProgress]\n          ])\n        ])\n      ]),\n      _createVNode(_component_Footer)\n    ]),\n    (_ctx.walletsPopupState !== 'closed')\n      ? (_openBlock(), _createBlock(_component_WalletsPopup, {\n          key: 0,\n          params: _ctx.params,\n          uncancellable: _ctx.walletsPopupState === 'opened-uncancellable',\n          onWalletConnected: _ctx.onWalletConnected,\n          onCancel: _cache[9] || (_cache[9] = ($event: any) => (_ctx.walletsPopupState = 'closed'))\n        }, null, 8, [\"params\", \"uncancellable\", \"onWalletConnected\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vShow as _vShow, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-77ff3138\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"BridgeProcessor\" }\nconst _hoisted_2 = [\"disabled\"]\nconst _hoisted_3 = [\"disabled\"]\nconst _hoisted_4 = {\n  key: 3,\n  class: \"BridgeProcessor-infoWrapper\"\n}\nconst _hoisted_5 = { class: \"BridgeProcessor-infoLine\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"BridgeProcessor-info-text\"\n}\nconst _hoisted_7 = { class: \"BridgeProcessor-info-text-send\" }\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_12 = { class: \"BridgeProcessor-info-text-send-buttons\" }\nconst _hoisted_13 = [\"href\"]\nconst _hoisted_14 = {\n  key: 1,\n  class: \"BridgeProcessor-info-text-scanQRCode\"\n}\nconst _hoisted_15 = {\n  class: \"BridgeProcessor-info-text-QRCode\",\n  ref: \"qrcode\"\n}\nconst _hoisted_16 = {\n  key: 1,\n  class: \"BridgeProcessor-info-text\"\n}\nconst _hoisted_17 = {\n  key: 0,\n  class: \"BridgeProcessor-infoLine\"\n}\nconst _hoisted_18 = { class: \"BridgeProcessor-info-text\" }\nconst _hoisted_19 = { class: \"BridgeProcessor-infoLine\" }\nconst _hoisted_20 = { class: \"BridgeProcessor-info-text\" }\nconst _hoisted_21 = { class: \"BridgeProcessor-infoLine\" }\nconst _hoisted_22 = { class: \"BridgeProcessor-info-text\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_ctx.state.step === 0 && (_ctx.isFromTon || _ctx.hasApprove || _ctx.token === 'ton'))\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 0,\n          class: _normalizeClass([\"BridgeProcessor-transfer\", {\n        showLoader:\n          _ctx.isInitInProgress || _ctx.isBurningInProgress || _ctx.isLockingInProgress,\n      }]),\n          disabled: !_ctx.isInputsValid,\n          onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.onTransferClick && _ctx.onTransferClick(...args)))\n        }, _toDisplayString(_ctx.$t(\"transfer\")), 11, _hoisted_2))\n      : _createCommentVNode(\"\", true),\n    (_ctx.state.step === 0 && !_ctx.isFromTon && !_ctx.hasApprove && _ctx.token !== 'ton')\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 1,\n          class: _normalizeClass([\"BridgeProcessor-transfer\", { showLoader: _ctx.isApprovingInProgress }]),\n          disabled: !_ctx.isInputsValid,\n          onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.onApproveClick && _ctx.onApproveClick(...args)))\n        }, \" Approve \", 10, _hoisted_3))\n      : _createCommentVNode(\"\", true),\n    (_ctx.isCancelButtonVisible)\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 2,\n          class: \"BridgeProcessor-cancel\",\n          onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.onCancelClick && _ctx.onCancelClick(...args)))\n        }, _toDisplayString(_ctx.$t(\"cancel\")), 1))\n      : _createCommentVNode(\"\", true),\n    (_ctx.state.step > 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n          _createElementVNode(\"div\", _hoisted_5, [\n            _createElementVNode(\"div\", {\n              class: _normalizeClass([\"BridgeProcessor-info-icon\", {\n            none: _ctx.state.step < 1,\n            pending: _ctx.state.step === 1,\n            done: _ctx.state.step > 1,\n          }])\n            }, null, 2),\n            (!_ctx.getStepInfoText1.isOnlyText)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                  _createElementVNode(\"div\", _hoisted_7, [\n                    _createElementVNode(\"div\", null, [\n                      _createTextVNode(_toDisplayString(_ctx.getStepInfoText1.send1) + \" \", 1),\n                      _createElementVNode(\"button\", {\n                        class: \"BridgeProcessor-info-text-copy\",\n                        onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.onCopyClick && _ctx.onCopyClick(...args)))\n                      }, _toDisplayString(_ctx.getStepInfoText1.amountReadable), 1),\n                      _createTextVNode(\" \" + _toDisplayString(_ctx.getStepInfoText1.send2), 1),\n                      _hoisted_8,\n                      _createElementVNode(\"button\", {\n                        class: \"BridgeProcessor-info-text-copy\",\n                        onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.onCopyClick && _ctx.onCopyClick(...args)))\n                      }, _toDisplayString(_ctx.getStepInfoText1.toAddress), 1),\n                      _hoisted_9,\n                      _createTextVNode(\" \" + _toDisplayString(_ctx.getStepInfoText1.withComment), 1),\n                      _hoisted_10,\n                      _createElementVNode(\"button\", {\n                        class: \"BridgeProcessor-info-text-copy\",\n                        onClick: _cache[5] || (_cache[5] = \n//@ts-ignore\n(...args) => (_ctx.onCopyClick && _ctx.onCopyClick(...args)))\n                      }, _toDisplayString(_ctx.getStepInfoText1.comment), 1),\n                      _hoisted_11\n                    ]),\n                    _createElementVNode(\"div\", _hoisted_12, [\n                      _createElementVNode(\"a\", {\n                        href: _ctx.getStepInfoText1.openWalletUrl,\n                        class: \"BridgeProcessor-info-text-openWallet\",\n                        target: \"_blank\"\n                      }, _toDisplayString(_ctx.getStepInfoText1.openWalletLabel), 9, _hoisted_13),\n                      (!_ctx.isQRCodeShown)\n                        ? (_openBlock(), _createElementBlock(\"button\", {\n                            key: 0,\n                            class: \"BridgeProcessor-info-text-generateQRCode\",\n                            onClick: _cache[6] || (_cache[6] = \n//@ts-ignore\n(...args) => (_ctx.generateQRCode && _ctx.generateQRCode(...args)))\n                          }, _toDisplayString(_ctx.getStepInfoText1.generateQRCode), 1))\n                        : _createCommentVNode(\"\", true),\n                      (_ctx.isQRCodeShown)\n                        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, _toDisplayString(_ctx.getStepInfoText1.scanQRCode), 1))\n                        : _createCommentVNode(\"\", true),\n                      _withDirectives(_createElementVNode(\"div\", _hoisted_15, null, 512), [\n                        [_vShow, _ctx.isQRCodeShown]\n                      ])\n                    ])\n                  ])\n                ]))\n              : (_openBlock(), _createElementBlock(\"div\", _hoisted_16, _toDisplayString(_ctx.getStepInfoText1.text), 1))\n          ]),\n          (!_ctx.isFromTon)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [\n                _createElementVNode(\"div\", {\n                  class: _normalizeClass([\"BridgeProcessor-info-icon\", {\n            none: _ctx.state.step < 2,\n            pending: _ctx.state.step === 2,\n            done: _ctx.state.step > 2,\n          }])\n                }, null, 2),\n                _createElementVNode(\"div\", _hoisted_18, _toDisplayString(_ctx.getStepInfoText2), 1)\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_19, [\n            _createElementVNode(\"div\", {\n              class: _normalizeClass([\"BridgeProcessor-info-icon\", {\n            none: _ctx.state.step < 3,\n            pending: _ctx.state.step === 3,\n            done: _ctx.state.step > 3,\n          }])\n            }, null, 2),\n            _createElementVNode(\"div\", _hoisted_20, _toDisplayString(_ctx.getStepInfoText3), 1)\n          ]),\n          _createElementVNode(\"div\", _hoisted_21, [\n            _createElementVNode(\"div\", {\n              class: _normalizeClass([\"BridgeProcessor-info-icon\", {\n            none: _ctx.state.step < 4,\n            pending: _ctx.state.step === 4,\n            done: _ctx.state.step > 4,\n          }])\n            }, null, 2),\n            _createElementVNode(\"div\", _hoisted_22, _toDisplayString(_ctx.getStepInfoText4), 1)\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (_ctx.isMintToncoinButtonVisible)\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 4,\n          class: _normalizeClass([\"BridgeProcessor-getTonCoin\", { showLoader: _ctx.isMintingInProgress }]),\n          onClick: _cache[7] || (_cache[7] = \n//@ts-ignore\n(...args) => (_ctx.mint && _ctx.mint(...args)))\n        }, _toDisplayString(_ctx.$t(\"getToncoin\", {coin: _ctx.toCoin})), 3))\n      : _createCommentVNode(\"\", true),\n    (_ctx.isDoneButtonVisible)\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 5,\n          class: \"BridgeProcessor-done\",\n          onClick: _cache[8] || (_cache[8] = \n//@ts-ignore\n(...args) => (_ctx.onDoneClick && _ctx.onDoneClick(...args)))\n        }, _toDisplayString(_ctx.$t(\"done\")), 1))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","import TonWeb from \"tonweb\";\n\nexport const checkNull = (a: any): void => {\n    if (a === null || a === undefined || a === '' || a === '0x') throw new Error('checkNull');\n    if ((typeof a === 'number') && isNaN(a)) throw new Error('checkNaN');\n}\n\nconst removeHexPrefix = (hex: string): string => {\n    if (hex.startsWith('0x')) {\n        hex = hex.substring(2);\n    }\n    if (hex.indexOf('0x') > -1) throw new Error('removeHexPrefix');\n    return hex;\n}\n\n/**\n * @returns hex WITHOUT 0x in lowercase\n */\nexport const bytesToHex = (bytes: Uint8Array): string => {\n    checkNull(bytes);\n    const a = Buffer.from(bytes).toString('hex');\n    const b = TonWeb.utils.bytesToHex(bytes);\n    if (a !== b) throw new Error('bytesToHex');\n    return a;\n}\n\nexport const bytesToBase64 = (bytes: Uint8Array): string => {\n    checkNull(bytes);\n    const a = Buffer.from(bytes).toString('base64');\n    const b = TonWeb.utils.bytesToBase64(bytes);\n    if (a !== b) throw new Error('bytesToBase64');\n    return a;\n}\n\n/**\n * @returns hex with or without 0x\n */\nexport const hexToBytes = (hex: string): Uint8Array => {\n    checkNull(hex);\n    hex = removeHexPrefix(hex);\n    const a = Uint8Array.from(Buffer.from(hex, 'hex'));\n    const b = TonWeb.utils.hexToBytes(hex);\n    if (a.join(',') !== b.join(',')) throw new Error('hexToBytes');\n    return a;\n}\n\nexport const base64ToBytes = (base64: string): Uint8Array => {\n    checkNull(base64);\n    const a = Uint8Array.from(Buffer.from(base64, 'base64'));\n    const b = TonWeb.utils.base64ToBytes(base64);\n    if (a.join(',') !== b.join(',')) throw new Error('base64ToBytes');\n    return a;\n}\n\nconst checkBN = (bn: any, bigInt: any): void => {\n    if (bn.toString(2) !== bigInt.toString(2)) throw new Error('checkBN');\n    if (bn.toString(10) !== bigInt.toString(10)) throw new Error('checkBN');\n    if (bn.toString(16) !== bigInt.toString(16)) throw new Error('checkBN');\n}\n\nexport const decToBN = (dec: string | number) /* BN */ => {\n    checkNull(dec);\n    const bn = new TonWeb.utils.BN(dec);\n    const bigInt = BigInt(dec);\n    checkBN(bn, bigInt);\n    return bn;\n}\n\n/**\n * @returns hex with or without 0x\n */\nexport const hexToBN = (hex: string) /* BN */ => {\n    checkNull(hex);\n    hex = removeHexPrefix(hex);\n\n    const bn = new TonWeb.utils.BN(hex, 16);\n    const bigInt = BigInt('0x' + hex);\n    checkBN(bn, bigInt);\n    return bn;\n}\n\n/**\n * @return hex starts with 0x in lowercase\n */\nexport const decToHex = (dec: string | number): string => {\n    checkNull(dec);\n    const bn = new TonWeb.utils.BN(dec);\n    const bigInt = BigInt(dec);\n    const a = bn.toString(16);\n    const b = bigInt.toString(16);\n    if (a !== b) throw new Error('decToHex');\n    return '0x' + a;\n}\n\n/**\n * @returns hex with or without 0x\n */\nexport const hexToDec = (hex: string): string => {\n    checkNull(hex);\n    hex = removeHexPrefix(hex);\n\n    const bn = new TonWeb.utils.BN(hex, 16);\n    const bigInt = BigInt('0x' + hex);\n    const a = bn.toString(10);\n    const b = bigInt.toString(10);\n    if (a !== b) throw new Error('hexToDec');\n    return a;\n}\n\nexport const calculateQueryId = (timeout: number, queryId: string) /* BN */ => {\n    checkNull(timeout);\n    checkNull(queryId);\n    queryId = removeHexPrefix(queryId);\n    const bn = decToBN(timeout).mul(decToBN(4294967296)).add(hexToBN(queryId))\n    const bigInt = BigInt(timeout) * BigInt(4294967296) + BigInt('0x' + queryId)\n    checkBN(bn, bigInt);\n    return bn;\n}\n\nexport const calculateToncoinFee = (amount: any /* BN */) /* BN */ => {\n    checkNull(amount);\n\n    const feeFlat = decToBN(5000000000);\n    const feeFactor = decToBN(25);\n    const feeBase = decToBN(10000);\n\n    const rest = amount.sub(feeFlat);\n    const percentFee = rest.mul(feeFactor).div(feeBase);\n    const bn = feeFlat.add(percentFee);\n\n    const _feeFlat = BigInt(5000000000);\n    const _feeFactor = BigInt(25);\n    const _feeBase = BigInt(10000);\n    const _rest = BigInt(amount.toString()) - _feeFlat;\n    const _percentFee = (_rest * _feeFactor) / _feeBase;\n    const bigInt = _feeFlat + _percentFee;\n\n    checkBN(bn, bigInt);\n\n    return bn;\n}","import TonWeb from \"tonweb\";\nimport {Address} from \"tonweb/dist/types/utils/address\";\nimport {bytesToBase64, decToBN} from \"./Paranoid\";\n\nconst OFFCHAIN_CONTENT_PREFIX = 0x01;\n\nconst parseUri = (bytes: any) => {\n    return new TextDecoder().decode(bytes);\n};\n\nconst parseOffchainUriCell = (cell: any) => {\n    if (cell.bits.array[0] !== OFFCHAIN_CONTENT_PREFIX) {\n        throw new Error(\"no OFFCHAIN_CONTENT_PREFIX\");\n    }\n\n    let length = 0;\n    let c = cell;\n    while (c) {\n        length += c.bits.array.length;\n        c = c.refs[0];\n    }\n\n    const bytes = new Uint8Array(length);\n    length = 0;\n    c = cell;\n    while (c) {\n        bytes.set(c.bits.array, length);\n        length += c.bits.array.length;\n        c = c.refs[0];\n    }\n    return parseUri(bytes.slice(1)); // slice OFFCHAIN_CONTENT_PREFIX\n};\n\nconst readIntFromBitString = (bs: any, cursor: any, bits: any) => {\n    let n = BigInt(0);\n    for (let i = 0; i < bits; i++) {\n        n *= BigInt(2);\n        n += BigInt(bs.get(cursor + i));\n    }\n    return n;\n};\n\nconst parseAddress = (cell: any): Address | null => {\n    let n = readIntFromBitString(cell.bits, 3, 8);\n    if (n > BigInt(127)) {\n        n = n - BigInt(256);\n    }\n    const hashPart = readIntFromBitString(cell.bits, 3 + 8, 256);\n    if (n.toString(10) + \":\" + hashPart.toString(16) === \"0:0\") return null;\n    const s = n.toString(10) + \":\" + hashPart.toString(16).padStart(64, \"0\");\n    return new TonWeb.Address(s);\n};\n\nexport async function getJettonWalletBalance(tonweb: any, jettonWalletAddress: string): Promise<any> { /* BN */\n    try {\n        const jettonWalletData = await tonweb.provider.call2(\n            jettonWalletAddress,\n            \"get_wallet_data\"\n        );\n        const balance = jettonWalletData[0];\n        return balance;\n    } catch (e: any) {\n        if (e.result.exit_code === -13) {\n            return decToBN(0);\n        } else {\n            throw e;\n        }\n    }\n}\n\nexport async function getJettonWalletData(tonweb: any, jettonWalletAddress: string) {\n    const jettonWalletData = await tonweb.provider.call2(\n        jettonWalletAddress,\n        \"get_wallet_data\"\n    );\n\n    const balance = jettonWalletData[0];\n    const ownerAddress = parseAddress(jettonWalletData[1]);\n    const jettonMinterAddress = parseAddress(jettonWalletData[2]);\n    const jettonWalletCode = jettonWalletData[3];\n\n    return {\n        balance,\n        ownerAddress,\n        jettonMinterAddress,\n        jettonWalletCode,\n    };\n}\n\nexport async function getJettonTotalSupply(tonweb: any, jettonMinterAddress: string): Promise<any> { /* BN */\n    try {\n        const jettonData = await tonweb.provider.call2(\n        jettonMinterAddress,\n        \"get_jetton_data\",\n        []\n    );\n        const totalSupply = jettonData[0];\n        return totalSupply;\n    } catch (e: any) {\n        if (e.result.exit_code === -13) {\n            return decToBN(0);\n        } else {\n            throw e;\n        }\n    }\n}\n\nexport async function getJettonData(tonweb: any, jettonMinterAddress: string) {\n    const jettonData = await tonweb.provider.call2(\n        jettonMinterAddress,\n        \"get_jetton_data\",\n        []\n    );\n    const totalSupply = jettonData[0];\n    const isMutable = jettonData[1].toNumber() === -1;\n    const adminAddress = parseAddress(jettonData[2]);\n    const jettonContentUri = parseOffchainUriCell(jettonData[3]);\n    const tokenWalletCode = jettonData[4];\n\n    return {\n        totalSupply,\n        isMutable,\n        adminAddress,\n        jettonContentUri,\n        tokenWalletCode,\n    };\n}\n\nexport async function getWrappedTokenData(tonweb: any, jettonWalletAddress: string): Promise<{\n    chainId: number,\n    tokenAddress: string,\n    decimals: number\n}> {\n    const wrappedTokenData = await tonweb.provider.call2(\n        jettonWalletAddress,\n        \"get_wrapped_token_data\",\n        []\n    );\n\n    const chainId = wrappedTokenData[0].toString();\n    const tokenAddress = \"0x\" + wrappedTokenData[1].toString(\"hex\");\n    const decimals = wrappedTokenData[2].toString();\n    return {chainId, tokenAddress, decimals};\n}\n\nexport async function getJettonWalletAddress({\n                                                 tonweb,\n                                                 userTonAddress,\n                                                 tokenAddress,\n                                             }: {\n    tonweb: any;\n    userTonAddress: Address;\n    tokenAddress: string;\n}): Promise<Address | null> {\n    const cell = new TonWeb.boc.Cell();\n\n    cell.bits.writeAddress(userTonAddress);\n\n    const getWalletAddressResponse = await tonweb.provider.call2(\n        tokenAddress,\n        \"get_wallet_address\",\n        [[\"tvm.Slice\", bytesToBase64(await cell.toBoc(false))]]\n    );\n    const jettonWalletAddress = parseAddress(getWalletAddressResponse);\n    return jettonWalletAddress;\n}\n\nexport async function getJettonMinterAddress(\n    tonweb: any,\n    tonBridgeAddress: string,\n    wrappedTokenData: any /* Cell */\n): Promise<Address | null> {\n\n    const getWalletAddressResponse = await tonweb.provider.call2(\n        tonBridgeAddress,\n        \"get_minter_address\",\n        [[\"tvm.Cell\", bytesToBase64(await wrappedTokenData.toBoc(false))]]\n    );\n    const jettonMinterAddress = parseAddress(getWalletAddressResponse);\n    return jettonMinterAddress;\n}\n\nexport const getBridgeState = async (tonweb: any, configParam: number): Promise<number> => {\n    const cell = await tonweb.provider.getConfigParam(configParam);\n    const slice = cell.beginParse();\n    slice.loadUint(8); // prefix\n    slice.loadUint(256); // bridge_address_hash\n    slice.loadUint(256); // oracles_address_hash\n    slice.loadBit(); // oracles dict\n    const stateFlags = slice.loadUint(8);\n    return stateFlags.toNumber();\n}","import BN from \"bn.js\";\nimport TonWeb from \"tonweb\";\nimport { Address } from \"tonweb/dist/types/utils/address\";\nimport {decToBN} from \"@/ton-bridge-lib/Paranoid\";\n\nasync function burnJetton({\n  tonWallet,\n  destinationAddress,\n  userTonAddress,\n  jettonWalletAddress,\n  jettonAmountWithDecimals,\n}: {\n  tonWallet: any;\n  destinationAddress: BN;\n  userTonAddress: Address;\n  jettonWalletAddress: Address | null;\n  jettonAmountWithDecimals: BN;\n}) {\n  if (!jettonWalletAddress) return;\n  const burnOP = 0x595f07bc; // burn op\n  const queryId = new TonWeb.utils.BN(0);\n\n  const burnPayload = new TonWeb.boc.Cell();\n  burnPayload.bits.writeUint(burnOP, 32);\n  const customPayload = new TonWeb.boc.Cell();\n  customPayload.bits.writeUint(destinationAddress, 160);\n  burnPayload.bits.writeUint(queryId, 64);\n  burnPayload.bits.writeCoins(jettonAmountWithDecimals);\n  burnPayload.bits.writeAddress(userTonAddress);\n  burnPayload.bits.writeBit(1);\n  burnPayload.refs.push(customPayload);\n\n\n  await tonWallet.send(\"ton_sendTransaction\", [\n    {\n      to: jettonWalletAddress.toString(true, true, true),\n      value: TonWeb.utils.toNano(\"1\").toString(),\n      data: TonWeb.utils.bytesToBase64(await burnPayload.toBoc()),\n      dataType: \"boc\",\n    },\n  ]);\n}\n\nasync function mintJetton({\n  tonWallet,\n  queryId,\n  bridgeTonAddress,\n}: {\n  tonWallet: any;\n  queryId: string;\n  bridgeTonAddress: string;\n}) {\n  const mintOP = 8;\n\n  const mintPayload = new TonWeb.boc.Cell();\n  mintPayload.bits.writeUint(mintOP, 32);\n  mintPayload.bits.writeUint(decToBN(queryId), 64);\n  mintPayload.bits.writeUint(decToBN(queryId), 256);\n\n  await tonWallet.send(\"ton_sendTransaction\", [\n    {\n      to: bridgeTonAddress,\n      value: TonWeb.utils.toNano(\"1\").toString(),\n      data: TonWeb.utils.bytesToBase64(await mintPayload.toBoc()),\n      dataType: \"boc\",\n    },\n  ]);\n}\n\nexport { burnJetton, mintJetton };\n","function onCopyClick(e: MouseEvent) {\n  const target = e.target as any;\n\n  let timeout1: ReturnType<typeof setTimeout>;\n  let timeout2: ReturnType<typeof setTimeout>;\n\n  const triggerClass = (className: string) => {\n    if (target) {\n      target.classList.remove(className);\n      clearTimeout(timeout1);\n      clearTimeout(timeout2);\n\n      timeout1 = setTimeout(() => {\n        target.classList.add(className);\n      }, 17);\n\n      timeout2 = setTimeout(() => {\n        target.classList.remove(className);\n      }, 500);\n    }\n  };\n\n  if (navigator && navigator.clipboard && navigator.clipboard.writeText) {\n    navigator.clipboard.writeText(target.innerText).then(\n      function () {\n        triggerClass(\"success\");\n      },\n      function () {\n        triggerClass(\"failure\");\n      }\n    );\n  } else {\n    triggerClass(\"failure\");\n  }\n}\n\nexport { onCopyClick };\n","import TonWeb from \"tonweb\";\nimport {WalletContract} from \"tonweb/dist/types/contract/wallet/wallet-contract\";\nimport {hexToBN, base64ToBytes} from \"./Paranoid\";\n\nexport const getNumber = (pair: string[]): number => parseInt(pair[1], 16);\n\nexport const getBN = (pair: string[]) /* TonWeb.utils.BN */ => hexToBN(pair[1]);\n\nexport const findLogOutMsg = (outMessages?: any[]): any => {\n    if (!outMessages) return null;\n    for (const outMsg of outMessages) {\n        if (outMsg.destination === '') return outMsg;\n    }\n    return null;\n}\n\nexport const getRawMessageBytes = (logMsg: any): Uint8Array | null => {\n    if (!logMsg.message.endsWith('\\n')) throw new Error('need \\\\n');\n    const message = logMsg.message.substr(0, logMsg.message.length - 1); // remove '\\n' from end\n    return base64ToBytes(message);\n}\n\nexport const getTextMessageBytes = (logMsg: any): Uint8Array | null => {\n    const message = logMsg.msg_data?.text;\n    const textBytes = base64ToBytes(message);\n    const bytes = new Uint8Array(textBytes.length + 4);\n    bytes.set(textBytes, 4);\n    return bytes;\n}\n\nexport const getMessageBytes = (logMsg: any): Uint8Array | null => {\n    const msgType = logMsg.msg_data['@type'];\n    if (msgType === 'msg.dataText') {\n        return getTextMessageBytes(logMsg);\n    } else if (msgType === 'msg.dataRaw') {\n        return getRawMessageBytes(logMsg);\n    } else {\n        console.error('Unknown log msg type ' + msgType);\n        return null;\n    }\n}\n\nexport const makeAddress = (address: string): string => {\n    if (!address.startsWith('0x')) throw new Error('Invalid address ' + address);\n    let hex = address.substr(2);\n    while (hex.length < 40) {\n        hex = '0' + hex;\n    }\n    return '0x' + hex;\n}\n\nexport async function sendInternal(tonweb: TonWeb, wallet: WalletContract, secretKey: Uint8Array, byteArray: any /* Uint8Array | TonWeb.boc.Cell */, toAddress: string): Promise<boolean> {\n    let seqno = await wallet.methods.seqno().call();\n    if (!seqno) {\n        seqno = 0;\n    }\n    const query = await wallet.methods.transfer({\n        secretKey: secretKey,\n        toAddress: toAddress,\n        amount: TonWeb.utils.toNano('5'), // на газ, остаток вернется\n        seqno: seqno,\n        payload: byteArray,\n        sendMode: 3\n    });\n\n    const sendResponse = await query.send();\n    if (sendResponse[\"@type\"] === \"ok\") {\n        await wait(4000); // дадим выполниться чтобы далее получить верный seqno\n        return true;\n    } else {\n        console.error(sendResponse);\n        return false;\n    }\n}\n\nfunction wait(ms: number): Promise<void> {\n    return new Promise<void>(resolve => {\n        setTimeout(() => resolve(), ms);\n    });\n}","import TonWeb from \"tonweb\";\nimport {Bytes} from \"@ethersproject/bytes/src.ts\";\nimport {decToBN, decToHex, hexToBN, hexToDec} from \"./Paranoid\"\nimport {splitSignature} from \"ethers/lib/utils\";\nimport {makeAddress, sendInternal} from \"./BridgeTonUtils\";\nimport {WalletContract} from \"tonweb/dist/types/contract/wallet/wallet-contract\";\nimport {ethers} from \"ethers\";\n\nexport interface EvmSignature {\n    publicKey: string; // secp_key (ethereum oracle address) in hex, starts with 0x\n    r: string; // 256bit in hex, starts with 0x\n    s: string; // 256bit in hex, starts with 0x\n    v: number; // 8bit\n}\n\nexport interface EvmSignatures {\n    signatures: EvmSignature[];\n}\n\nconst checkV = (v: number): void => {\n    if (v !== 27 && v !== 28) throw new Error('invalid v');\n}\n\nexport const parseEvmSignature = (data: any): EvmSignature => {\n    const tuple: any[] = data.tuple.elements;\n    const publicKey: string = makeAddress(decToHex(tuple[0].number.number));\n\n    const rsv: any[] = tuple[1].tuple.elements;\n    const r: string = decToHex(rsv[0].number.number);\n    const s: string = decToHex(rsv[1].number.number);\n    const v: number = Number(rsv[2].number.number);\n    checkV(v);\n    return {\n        publicKey,\n        r,\n        s,\n        v\n    }\n}\n\n/**\n * @param voteId - hash of vote like '0xFF5856350817700B84368727835EEFE9BB10D8DB23FF4311F6936747ABC32308'\n */\nexport async function getEvmSignaturesFromCollector(tonweb: TonWeb, tonCollectorAddress: string, voteId: string): Promise<EvmSignatures | null> {\n    const intVoteId = hexToDec(voteId);\n    console.log('getEvmSignaturesFromCollector ', voteId, intVoteId);\n\n    const result: any = await tonweb.provider.call(tonCollectorAddress, 'get_external_voting_data', [['num', intVoteId]]);\n    console.log('getEvmSignaturesFromCollector raw result', result);\n    if (result.exit_code === 309) {\n        console.log('getEvmSignaturesFromCollector 309 no found')\n        return null;\n    }\n    const list: any[] = result.stack[0][1].elements;\n\n    const status: EvmSignatures = {\n        signatures: list.map(parseEvmSignature)\n    };\n    console.log('getEvmSignaturesFromCollector parsed result', status);\n\n    return status;\n}\n\nexport async function sendToCollector(tonweb: TonWeb, wallet: WalletContract, secretKey: Uint8Array, tonCollectorAddress: string, voteId: string, signature: Bytes | string): Promise<boolean> {\n    const myAddress = await wallet.getAddress();\n\n    console.log('sendToCollector voteId=', voteId, 'signature=', signature, 'from ' + myAddress.toString(true));\n\n    const s = splitSignature(signature);\n    checkV(s.v);\n\n    const bits = new TonWeb.boc.BitString(32 + 64 + 256 + 256 + 256 + 8);\n    bits.writeUint(decToBN(5), 32); // op\n    bits.writeUint(decToBN(0), 64); // query_id\n    bits.writeUint(hexToBN(voteId), 256);\n    bits.writeUint(hexToBN(s.r), 256);\n    bits.writeUint(hexToBN(s.s), 256);\n    bits.writeUint(decToBN(s.v), 8);\n\n    return sendInternal(tonweb, wallet, secretKey, bits.array, tonCollectorAddress);\n}\n\n/**\n * Prepare sorted signatures to send to EVM smart contract\n */\nexport function prepareEthSignatures(signatures: EvmSignature[]): { signer: string, signature: string }[] {\n    return signatures\n        .map(signature => {\n            return {\n                signer: signature.publicKey,\n                signature: ethers.utils.joinSignature({r: signature.r, s: signature.s, v: signature.v}),\n            };\n        })\n        .sort((a, b) => {\n            return hexToBN(a.signer).cmp(hexToBN(b.signer));\n        });\n}","import Web3 from \"web3\";\nimport {calculateQueryId} from \"./Paranoid\";\n\nexport interface TonAddress {\n    workchain: number; // int8\n    address_hash: string; // bytes32\n}\n\nexport interface TonTxID {\n    address_: TonAddress; // sender user TON address\n    tx_hash: string; // bytes32, transaction hash on TON bridge smart contract\n    lt: string; // uint64, transaction LT (logical time) on TON bridge smart contract\n}\n\nexport interface EvmTransaction {\n    blockTime: number;\n    blockHash: string;\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TonTransaction {\n    tx: TonTxID;\n}\n\nexport type NewOracleSet = string[]; // address[]\n\nexport interface Vote {\n    id: string;\n    data: string; // json\n    status: number;\n    statusTime: number; // in seconds\n}\n\nexport function hash(data: string): string {\n    const hash = Web3.utils.sha3(data)\n    if (!hash) throw new Error('empty hash');\n    return hash;\n}\n\nexport const MULTISIG_QUERY_TIMEOUT = 30 * 24 * 60 * 60; // 30 days\n\nexport function getQueryId(evmTransaction: EvmTransaction) /* BN */ {\n    const VERSION = 2;\n    const timeout = evmTransaction.blockTime + MULTISIG_QUERY_TIMEOUT + VERSION;\n\n    // web3@1.3.4 has an error in the algo for computing SHA\n    // it doesn't strictly check input string for valid HEX relying only for 0x prefix\n    // but the query string is formed that way: 0xBLOCKHASH + '_' + 0xTRANSACTIONHASH + '_' + LOGINDEX\n    // the keccak algo splits string to pairs of symbols, and treats them as hex bytes\n    // so _0 becames NaN, x7 becames NaN, d_ becames 13 (it only sees first d and skips invalid _)\n    // web3@1.6.1 has this error fixed, but for our case this means that we've got different hashes for different web3 versions\n    // and getLegacyQueryString code transforms query string in the way, that SHA from web3@1.6.1 can return the same exact value as web3@1.3.4\n    // for example:\n    // old one: 0xcad62a0e0090e30e0133586f86ed8b7d0d2eac5fa8ded73b8180931ff379b113_0x77e5617841b2d355fe588716b6f8f506b683e985fc98fdb819ddf566594d4cfd_64\n    // new one: 0xcad62a0e0090e30e0133586f86ed8b7d0d2eac5fa8ded73b8180931ff379b11300007e5617841b2d355fe588716b6f8f506b683e985fc98fdb819ddf566594d4cf0d64\n    // diff   :                                                                   ^^^^                                                              ^^\n    function getLegacyQueryString(str: string): string {\n        const strArr = str.split('');\n        strArr[66] = '0';\n        strArr[67] = '0';\n        strArr[68] = '0';\n        strArr[69] = '0';\n        strArr[133] = strArr[132];\n        strArr[132] = '0';\n        return strArr.join('');\n    }\n\n    const queryId = hash(\n        getLegacyQueryString(\n            evmTransaction.blockHash + '_' + evmTransaction.transactionHash + '_' + String(evmTransaction.logIndex)\n        )\n    ).substr(2, 8); // get first 32 bit\n\n    return calculateQueryId(timeout, queryId);\n}","import BN from \"bn.js\";\nimport { BigNumber, Contract } from \"ethers\";\n\nimport ERC20 from \"@/ton-bridge-lib/abi/ERC20.json\";\n\nimport { Provider } from \"../providers/provider\";\n\nexport class ERC20Contract {\n  contracts: { [key: string]: Contract } = {};\n\n  private provider: Provider;\n\n  constructor(provider: Provider) {\n    this.provider = provider;\n  }\n\n  _getContract(address: string) {\n    if (!Object.keys(this.contracts).includes(address)) {\n      return this._registerContract(address);\n    }\n    if (!this.contracts[address].provider) {\n      return this._registerContract(address);\n    }\n    return this.contracts[address];\n  }\n\n  _registerContract(address: string) {\n    // const contract = new provider.web3!.eth.Contract(ERC20.abi as any[], address);\n    const contract = new Contract(\n      address,\n      ERC20.abi,\n      (this.provider as any).provider\n    );\n    this.contracts[address] = contract;\n    return contract;\n  }\n\n  symbol(address: string): string {\n    const contract = this._getContract(address);\n    return contract.symbol();\n  }\n\n  decimals({ address }: { address: string }) {\n    const contract = this._getContract(address);\n    return contract.decimals();\n  }\n\n  balanceOf({\n    address,\n    account,\n  }: {\n    address: string;\n    account: string;\n  }): Promise<BN> {\n    const contract = this._getContract(address);\n    return contract.balanceOf(account);\n  }\n\n  allowance({\n    address,\n    owner,\n    spender,\n  }: {\n    address: string;\n    owner: string;\n    spender: string;\n  }): Promise<BigNumber> {\n    const contract = this._getContract(address);\n    return contract.allowance(owner, spender);\n  }\n\n  approve({\n    address,\n    spender,\n    amount,\n  }: {\n    address: string;\n    spender: string;\n    amount: string;\n  }): Promise<any> {\n    const contract = this._getContract(address);\n    return contract\n      .connect((this.provider as any).provider.getSigner()!)\n      .approve(spender, amount);\n  }\n}\n\n// const erc20Contract = new ERC20Contract();\n\n// export default erc20Contract;\n","import TonWeb from \"tonweb\";\nimport {decToBN} from \"./Paranoid\";\n\nexport const BLOCK_CONFIRMATIONS_COUNT = 12;\n\nexport function parseField(data: any, field: string | number): any {\n    const x: any = data[field];\n    if (x === null || x === undefined) throw new Error('no \"' + field + '\"');\n    return x;\n}\n\n// 0xfe8af310e07838c114ad6c3227e4a08aa2c0ae31f6c88f3cdffcd493f15e7299\nexport function parseEvmTxHash(data: any, field: string): string {\n    const s: string = parseField(data, field);\n    if (s.length !== 66 || !s.startsWith('0x')) throw new Error('invalid eth tx hash ' + s);\n    return s.toLowerCase();\n}\n\n// 0xef95f2f1ed3ca60b048b4bf67cde2195961e0bba6f70bcbea9a2c4e133e34b46\nexport function parseEvmBlockHash(data: any, field: string): string {\n    const s: string = parseField(data, field);\n    if (s.length !== 66 || !s.startsWith('0x')) throw new Error('invalid eth block hash ' + s);\n    return s.toLowerCase();\n}\n\n// 0x1FF516E5ce789085CFF86d37fc27747dF852a80a\nexport function parseEvmAddress(data: any, field: string): string {\n    const s: string = parseField(data, field);\n    if (s.length !== 42 || !s.startsWith('0x')) throw new Error('invalid eth address ' + s);\n    return s.toLowerCase();\n}\n\nexport function parseNumber(data: any, field: string): number {\n    const n: number = Number(parseField(data, field));\n    if (isNaN(n)) throw new Error('invalid number ' + n);\n    if (n < 0) throw new Error('number is negative ' + n);\n    return n;\n}\n\n// 0xE5BC34E7CD6D8669967B117CF7644A940571D169FB8DC9358C2D123A07DFB9A4\nexport function parseTonAddress(data: any, field: string): string {\n    const s: string = parseField(data, field);\n    if (s.length !== 66 || !s.startsWith('0x')) throw new Error('invalid ton address ' + s);\n    return s.slice(2).toLowerCase(); // slice '0x'\n}\n\nexport function parseWc(data: any, field: string): number {\n    const n: number = Number(parseField(data, field));\n    if (n !== 0 && n !== -1) throw new Error('invalid wc ' + n);\n    return n;\n}\n\nexport function parseDecimals(data: any, field: number): number {\n    const n: number = Number(parseField(data, field));\n    if (!((n >= 0) && (n <= 255))) throw new Error('invalid decimals ' + n);\n    return n;\n}\n\nexport function parseBN(data: any, field: string | number): string {\n    const s: string = parseField(data, field);\n    const bn = decToBN(s);\n    if (bn.lte(decToBN(0))) throw new Error('bn is negative ' + s);\n    return s;\n}","import {EvmTransaction, hash, TonAddress, TonTransaction, TonTxID} from \"./BridgeCommon\";\nimport Web3 from \"web3\";\nimport TonWeb from \"tonweb\";\nimport {Log, TransactionReceipt} from \"web3-core\";\nimport {\n    BLOCK_CONFIRMATIONS_COUNT,\n    parseBN,\n    parseEvmAddress,\n    parseEvmBlockHash,\n    parseEvmTxHash,\n    parseNumber,\n    parseTonAddress,\n    parseWc\n} from \"./BridgeEvmUtils\";\nimport {findLogOutMsg, getMessageBytes, makeAddress} from \"./BridgeTonUtils\";\nimport {base64ToBytes, bytesToHex, calculateToncoinFee, checkNull, decToBN, hexToBN} from \"./Paranoid\";\n\nconst BURN_INPUT_LENGTH = 202;\nconst BURN_INPUT_PREFIX = '0xe057fbff';\n\nexport interface SwapEthToTonEvent extends EvmTransaction {\n    type: 'SwapEthToTon';\n    transactionHash: string;\n    logIndex: number;\n    blockNumber: number;\n    blockTime: number;\n    blockHash: string;\n\n    from: string; // address\n    to: TonAddress;\n    value: string; // uint256\n\n    rawData: string;\n    topics: string[];\n    transactionIndex: number;\n}\n\nexport interface SwapTonToEth extends TonTransaction {\n    type: 'SwapTonToEth';\n    receiver: string; // address\n    amount: string; // uint64\n    tx: TonTxID;\n    time: number;\n}\n\nexport class ToncoinBridge {\n\n    static getFeeAmount(amount: any /* BN */) /* BN */ {\n        return calculateToncoinFee(amount)\n    }\n\n    static getDataId(web3: Web3, d: SwapTonToEth, target?: string): string {\n        checkNull(d.receiver);\n        checkNull(d.amount);\n        checkNull(d.tx.address_.workchain);\n        checkNull(d.tx.address_.address_hash);\n        checkNull(d.tx.tx_hash);\n        checkNull(d.tx.lt);\n        if (target) {\n            return hash(\n                web3.eth.abi.encodeParameters(\n                    ['int', 'address', 'address', 'uint256', 'int8', 'bytes32', 'bytes32', 'uint64'],\n                    [0xDA7A, target, d.receiver, d.amount, d.tx.address_.workchain, d.tx.address_.address_hash, d.tx.tx_hash, d.tx.lt]\n                )\n            );\n        } else { // ethereum mainnet Toncoin bridge hasn't `target`\n            return hash(\n                web3.eth.abi.encodeParameters(\n                    ['int', 'address', 'uint256', 'int8', 'bytes32', 'bytes32', 'uint64'],\n                    [0xDA7A, d.receiver, d.amount, d.tx.address_.workchain, d.tx.address_.address_hash, d.tx.tx_hash, d.tx.lt]\n                )\n            );\n        }\n    }\n\n    static getNewSetId(web3: Web3, setHash: number, addresses: string[], target?: string): string {\n        if (target) {\n            return hash(\n                web3.eth.abi.encodeParameters(\n                    ['int', 'address', 'int', 'address[]'],\n                    [0x5E7, target, setHash, addresses]\n                )\n            );\n        } else { // ethereum mainnet Toncoin bridge hasn't `target`\n            return hash(\n                web3.eth.abi.encodeParameters(\n                    ['int', 'int', 'address[]'],\n                    [0x5E7, setHash, addresses]\n                )\n            );\n        }\n    }\n\n    static getNewBurnStatusId(web3: Web3, newBurnStatus: boolean, nonce: number, target?: string): string {\n        if (target) {\n            return hash(\n                web3.eth.abi.encodeParameters(\n                    ['int', 'address', 'bool', 'int'],\n                    [0xB012, target, newBurnStatus, nonce]\n                )\n            );\n        } else { // ethereum mainnet Toncoin bridge hasn't `target`\n            return hash(\n                web3.eth.abi.encodeParameters(\n                    ['int', 'bool', 'int'],\n                    [0xB012, newBurnStatus, nonce]\n                )\n            );\n        }\n    }\n\n    static findLog = (web3: Web3, from: string, amount: string, workchain: string, addressHash: string, logs: Log[]): Log | null => {\n        let count = 0;\n        let result: Log | null = null;\n        for (const log of logs) {\n            if (log.topics.length === 3 &&\n                log.topics[1].toLowerCase().endsWith(from.substr(2)) &&\n                log.topics[2] === '0x' + addressHash) {\n                const decoded = web3.eth.abi.decodeParameters(\n                    ['int256', 'uint256'],\n                    log.data\n                );\n                if (decoded[0] === workchain && decoded[1] === amount) {\n                    result = log;\n                    count++;\n                }\n            }\n        }\n        if (count > 1) throw new Error('too many logs');\n        return result;\n    }\n\n    static createMultisigMsgBody(ethToTon: SwapEthToTonEvent) /* Cell */ {\n        const payload = new TonWeb.boc.Cell();\n        payload.bits.writeUint(decToBN(4), 32); // op\n        payload.bits.writeUint(decToBN(0), 8); // vote op\n        payload.bits.writeUint(hexToBN(ethToTon.transactionHash), 256);\n        payload.bits.writeInt(decToBN(ethToTon.logIndex), 16);\n        payload.bits.writeInt(ethToTon.to.workchain, 8);\n        payload.bits.writeUint(hexToBN(ethToTon.to.address_hash), 256);\n        payload.bits.writeUint(decToBN(ethToTon.value), 64);\n        return payload;\n    }\n\n    static isValidBurn = (tx: any, wtonAddress: string): boolean => {\n        if (tx.to.toLowerCase() !== wtonAddress.toLowerCase()) return false;\n        if (tx.from.toLowerCase() === wtonAddress.toLowerCase()) return false;\n        if (tx.isError !== '0') return false;\n        if (tx.txreceipt_status !== '1') return false;\n        if (!tx.input) return false;\n        if (tx.input.length !== BURN_INPUT_LENGTH) return false;\n        if (!tx.input.startsWith(BURN_INPUT_PREFIX)) return false;\n        if (tx.confirmations < BLOCK_CONFIRMATIONS_COUNT) return false;\n        return true;\n    }\n\n    static processEvmTransaction = async (web3: Web3, wtonAddress: string, tx: any, receipt: TransactionReceipt, currentBlockNumber: number): Promise<SwapEthToTonEvent> => {\n\n        // parse transaction\n\n        const blockNumber = parseNumber(tx, 'blockNumber');\n        const transactionHash = parseEvmTxHash(tx, 'hash');\n        const blockTime = parseNumber(tx, 'timeStamp');\n        const blockHash = parseEvmBlockHash(tx, 'blockHash');\n        const transactionIndex = parseNumber(tx, 'transactionIndex');\n        const from = parseEvmAddress(tx, 'from');\n        const to = parseEvmAddress(tx, 'to');\n        const input = tx.input;\n\n        // parse transaction input\n\n        if (input.length !== BURN_INPUT_LENGTH) throw new Error('invalid input length ' + input);\n        if (!input.startsWith(BURN_INPUT_PREFIX)) throw new Error(`input ${BURN_INPUT_PREFIX} ` + input);\n\n        // uint256 amount, int8 workchain, bytes32 address_hash\n        const decodedInput = web3.eth.abi.decodeParameters(\n            ['uint256', 'int8', 'bytes32'],\n            '0x' + input.slice(10)\n        );\n\n        const value = parseBN(decodedInput, '0');\n        const workchain = parseWc(decodedInput, '1');\n        const address_hash = parseTonAddress(decodedInput, '2');\n\n        // validate transaction\n\n        if (!receipt || Object.keys(receipt).length === 0) throw new Error('no receipt');\n        if (blockHash !== receipt.blockHash.toLowerCase()) throw new Error('invalid blockHash');\n        if (blockNumber !== receipt.blockNumber) throw new Error('invalid blockNumber');\n        if (from !== receipt.from.toLowerCase()) throw new Error('invalid from');\n        if (!receipt.status) throw new Error('invalid status');\n        if (wtonAddress.toLowerCase() !== receipt.to.toLowerCase()) throw new Error('invalid to');\n        if (transactionHash !== receipt.transactionHash.toLowerCase()) throw new Error('invalid transactionHash');\n        if (transactionIndex !== receipt.transactionIndex) throw new Error('invalid transactionIndex');\n\n        const log = ToncoinBridge.findLog(web3, from, value, workchain.toString(), address_hash, receipt.logs);\n        if (!log) throw new Error('cant find log');\n        const logIndex = parseNumber(log, 'logIndex');\n\n        if (currentBlockNumber - receipt.blockNumber < BLOCK_CONFIRMATIONS_COUNT) {\n            throw new Error('No block confirmations ' + (currentBlockNumber - receipt.blockNumber) + '(' + currentBlockNumber + '-' + receipt.blockNumber + ')');\n        }\n\n        return {\n            type: 'SwapEthToTon',\n            transactionHash,\n            logIndex, // 6\n            blockNumber, // 10132245\n            blockTime, // 1628967979\n            blockHash,\n            from,\n            to: {\n                workchain,\n                address_hash\n            },\n            value, // '0',\n            rawData: log.data,\n            topics: log.topics,\n            transactionIndex,\n        }\n    }\n\n    /**\n     * @param t transaction from ton-http-api\n     */\n    static processTonTransaction = (t: any): SwapTonToEth | null => {\n\n        // find log message\n\n        const logMsg = findLogOutMsg(t.out_msgs);\n        if (!logMsg) {\n            return null;\n        }\n\n        const bytes = getMessageBytes(logMsg);\n        if (bytes === null) {\n            return null;\n        }\n        if (bytes.length !== 28) {\n            return null;\n        }\n\n        // parse log message\n\n        const destinationAddress = makeAddress('0x' + bytesToHex(bytes.slice(0, 20)));\n        const amountHex = bytesToHex(bytes.slice(20, 28));\n        const amount = hexToBN(amountHex);\n        const senderAddress = new TonWeb.utils.Address(t.in_msg.source);\n\n        // validate log message\n\n        const msgText = new TextDecoder().decode(base64ToBytes(t.in_msg.msg_data.text));\n        if (!msgText.startsWith('swapTo#')) throw new Error('need swapTo#');\n        const addressFromInMsg = msgText.slice('swapTo#'.length);\n        if (destinationAddress.toLowerCase() !== addressFromInMsg.toLowerCase()) {\n            console.error('address from in_msg doesnt match ', addressFromInMsg, destinationAddress);\n            return null;\n        }\n        const amountFromInMsg = decToBN(t.in_msg.value);\n        const amountFromInMsgAfterFee = amountFromInMsg.sub(ToncoinBridge.getFeeAmount(amountFromInMsg));\n        if (!amount.eq(amountFromInMsgAfterFee)) {\n            console.error('amount from in_msg doesnt match ', amount.toString(), amountFromInMsgAfterFee.toString(), amountFromInMsg.toString());\n            return null;\n        }\n\n        return {\n            type: 'SwapTonToEth',\n            receiver: destinationAddress,\n            amount: amount.toString(),\n            tx: {\n                address_: {\n                    workchain: senderAddress.wc,\n                    address_hash: '0x' + bytesToHex(senderAddress.hashPart),\n                },\n                tx_hash: '0x' + bytesToHex(base64ToBytes(t.transaction_id.hash)),\n                lt: t.transaction_id.lt,\n            },\n            time: Number(t.utime)\n        };\n    }\n}","import Web3 from \"web3\";\nimport {base64ToBytes, bytesToHex, checkNull, decToBN, hexToBN} from \"./Paranoid\";\nimport {hash, EvmTransaction, TonTransaction, TonTxID} from \"./BridgeCommon\";\nimport TonWeb from \"tonweb\";\nimport {Log, TransactionReceipt} from \"web3-core\";\nimport {\n    BLOCK_CONFIRMATIONS_COUNT, parseBN, parseDecimals,\n    parseEvmAddress,\n    parseEvmBlockHash,\n    parseEvmTxHash,\n    parseNumber, parseTonAddress, parseWc\n} from \"./BridgeEvmUtils\";\nimport {findLogOutMsg, getMessageBytes, makeAddress} from \"./BridgeTonUtils\";\n\nconst LOCK_INPUT_LENGTH = 202;\nconst LOCK_INPUT_PREFIX = '0xca3369c6';\n\n// uint256 value, uint256 new_balance, uint8 decimals\nexport const lockEventDataTypes = ['uint256', 'uint256', 'uint8'];\n\nexport interface LockEvent extends EvmTransaction {\n    type: 'Lock';\n    transactionHash: string;\n    logIndex: number;\n    blockNumber: number;\n    blockTime: number;\n    blockHash: string;\n\n    from: string;\n    token: string;\n    to_address_hash: string; // bytes32\n    amount: string;\n    decimals: number;\n\n    rawData: string;\n    topics: string[];\n    transactionIndex: number;\n}\n\nexport interface BurnEvent extends TonTransaction { // ton event\n    type: 'Burn';\n    ethReceiver: string; // EVM-address, 160bit\n    jettonAmount: string; // VarUint 16\n    token: string; // EVM-address, 160bit\n    tx: TonTxID; // user sender address (ordinary wallet) && tx on bridge\n    time: number; // time of tx on bridge\n    jettonMinterAddress: string;\n}\n\nexport interface PayJettonMintEvent extends TonTransaction {\n    type: 'PayJettonMint',\n    queryId: string; // BN\n    tx: TonTxID; // user sender address (ordinary wallet) && tx on bridge\n    time: number; // time of tx on bridge\n}\n\nexport class TokenBridge {\n\n    static getDataId(\n        web3: Web3,\n        event: BurnEvent,\n        target: string,\n        chainId: number\n    ): string {\n        checkNull(target);\n        checkNull(chainId);\n        checkNull(event.ethReceiver);\n        checkNull(event.token);\n        checkNull(event.jettonAmount);\n        checkNull(event.tx.address_.address_hash);\n        checkNull(event.tx.tx_hash);\n        checkNull(event.tx.lt);\n        return hash(\n            web3.eth.abi.encodeParameters(\n                [\n                    'int',\n                    'address',\n                    'uint256',\n                    'address',\n                    'address',\n                    'uint256',\n                    'bytes32',\n                    'bytes32',\n                    'uint64',\n                ],\n                [\n                    0xda7a,\n                    target,\n                    chainId,\n                    event.ethReceiver,\n                    event.token,\n                    event.jettonAmount,\n                    event.tx.address_.address_hash,\n                    event.tx.tx_hash,\n                    event.tx.lt,\n                ]\n            )\n        );\n    }\n\n    static getNewSetId(web3: Web3, setHash: number, addresses: string[], target: string, chainId: number): string {\n        return hash(\n            web3.eth.abi.encodeParameters(\n                ['int', 'address', 'uint256', 'int', 'address[]'],\n                [0x5E7, target, chainId, setHash, addresses]\n            )\n        );\n    }\n\n    static getNewLockStatusId(web3: Web3, newLockStatus: boolean, nonce: number, target: string, chainId: number): string {\n        checkNull(newLockStatus);\n        checkNull(nonce);\n        checkNull(target);\n        checkNull(chainId);\n        return hash(\n            web3.eth.abi.encodeParameters(\n                ['int', 'address', 'uint256', 'bool', 'int'],\n                [0xB012, target, chainId, newLockStatus, nonce]\n            )\n        );\n    }\n\n    static findLog = (web3: Web3, from: string, amount: string, addressHash: string, token: string, logs: Log[]): Log | null => {\n        let count = 0;\n        let result: Log | null = null;\n        for (const log of logs) {\n            if (\n                log.topics.length === 4 &&\n                log.topics[1].toLowerCase().endsWith(from.substr(2)) &&\n                log.topics[2].toLowerCase().endsWith(token.substr(2)) &&\n                log.topics[3] === '0x' + addressHash\n            ) {\n                if (log.data.length !== 194) {\n                    throw new Error('invalid Lock event data length');\n                }\n\n                result = log;\n                count++;\n            }\n        }\n        if (count > 1) throw new Error('too many logs');\n        return result;\n    }\n\n    static createWrappedTokenData = (chainId: number, tokenAddress: string, decimals: number) => {\n        const wrappedTokenData = new TonWeb.boc.Cell();\n        wrappedTokenData.bits.writeUint(decToBN(chainId), 32);\n        wrappedTokenData.bits.writeUint(\n            hexToBN(tokenAddress),\n            160\n        );\n        wrappedTokenData.bits.writeUint(decToBN(decimals), 8);\n        return wrappedTokenData;\n    }\n\n    static createMultisigMsgBody(lockEvent: LockEvent, queryId: any /* BN */, chainId: number): any /* BitString */ {\n        const payload = new TonWeb.boc.Cell();\n        payload.bits.writeUint(decToBN(4), 32); // op\n        payload.bits.writeUint(queryId, 64); //query id for execute voting\n        payload.bits.writeUint(decToBN(0), 8); // execute voting op\n        payload.bits.writeUint(\n            hexToBN(lockEvent.transactionHash),\n            256\n        );\n        payload.bits.writeInt(decToBN(lockEvent.logIndex), 16);\n        payload.bits.writeUint(\n            hexToBN(lockEvent.to_address_hash),\n            256\n        );\n        payload.bits.writeCoins(decToBN(lockEvent.amount)); // mint_jetton_amount\n        payload.bits.writeCoins(decToBN(0)); // forward_coins_amount\n\n        payload.refs.push(this.createWrappedTokenData(chainId, lockEvent.token, lockEvent.decimals));\n        return payload;\n    }\n\n    static isValidLock = (tx: any, bridgeAddress: string): boolean => {\n        if (tx.to.toLowerCase() !== bridgeAddress.toLowerCase()) return false;\n        if (tx.from.toLowerCase() === bridgeAddress.toLowerCase()) return false;\n        if (tx.isError !== '0') return false;\n        if (tx.txreceipt_status !== '1') return false;\n        if (!tx.input) return false;\n        if (tx.input.length !== LOCK_INPUT_LENGTH) return false;\n        if (!tx.input.startsWith(LOCK_INPUT_PREFIX)) return false;\n        if (tx.confirmations < BLOCK_CONFIRMATIONS_COUNT) return false;\n        return true;\n    }\n\n    static processEvmTransaction = async (web3: Web3, bridgeAddress: string, tx: any, receipt: TransactionReceipt, currentBlockNumber: number): Promise<LockEvent> => {\n        // parse transaction\n\n        const blockNumber = parseNumber(tx, 'blockNumber');\n        const transactionHash = parseEvmTxHash(tx, 'hash');\n        const blockTime = parseNumber(tx, 'timeStamp');\n        const blockHash = parseEvmBlockHash(tx, 'blockHash');\n        const transactionIndex = parseNumber(tx, 'transactionIndex');\n        const from = parseEvmAddress(tx, 'from');\n        const to = parseEvmAddress(tx, 'to');\n        const input = tx.input;\n\n        // parse transaction input\n\n        if (input.length !== LOCK_INPUT_LENGTH) throw new Error('invalid input length ' + input);\n        if (!input.startsWith(LOCK_INPUT_PREFIX)) throw new Error(`input ${LOCK_INPUT_PREFIX} ` + input);\n\n        // function lock(address token, uint256 amount, bytes32 to_address_hash)\n        const lockInputTypes = ['address', 'uint256', 'bytes32'];\n        const inputData = '0x' + input.slice(10); // without method signature\n        const decodedInput = web3.eth.abi.decodeParameters(lockInputTypes, inputData);\n\n        const token = parseEvmAddress(decodedInput, '0');\n        const amount = parseBN(decodedInput, '1');\n        const address_hash = parseTonAddress(decodedInput, '2');\n\n        // validate transaction\n\n        if (!receipt || Object.keys(receipt).length === 0) throw new Error('no receipt');\n        if (blockHash !== receipt.blockHash.toLowerCase()) throw new Error('invalid blockHash');\n        if (blockNumber !== receipt.blockNumber) throw new Error('invalid blockNumber');\n        if (from !== receipt.from.toLowerCase()) throw new Error('invalid from');\n        if (!receipt.status) throw new Error('invalid status');\n        if (bridgeAddress.toLowerCase() !== receipt.to.toLowerCase()) throw new Error('invalid to');\n        if (transactionHash !== receipt.transactionHash.toLowerCase()) throw new Error('invalid transactionHash');\n        if (transactionIndex !== receipt.transactionIndex) throw new Error('invalid transactionIndex');\n\n        const log = TokenBridge.findLog(web3, from, amount, address_hash, token, receipt.logs);\n        if (!log) throw new Error('cant find log');\n        const logIndex = parseNumber(log, 'logIndex');\n\n        if (currentBlockNumber - receipt.blockNumber < BLOCK_CONFIRMATIONS_COUNT) {\n            throw new Error('No block confirmations ' + (currentBlockNumber - receipt.blockNumber) + '(' + currentBlockNumber + '-' + receipt.blockNumber + ')');\n        }\n\n        const decoded = web3.eth.abi.decodeParameters(lockEventDataTypes, log.data);\n        const finalAmount = parseBN(decoded, 0)\n        const newBalance = parseBN(decoded, 1);\n        const decimals = parseDecimals(decoded, 2);\n\n        return {\n            type: 'Lock',\n            transactionHash,\n            logIndex,\n            blockNumber,\n            blockTime,\n            blockHash,\n\n            from,\n            token,\n            to_address_hash: address_hash,\n            amount: finalAmount,\n            decimals,\n\n            rawData: log.data,\n            topics: log.topics,\n            transactionIndex,\n        }\n    }\n\n    /**\n     * @param t transaction from ton-http-api\n     */\n    static processTonTransaction = (t: any): BurnEvent | null => {\n\n        // find log message\n\n        const logMsg = findLogOutMsg(t.out_msgs);\n        if (!logMsg) {\n            return null;\n        }\n\n        const bytes = getMessageBytes(logMsg);\n        if (bytes === null) {\n            return null;\n        }\n\n        if (bytes.length !== 88) { // (160 + 128 + 160 + 256) / 8\n            return null;\n        }\n\n        // parse log message\n\n        const destinationAddress = makeAddress('0x' + bytesToHex(bytes.slice(0, 20)));\n        const amountHex = bytesToHex(bytes.slice(20, 36));\n        const amount = hexToBN(amountHex);\n        const tokenAddress = makeAddress('0x' + bytesToHex(bytes.slice(36, 56)));\n        const userSenderAddressHex = bytesToHex(bytes.slice(56, 56 + 32))\n        const minterSenderAddress = new TonWeb.utils.Address(t.in_msg.source);\n\n        return {\n            type: 'Burn',\n            ethReceiver: destinationAddress,\n            token: tokenAddress,\n            jettonAmount: amount.toString(),\n            tx: {\n                address_: {\n                    workchain: 0,\n                    address_hash: '0x' + userSenderAddressHex\n                },\n                tx_hash:\n                    '0x' +\n                    bytesToHex(\n                        base64ToBytes(t.transaction_id.hash),\n                    ),\n                lt: t.transaction_id.lt,\n            },\n            time: Number(t.utime),\n            jettonMinterAddress: minterSenderAddress.toString()\n        };\n    }\n\n    /**\n     * @param t transaction from ton-http-api\n     */\n    static processPayJettonMintTransaction = (t: any): PayJettonMintEvent | null => {\n\n        // find log message\n\n        const logMsg = findLogOutMsg(t.out_msgs);\n        if (!logMsg) {\n            return null;\n        }\n\n        const bytes = getMessageBytes(logMsg);\n        if (bytes === null) {\n            return null;\n        }\n\n        if (bytes.length !== 32) { // 256 bit\n            return null;\n        }\n\n        // parse log message\n        const queryIdHex = bytesToHex(bytes.slice(0, 32));\n        const queryId = hexToBN(queryIdHex);\n        const userSenderAddress = new TonWeb.utils.Address(t.in_msg.source);\n\n        return {\n            type: 'PayJettonMint',\n            queryId: queryId.toString(),\n            tx: {\n                address_: {\n                    workchain: userSenderAddress.wc,\n                    address_hash: '0x' + bytesToHex(userSenderAddress.hashPart)\n                },\n                tx_hash:\n                    '0x' +\n                    bytesToHex(\n                        base64ToBytes(t.transaction_id.hash),\n                    ),\n                lt: t.transaction_id.lt,\n            },\n            time: Number(t.utime),\n        };\n    }\n\n}","import {EvmTransaction, getQueryId} from \"./BridgeCommon\";\nimport TonWeb from \"tonweb\";\nimport {sendInternal, getNumber} from \"./BridgeTonUtils\";\nimport {WalletContract} from \"tonweb/dist/types/contract/wallet/wallet-contract\";\nimport {decToBN} from \"./Paranoid\";\n\nexport function getMultisigWalletId(chainId: number): number {\n    switch (chainId) {\n        case 56: // BSC mainnet\n            return 3;\n        case 97: // BSC testnet\n            return 97;\n        case 1: // ETH mainnet\n            return 4;\n        case 5: // ETH testnet Goerli\n            return 5;\n    }\n    throw new Error('unknown chainId ' + chainId);\n}\n\nexport async function getVotesInMultisig(tonweb: TonWeb, tonMultisigAddress: string, queryId: string, oraclesTotal: number): Promise<null | number[]> {\n    console.log(\"getVotesInMultisig \", queryId);\n\n    const result: any = await tonweb.provider.call(tonMultisigAddress, 'get_query_state', [[\"num\", queryId]]);\n\n    const a = getNumber(result.stack[0]);\n    const b = getNumber(result.stack[1]);\n\n    const arr: number[] = [];\n\n    const count = a === -1 ? oraclesTotal : b.toString(2).split('0').join('').length; // count of bits\n\n    for (let i = 0; i < count; i++) {\n        arr.push(1);\n    }\n    return arr;\n}\n\nexport async function hasMyVoteInMultisig(tonweb: TonWeb, tonMultisigAddress: string, tonMultisigIndex: number, ethToTon: EvmTransaction): Promise<boolean> {\n    const queryId = getQueryId(ethToTon).toString();\n\n    console.log('hasMyVoteInMultisig ', queryId);\n\n    const result: any = await tonweb.provider.call(tonMultisigAddress, 'message_signed_by_id?', [['num', tonMultisigIndex], ['num', queryId]]);\n    console.log('hasMyVoteInMultisig raw result', result);\n    const stack: any[] = result.stack;\n\n    return getNumber(stack[0]) === -1;\n}\n\nexport async function sendToMultisig(tonweb: TonWeb, wallet: WalletContract, secretKey: Uint8Array, tonMultisigAddress: string, tonMultisigIndex: number, chainId: number, tonBridgeAddress: string, ethToTon: EvmTransaction, payload: any /* Cell */): Promise<boolean> {\n    const myAddress = await wallet.getAddress();\n    const queryId = getQueryId(ethToTon);\n    console.log('sendToMultisig', ethToTon, 'from ' + myAddress.toString(true) + ' with query id ' + queryId.toString() + ' and index ' + tonMultisigIndex + ' to ' + tonMultisigAddress);\n\n    const WALLET_ID = getMultisigWalletId(chainId);\n\n    const orderHeader = TonWeb.Contract.createInternalMessageHeader(new TonWeb.utils.Address(tonBridgeAddress), TonWeb.utils.toNano('0.5'));\n    const msgToBridge = TonWeb.Contract.createCommonMsgInfo(orderHeader, undefined, payload);\n\n    const cell = new TonWeb.boc.Cell();\n    cell.bits.writeUint(decToBN(tonMultisigIndex), 8);\n    cell.bits.writeBit(0); // null signatures dict\n    cell.bits.writeUint(decToBN(WALLET_ID), 32);\n    cell.bits.writeUint(queryId, 64);\n    cell.bits.writeUint(decToBN(3), 8); // send mode 3\n    cell.refs.push(msgToBridge);\n\n    const rootHash: Uint8Array = await cell.hash();\n    const rootSignature: Uint8Array = TonWeb.utils.nacl.sign.detached(rootHash, secretKey);\n\n    const body = new TonWeb.boc.Cell();\n    body.bits.writeBytes(rootSignature);\n    body.writeCell(cell);\n    return sendInternal(tonweb, wallet, secretKey, body, tonMultisigAddress);\n}","\nimport {MaxInt256} from \"@ethersproject/constants\";\nimport {formatUnits, parseUnits} from \"@ethersproject/units\";\nimport BN from \"bn.js\";\nimport {debounce} from \"lodash\";\nimport QRCodeStyling, {Options} from \"qr-code-styling\";\nimport TonWeb from \"tonweb\";\nimport {defineComponent, PropType} from \"vue\";\nimport {mapMutations} from \"vuex\";\nimport Web3 from \"web3\";\nimport {AbiItem} from \"web3-utils\";\n\nimport BRIDGE from \"@/ton-bridge-lib/abi/TokenBridge.json\";\nimport WTON_BRIDGE from \"@/ton-bridge-lib/abi/WTON.json\";\nimport {getJettonWalletAddress, getJettonWalletBalance, getWrappedTokenData,} from \"@/ton-bridge-lib/BridgeJettonUtils\";\nimport {burnJetton, mintJetton} from \"@/api/tonWallet\";\nimport {onCopyClick} from \"@/utils\";\nimport {PARAMS} from \"@/utils/constants\";\nimport {\n  EvmSignature,\n  getEvmSignaturesFromCollector,\n  parseEvmSignature,\n  prepareEthSignatures\n} from \"@/ton-bridge-lib/BridgeCollector\";\nimport {getQueryId} from \"@/ton-bridge-lib/BridgeCommon\";\nimport {Provider} from \"@/utils/providers/provider\";\nimport {ERC20Contract} from \"@/utils/services/ERC20.contract\";\n\nimport {ComponentData, ProviderDataForJettons, ProviderDataForToncoin,} from \"./types\";\nimport {SwapTonToEth, ToncoinBridge} from \"@/ton-bridge-lib/ToncoinBridge\";\nimport {BurnEvent, TokenBridge} from \"@/ton-bridge-lib/TokenBridge\";\nimport {makeAddress} from \"@/ton-bridge-lib/BridgeTonUtils\";\nimport {getVotesInMultisig} from \"@/ton-bridge-lib/BridgeMultisig\";\nimport {bytesToHex, hexToBN} from \"@/ton-bridge-lib/Paranoid\";\nimport {Address} from \"tonweb/dist/types/utils/address\";\n\nconst fromNano = TonWeb.utils.fromNano;\nconst toNano = TonWeb.utils.toNano;\n\nexport default defineComponent({\n  props: {\n    isTestnet: { // immutable parameter from url\n      type: Boolean,\n      required: true,\n    },\n    isRecover: { // immutable parameter from url\n      type: Boolean,\n      required: true,\n    },\n    lt: { // immutable parameter from url\n      type: Number,\n      required: true,\n    },\n    hash: { // immutable parameter from url\n      type: String,\n      required: true,\n    },\n    isFromTon: {\n      type: Boolean,\n      required: true,\n    },\n    pair: { // \"eth\" or \"bsc\"\n      type: String,\n      required: true,\n    },\n    tokenAddress: { // Ethereum or TON token address\n      type: String,\n      required: true\n    },\n    tokenSymbol: {\n      type: String,\n      required: true\n    },\n    amount: { // float as string\n      type: String,\n      required: true,\n    },\n    token: { // \"ton\" or \"otherTokens\"\n      type: String,\n      required: true,\n    },\n    toAddress: { // Ethereum or TON to address\n      type: String,\n      required: true,\n    },\n    ethereumProvider: { // Ethereum provider\n      type: Object as PropType<Provider>,\n      required: true,\n    },\n    isInputsValid: {\n      type: Boolean,\n      required: true,\n    },\n  },\n\n  data(): ComponentData {\n    return {\n      updateStateIntervalForToncoin: null, // setInterval ID\n      updateStateIntervalForJettons: null, // setInterval ID\n      providerDataForToncoin: null,\n      providerDataForJettons: null,\n      ethToTon: null,\n      isInitInProgress: false,\n      isMintingInProgress: false,\n      isApprovingInProgress: false, // approving ERC-20 token in token transfer\n      isBurningInProgress: false,\n      isLockingInProgress: false,\n\n      isQRCodeShown: false,\n      hasApprove: false,\n\n      state: {\n        swapId: \"\",\n        queryId: \"0\",\n        jettonEvmAddress: \"\",\n        fromCurrencySent: false,\n        toCurrencySent: false,\n        step: 0, // 0-5 step\n        votes: [], // EvmSignature[] for ton->evm, number[] for evm->ton\n        swapData: null,\n        burnData: null,\n        createTime: 0,\n        blockNumber: 0,\n      },\n    };\n  },\n\n  computed: {\n    isToncoinTransfer(): boolean {\n      return this.token === \"ton\";\n    },\n    netTypeName(): string {\n      return this.isTestnet ? \"test\" : \"main\";\n    },\n    params(): ParamsNetwork {\n      const pairParams = PARAMS.networks[this.pair];\n      return pairParams[this.netTypeName as keyof typeof pairParams];\n    },\n    isMintToncoinButtonVisible(): boolean {\n      if (this.isToncoinTransfer) {\n        return (\n            this.isFromTon && !this.state.toCurrencySent && this.state.step === 4\n        );\n      } else {\n        if (this.isFromTon) {\n          return (\n              !this.state.toCurrencySent && this.state.step === 4\n          );\n        } else {\n          return this.state.step == 3;\n        }\n      }\n    },\n    isDoneButtonVisible(): boolean {\n      return this.state.step > 4;\n    },\n    isCancelButtonVisible(): boolean {\n      return this.isFromTon && this.state.step === 1;\n    },\n    fromCoin(): string {\n      return this.isFromTon\n          ? this.$t(`networks.ton.${this.netTypeName}.coinShort`)\n          : this.$t(`networks.${this.pair}.${this.netTypeName}.coinShort`);\n    },\n    toCoin(): string {\n      if (this.isToncoinTransfer) {\n        return !this.isFromTon\n            ? this.$t(`networks.ton.${this.netTypeName}.coinShort`)\n            : this.$t(`networks.${this.pair}.${this.netTypeName}.coinShort`);\n      } else {\n        return this.tokenSymbol;\n      }\n    },\n    getStepInfoText1(): any {\n      if (this.state.step === 1) {\n        if (this.isFromTon) {\n          if (this.isToncoinTransfer) {\n            const url = PARAMS.tonTransferUrl\n                .replace(\"<BRIDGE_ADDRESS>\", this.params.tonBridgeAddress)\n                .replace(\"<AMOUNT>\", toNano(this.amount).toString())\n                .replace(\"<TO_ADDRESS>\", this.toAddress);\n            return {\n              isOnlyText: false,\n              send1: this.$t(\"networks.ton.transactionSend1\"),\n              amountReadable: this.amount,\n              send2: this.$t(\"networks.ton.transactionSend2\"),\n              toAddress: this.params.tonBridgeAddress,\n              withComment: this.$t(\"networks.ton.transactionSendComment\"),\n              comment: \"swapTo#\" + this.toAddress,\n              openWalletLabel: this.$t(\"networks.ton.openWallet\"),\n              openWalletUrl: url,\n              generateQRCode: this.isQRCodeShown\n                  ? \"\"\n                  : this.$t(\"networks.ton.generateQRCode\"),\n              scanQRCode: this.isQRCodeShown\n                  ? this.$t(\"networks.ton.scanQRCode\")\n                  : \"\",\n            };\n          } else {\n            return {\n              isOnlyText: true,\n              text: this.state.fromCurrencySent\n                  ? this.$t(`networks.${this.pair}.transactionWait`)\n                  : this.$t(`networks.${this.pair}.transactionSend`, {\n                    provider: \"TON Wallet\",\n                  }),\n            };\n          }\n        } else {\n          return {\n            isOnlyText: true,\n            text: this.state.fromCurrencySent\n                ? this.$t(`networks.${this.pair}.transactionWait`)\n                : this.$t(`networks.${this.pair}.transactionSend`, {\n                  provider: this.ethereumProvider.title,\n                }),\n          };\n        }\n      } else {\n        const pair = this.isFromTon ? \"ton\" : this.pair;\n        return {\n          isOnlyText: true,\n          text: this.$t(`networks.${pair}.transactionCompleted`),\n        };\n      }\n    },\n    getStepInfoText2(): string {\n      if (this.isFromTon) {\n        return \"\";\n      }\n      const providerData =\n          this.isToncoinTransfer\n              ? this.providerDataForToncoin\n              : this.providerDataForJettons;\n\n      if (this.state.step === 2) {\n        let blocksConfirmations =\n            (providerData?.blockNumber || this.state.blockNumber) -\n            this.state.blockNumber;\n        blocksConfirmations = Math.max(\n            Math.min(blocksConfirmations, this.params.blocksConfirmations),\n            0\n        );\n        return this.$t(`networks.${this.pair}.blocksConfirmations`, {\n          count:\n              String(blocksConfirmations) +\n              \"/\" +\n              String(this.params.blocksConfirmations),\n        });\n      } else if (this.state.step > 2) {\n        return this.$t(\"blocksConfirmationsCollected\");\n      } else {\n        return this.$t(\"blocksConfirmationsWaiting\");\n      }\n    },\n    getStepInfoText3(): string {\n      if (!this.isToncoinTransfer && !this.isFromTon) {\n        return this.getGetCoinsText(3);\n      } else {\n        return this.getOraclesText(3);\n      }\n    },\n    getStepInfoText4(): string {\n      if (!this.isToncoinTransfer && !this.isFromTon) {\n        return this.getOraclesText(4);\n      } else {\n        return this.getGetCoinsText(4);\n      }\n    },\n  },\n\n  watch: {\n    \"state.step\": {\n      immediate: true,\n      handler(val) {\n        this.$emit(\"state-changed\");\n        this.$emit(\"transfer-in-progress\", val > 0);\n      },\n    },\n    token: {\n      immediate: true,\n      handler(newValue) {\n        this.onTokenChange(newValue);\n      },\n    },\n  },\n\n  mounted(): void {\n    this.$watch(\n        () => [this.amount, this.tokenAddress, this.isFromTon, this.isInputsValid, this.ethereumProvider],\n        debounce(async ([newAmount]: any) => {\n          this.checkAllowance(newAmount);\n        }, 300)\n    );\n\n    this.$emit(\"ready\");\n  },\n\n  beforeDestroy(): void {\n    clearInterval(\n        this.updateStateIntervalForToncoin as ReturnType<typeof setInterval>\n    );\n    clearInterval(\n        this.updateStateIntervalForJettons as ReturnType<typeof setInterval>\n    );\n  },\n\n  methods: {\n    onCopyClick,\n    makeAddress,\n    parseEvmSignature,\n    getQueryId,\n    ...mapMutations({setAlert: \"setAlert\"}),\n    async mint(): Promise<void> {\n      if (this.isFromTon) {\n        if (this.isToncoinTransfer) {\n          await this.mintWrappedToncoin();\n        } else {\n          await this.unlockToken();\n        }\n      } else {\n        if (this.isToncoinTransfer) {\n          throw new Error('can never happen');\n        } else {\n          await this.mintJetton();\n        }\n      }\n    },\n    onTokenChange(newValue: string): void {\n      clearInterval(\n          this.updateStateIntervalForToncoin as ReturnType<typeof setInterval>\n      );\n      clearInterval(\n          this.updateStateIntervalForJettons as ReturnType<typeof setInterval>\n      );\n\n      if (newValue === \"ton\") {\n        this.updateStateForToncoin();\n        this.updateStateIntervalForToncoin = setInterval(\n            this.updateStateForToncoin,\n            5000\n        );\n      } else {\n        this.updateStateForJettons();\n        this.updateStateIntervalForJettons = setInterval(\n            this.updateStateForJettons,\n            5000\n        );\n      }\n    },\n\n\n    getOraclesText(oraclesStep: number): string {\n      if (this.state.step === oraclesStep) {\n        const providerData =\n            this.isToncoinTransfer\n                ? this.providerDataForToncoin\n                : this.providerDataForJettons;\n\n        const votesConfirmations =\n            this.state.votes.length +\n            \"/\" +\n            (providerData?.oraclesTotal || 0);\n        return this.$t(\"oraclesConfirmations\", {\n          count: String(votesConfirmations),\n        });\n      } else if (this.state.step > oraclesStep) {\n        return this.$t(\"oraclesConfirmationsCollected\");\n      } else {\n        return this.$t(\"oraclesConfirmationsWaiting\");\n      }\n    },\n\n    getGetCoinsText(getCoinsStep: number): string {\n      const toCoins = this.toCoin || this.$t(\"tokens\")\n      if (this.state.step === getCoinsStep) {\n        return this.state.toCurrencySent\n            ? this.$t(`networks.${this.pair}.transactionWait`)\n            : this.$t(\"getCoinsByProvider\", {\n              provider: this.token === 'ton' ? this.ethereumProvider.title : 'TON Wallet',\n              toCoin: toCoins,\n            });\n      } else if (this.state.step > getCoinsStep) {\n        return this.$t(\"coinsSent\", {toCoin: toCoins});\n      } else {\n        const pair = this.isFromTon ? this.pair : \"ton\";\n        return this.$t(\"getCoins\", {\n          toCoin: toCoins,\n          toNetwork: this.$t(`networks.${pair}.${this.netTypeName}.name`),\n        });\n      }\n    },\n\n    generateQRCode(): void {\n      this.isQRCodeShown = true;\n\n      const url = PARAMS.tonTransferUrl\n          .replace(\"<BRIDGE_ADDRESS>\", this.params.tonBridgeAddress)\n          .replace(\"<AMOUNT>\", toNano(this.amount).toString())\n          .replace(\"<TO_ADDRESS>\", this.toAddress);\n\n      const options: Partial<Options> = {\n        data: url,\n        width: 225 * window.devicePixelRatio,\n        height: 225 * window.devicePixelRatio,\n        image: require(\"@/assets/pics/gem@large.png\"),\n        dotsOptions: {\n          color: \"#000000\",\n          type: \"extra-rounded\",\n        },\n        cornersSquareOptions: {\n          color: \"#000000\",\n          type: \"extra-rounded\",\n        },\n        cornersDotOptions: {\n          color: \"#000000\",\n          type: \"dot\",\n        },\n        imageOptions: {\n          hideBackgroundDots: true,\n          crossOrigin: \"use-credentials\",\n          imageSize: 1,\n        },\n        qrOptions: {\n          errorCorrectionLevel: \"L\",\n        },\n      };\n\n      const qrCode = new QRCodeStyling(options);\n      qrCode.append(this.$refs.qrcode as HTMLElement);\n    },\n    async initProvider(isToncoinTransfer: boolean): Promise<boolean> {\n      if (isToncoinTransfer) {\n        if (!this.providerDataForToncoin) {\n          this.providerDataForToncoin = await this.initProviderForToncoin();\n          if (!this.providerDataForToncoin) {\n            return false;\n          }\n        }\n      } else {\n        if (!this.providerDataForJettons) {\n          this.providerDataForJettons = await this.initProviderForJettons();\n          if (!this.providerDataForJettons) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n    resetState(): void {\n      this.state.swapId = \"\";\n      this.state.queryId = \"0\";\n      this.state.jettonEvmAddress = \"\";\n      this.state.fromCurrencySent = false;\n      this.state.toCurrencySent = false;\n      this.state.step = 0;\n      this.state.votes = [];\n      this.state.swapData = null;\n      this.state.burnData = null;\n      this.state.createTime = 0;\n      this.state.blockNumber = 0;\n\n      this.isQRCodeShown = false;\n\n      this.$emit(\"reset-state\");\n    },\n    async loadState(state: any): Promise<boolean> {\n      if (!state || !state.processingState) {\n        return false;\n      }\n\n      this.isInitInProgress = true;\n      const isToncoinTransfer = state.token === 'ton';\n      if (!(await this.initProvider(isToncoinTransfer))) {\n        this.isInitInProgress = false;\n        return;\n      }\n\n      this.isInitInProgress = false;\n\n      Object.assign(this.state, state.processingState);\n      this.ethToTon = state.processingState.ethToTon;\n\n      if (isToncoinTransfer) {\n        await this.updateStateForToncoin();\n      } else {\n        await this.updateStateForJettons();\n      }\n\n      return true;\n    },\n    saveState(): void {\n      this.$emit(\"save-state\", {\n        ...this.state,\n        ethToTon: this.ethToTon,\n      });\n    },\n    deleteState(): void {\n      this.$emit(\"delete-state\");\n    },\n    async updateStateForToncoin(): Promise<void> {\n      const provider = this.providerDataForToncoin!;\n      const web3 = this.ethereumProvider.web3!;\n\n      // Step 1 - TON->EVM - find Toncoin transfer in TON network\n\n      if (this.state.step === 1 && this.isFromTon) {\n        const swap = await this.getSwapForToncoin(\n            toNano(this.amount),\n            this.toAddress,\n            this.state.createTime\n        );\n        if (swap) {\n          this.state.swapId = this.getSwapTonToEthIdForToncoin(swap);\n          this.state.swapData = swap;\n          this.state.step = 3;\n        }\n      }\n\n      // Step 2 - EVM->TON - collect block confirmations after Burn wrapped Toncoins in EVM-network\n\n      if (this.state.step === 2 && !this.isFromTon) {\n        const blockNumber = await web3.eth.getBlockNumber();\n        provider.blockNumber = blockNumber;\n\n        console.log(blockNumber, this.state.blockNumber);\n\n        const blocksConfirmations =\n            (blockNumber || this.state.blockNumber) -\n            this.state.blockNumber;\n\n        if (blocksConfirmations > this.params.blocksConfirmations) {\n          const receipt = await web3.eth.getTransactionReceipt(\n              this.ethToTon!.transactionHash\n          );\n          this.ethToTon!.blockNumber = receipt.blockNumber;\n          const block = await web3.eth.getBlock(\n              receipt.blockNumber\n          );\n          this.ethToTon!.blockTime = Number(block.timestamp);\n          this.ethToTon!.blockHash = block.hash;\n          const log = ToncoinBridge.findLog(web3, this.ethToTon!.from, this.ethToTon!.value, this.ethToTon!.to.workchain.toString(), this.ethToTon!.to.address_hash, receipt.logs);\n          if (!log) throw new Error('cant find log');\n          this.ethToTon!.logIndex = log.logIndex;\n\n          this.state.queryId = this.getQueryId(this.ethToTon!).toString();\n          this.state.step = 3;\n        }\n      }\n\n      // Step 3 - Collect oracles votes\n\n      if (this.state.step === 3) {\n        this.state.votes = this.isFromTon\n            ? await this.getEthVoteForToncoin(this.state.swapId)\n            : await this.getTonVoteForToncoin(this.state.queryId);\n        if (\n            this.state.votes.length >=\n            (provider.oraclesTotal * 2) / 3\n        ) {\n          this.state.step = this.isFromTon ? 4 : 5;\n        }\n      }\n    },\n    async updateStateForJettons(): Promise<void> {\n      const provider = this.providerDataForJettons!;\n      const web3 = this.ethereumProvider.web3!;\n\n      // Step 1 - TON->EVM - find jetton burn in TON network\n\n      if (this.state.step === 1 && this.isFromTon) {\n        const burn = await this.getSwapForJettons(\n            this.toAddress,\n            this.state.createTime\n        );\n        if (burn) {\n          this.state.swapId = this.getSwapTonToEthIdForJettons(burn);\n          this.state.burnData = burn;\n          this.state.step = 3;\n        }\n      }\n\n      // Step 2 - EVM->TON - collect block confirmations after Lock tokens in EVM-network\n\n      if (this.state.step === 2 && !this.isFromTon) {\n        const blockNumber = await web3.eth.getBlockNumber();\n        provider.blockNumber = blockNumber;\n\n        console.log(blockNumber, this.state.blockNumber);\n\n        const blocksConfirmations =\n            (blockNumber || this.state.blockNumber) -\n            this.state.blockNumber;\n\n        if (blocksConfirmations > this.params.blocksConfirmations) {\n          const receipt = await web3.eth.getTransactionReceipt(\n              this.ethToTon!.transactionHash\n          );\n          this.ethToTon!.blockNumber = receipt.blockNumber;\n          const block = await web3.eth.getBlock(\n              receipt.blockNumber\n          );\n\n          this.ethToTon!.blockTime = Number(block.timestamp);\n          this.ethToTon!.blockHash = block.hash;\n\n          const log = TokenBridge.findLog(web3, this.ethToTon!.from, this.ethToTon!.value, this.ethToTon!.to.address_hash, this.tokenAddress.toLowerCase(), receipt.logs);\n          if (!log) throw new Error('cant find log');\n          this.ethToTon!.logIndex = log.logIndex;\n\n          this.state.queryId = this.getQueryId(this.ethToTon!).toString();\n          this.state.step = 3;\n        }\n      }\n\n      // Step 3\n\n      if (this.state.step === 3) {\n        if (this.isFromTon) { // TON->EVM - Collect oracles votes for jetton burn\n          this.state.votes = await this.getEthVoteForJettons(this.state.swapId);\n\n          if (\n              this.state.votes.length >=\n              (provider.oraclesTotal * 2) / 3\n          ) {\n            this.state.step = 4;\n          }\n        } else { // EVM->TON - find mint pay in TON Network\n          const isPaid = await this.isJettonMintPaid(this.state.queryId);\n          console.log('isPaid', this.state.queryId, isPaid);\n          if (isPaid) {\n            this.state.step = 4;\n          }\n        }\n      }\n\n      // Step 4 - Collect oracles votes for mint jetton in TON network\n\n      if (this.state.step === 4 && !this.isFromTon) {\n        this.state.votes = await this.getTonVoteForJettons(this.state.queryId);\n        if (\n            this.state.votes.length >=\n            (provider.oraclesTotal * 2) / 3\n        ) {\n          this.state.step = 5;\n        }\n      }\n    },\n    getSwapTonToEthIdForToncoin(d: SwapTonToEth): string {\n      const target = this.pair === \"eth\" && !this.isTestnet ? undefined : this.params.wTonAddress;\n      return ToncoinBridge.getDataId(this.ethereumProvider.web3!, d, target)\n    },\n    getSwapTonToEthIdForJettons(d: BurnEvent): string {\n      return TokenBridge.getDataId(this.ethereumProvider.web3!, d, this.params.tonBridgeV2EVMAddress, this.params.chainId);\n    },\n\n    getFeeAmountForToncoin(amount: BN): BN {\n      const provider = this.providerDataForToncoin!;\n      const rest = amount.sub(provider.feeFlat);\n      const percentFee = rest\n          .mul(provider.feeFactor)\n          .div(provider.feeBase);\n      return provider.feeFlat.add(percentFee);\n    },\n\n    async getSwapForToncoin(\n        myAmount: BN,\n        myToAddress: string,\n        myCreateTime: number\n    ): Promise<null | SwapTonToEth> {\n      const amountAfterFee = myAmount.sub(this.getFeeAmountForToncoin(myAmount));\n\n      const specifiedTransaction = this.lt && this.hash; // get specified transaction by its lt and hash\n      const isRecover = this.isRecover; // ignore createTime and find in more transactions\n\n      const provider = this.providerDataForToncoin!.tonweb.provider;\n\n      let transactions;\n\n      if (specifiedTransaction) {\n        console.log('Get Toncoin specified tx ' + this.lt + ':' + this.hash);\n        transactions = await provider.getTransactions(\n            this.params.tonBridgeAddress,\n            1,\n            this.lt,\n            this.hash,\n            undefined,\n            true\n        );\n      } else {\n        const limit = isRecover ? 200 : 40;\n        console.log(`Find Toncoin swap - get ${limit} ton txs`);\n        transactions = await provider.getTransactions(\n            this.params.tonBridgeAddress,\n            limit\n        );\n      }\n\n      console.log(`Find Toncoin swap - got ton ${transactions.length} txs`);\n\n      for (const t of transactions) {\n        if (!isRecover && !specifiedTransaction) {\n          if (t.utime * 1000 < myCreateTime) continue;\n        }\n\n        const event = ToncoinBridge.processTonTransaction(t);\n\n        if (event) {\n          console.log(JSON.stringify(event));\n\n          if (\n              new BN(event.amount).eq(amountAfterFee) &&\n              event.receiver.toLowerCase() === myToAddress.toLowerCase()\n          ) {\n            return event;\n          }\n        }\n      }\n      return null;\n    },\n\n    async isJettonMintPaid(queryId: string): Promise<boolean> {\n      const provider = this.providerDataForJettons!.tonweb.provider;\n      const isRecover = this.isRecover; // ignore createTime and find in more transactions\n      const limit = isRecover ? 200 : 40;\n      console.log(`Find Token paid - get ${limit} ton txs`);\n\n      const transactions: any[] =\n          await provider.getTransactions(\n              this.params.tonBridgeAddressV2,\n              limit\n          );\n\n      console.log(`Find Token paid - got ${transactions.length} ton txs`);\n\n      for (const t of transactions) {\n        const event = TokenBridge.processPayJettonMintTransaction(t);\n        if (event && event.queryId === queryId) {\n          console.log(event);\n          return true;\n        }\n      }\n      return false;\n    },\n\n    async getSwapForJettons(\n        // myAmount: BN,\n        myToAddress: string,\n        myCreateTime: number\n    ): Promise<null | BurnEvent> {\n      const specifiedTransaction = this.lt && this.hash; // get specified transaction by its lt and hash\n      const isRecover = this.isRecover; // ignore createTime and find in more transactions\n\n      const provider = this.providerDataForJettons!.tonweb.provider;\n\n      let transactions;\n\n      if (specifiedTransaction) {\n        console.log('Get Token specified tx ' + this.lt + ':' + this.hash);\n        transactions = await provider.getTransactions(\n            this.params.tonBridgeAddressV2,\n            1,\n            this.lt,\n            this.hash,\n            undefined,\n            true\n        );\n      } else {\n        const limit = isRecover ? 200 : 40;\n        console.log(`Find Token swap - get ${limit} ton txs`);\n        transactions = await provider.getTransactions(\n            this.params.tonBridgeAddressV2,\n            limit\n        );\n      }\n\n      console.log(`Find Token swap - got ton ${transactions.length} txs`);\n\n      for (const t of transactions) {\n        if (!isRecover && !specifiedTransaction) {\n          if (t.utime * 1000 < myCreateTime) continue;\n        }\n\n        const event = TokenBridge.processTonTransaction(t);\n\n        if (event) {\n          console.log(JSON.stringify(event));\n\n          if (\n              event.ethReceiver.toLowerCase() === myToAddress.toLowerCase() &&\n              this.state.jettonEvmAddress.toLocaleLowerCase() === event.token.toLocaleLowerCase()\n          ) {\n            // const swapId = this.getSwapTonToEthIdForJettons(event);\n            // let isVotingFinished = true;\n            // try {\n            //   isVotingFinished =\n            //       await this.providerDataForJettons!.bridgeContract.methods.finishedVotings(\n            //           swapId\n            //       ).call();\n            // } catch (error) {\n            //   console.error(error);\n            //   return null;\n            // }\n            // if (!isVotingFinished) {\n            // }\n            return event;\n          }\n        }\n      }\n      return null;\n    },\n    async getEthVoteForToncoin(voteId: string): Promise<EvmSignature[]> {\n      const result = await getEvmSignaturesFromCollector(this.providerDataForToncoin!.tonweb as any, this.params.tonCollectorAddress, voteId);\n      return result ? result.signatures : [];\n    },\n    async getEthVoteForJettons(voteId: string): Promise<EvmSignature[]> {\n      const result = await getEvmSignaturesFromCollector(this.providerDataForJettons!.tonweb as any, this.params.tonCollectorAddressV2, voteId);\n      return result ? result.signatures : [];\n    },\n    async getTonVoteForToncoin(queryId: string): Promise<number[]> {\n      return getVotesInMultisig(this.providerDataForToncoin!.tonweb as any, this.params.tonMultisigAddress, queryId, this.providerDataForToncoin!.oraclesTotal);\n    },\n    async getTonVoteForJettons(queryId: string): Promise<number[]> {\n      return getVotesInMultisig(this.providerDataForJettons!.tonweb as any, this.params.tonMultisigAddressV2, queryId, this.providerDataForJettons!.oraclesTotal);\n    },\n    onDoneClick(): void {\n      this.deleteState();\n      this.resetState();\n    },\n    onCancelClick(): void {\n      this.deleteState();\n      this.resetState();\n    },\n    /**\n     * Validate that Ethereum provider connected, has valid chain and ETH balance > 0\n     */\n    async validateEthereumProvider(): Promise<boolean> {\n      try {\n        if (!this.ethereumProvider.isConnected) {\n          const error = this.$t(\"errors.providerIsDisconnected\", {\n            provider: this.ethereumProvider.title,\n          });\n          throw new Error(error);\n        }\n\n        if (!this.ethereumProvider.myAddress) {\n          throw new Error(this.$t(\"errors.cantGetAddress\"));\n        }\n\n        if (this.ethereumProvider.chainId !== this.params.chainId) {\n          const error = this.$t(\"errors.wrongProviderNetwork\", {\n            network: this.$t(`networks.${this.pair}.${this.netTypeName}.name`),\n            provider: this.ethereumProvider.title,\n          });\n          throw new Error(error);\n        }\n\n        if (\n            !new BN(\n                await this.ethereumProvider.web3!.eth.getBalance(this.ethereumProvider.myAddress)\n            ).gt(new BN(\"0\"))\n        ) {\n          throw new Error(this.$t(`networks.${this.pair}.errors.lowBalance`));\n        }\n      } catch (e: any) {\n        console.error(e.message);\n        this.setAlert({\n          title: this.$t(\"errors.alertTitleError\"),\n          message: e.message,\n          buttonLabel: this.$t(\"errors.alertButtonClose\"),\n        });\n        return false;\n      }\n\n      return true;\n    },\n    async debugVoteForSwitchLock(): Promise<void> {\n      const unlockSignatures = [\n        {\n          signer: '0xe54CD631C97bE0767172AD16904688962d09d2FE',\n          signature: '0x53d5ede513368f6b01d88520b51cabdbd07a23d8b91614a211962c68165ef7b4726ea200897d8db55861c1e8862289321fc13579027c773572d6248deab761911c'\n        },\n        {\n          signer: '0xeb05E1B6AC0d574eF2CF29FDf01cC0bA3D8F9Bf1',\n          signature: '0xc931c3b089eece0b4cc150d387d4d1fbf65d75eff2e409b8b99738cc08cfe3573b6f16ee6c206ee968b5216dae04526c1a79d83ec025a0b93c733ecbc9f881371b'\n        },\n      ].sort((a, b) => {\n        return hexToBN(a.signer).cmp(hexToBN(b.signer));\n      });\n\n      await this.providerDataForJettons!.bridgeContract.methods\n          .voteForSwitchLock(true, 1, unlockSignatures)\n          .send({from: this.ethereumProvider.myAddress});\n    },\n    /**\n     * Mint Wrapped ERC-20 Toncoin in EVM network\n     * Last step in transfer\n     */\n    async mintWrappedToncoin(): Promise<void> {\n      if (this.isMintingInProgress) return;\n\n      if (!(await this.validateEthereumProvider())) return;\n\n      this.isMintingInProgress = true;\n\n      let receipt;\n      try {\n        const signatures = prepareEthSignatures(this.state.votes as EvmSignature[]);\n\n        receipt =\n            await this.providerDataForToncoin!.wtonContract.methods.voteForMinting(\n                this.state.swapData!,\n                signatures\n            )\n                .send({from: this.ethereumProvider.myAddress})\n                .on(\"transactionHash\", () => {\n                  this.state.toCurrencySent = true;\n                  this.isMintingInProgress = false;\n                  this.deleteState();\n                });\n      } catch (e) {\n        console.error(e);\n        this.isMintingInProgress = false;\n        return;\n      }\n\n      this.isMintingInProgress = false;\n\n      if (receipt.status) {\n        this.state.step = 5;\n        this.deleteState();\n      } else {\n        console.error(\"transaction fail\", receipt);\n      }\n    },\n    /**\n     * Burn Wrapped ERC-20 Toncoin in EVM network\n     * First step in transfer\n     */\n    async burnWrappedToncoin(): Promise<void> {\n      if (this.isBurningInProgress) {\n        return;\n      }\n\n      if (!(await this.validateEthereumProvider())) {\n        return;\n      }\n\n      const fromAddress = this.ethereumProvider.myAddress;\n      const toAddress = this.toAddress;\n      let amountUnits: string;\n      let wc: number;\n      let hashPart: string;\n\n      this.isBurningInProgress = true;\n\n      let receipt;\n      try {\n\n        const addressTon = new TonWeb.utils.Address(toAddress);\n        wc = addressTon.wc;\n        hashPart = bytesToHex(addressTon.hashPart);\n\n        amountUnits = toNano(this.amount).toString();\n\n        receipt = await this.providerDataForToncoin!.wtonContract.methods.burn(\n            amountUnits,\n            {\n              workchain: wc,\n              address_hash: \"0x\" + hashPart,\n            }\n        )\n            .send({from: fromAddress})\n            .on(\"transactionHash\", () => {\n              this.state.fromCurrencySent = true;\n            });\n      } catch (e) {\n        this.isBurningInProgress = false;\n        console.error(e);\n        this.resetState();\n        return;\n      }\n\n      if (receipt.status) {\n        console.log(\"receipt\", receipt);\n\n        this.state.blockNumber = receipt.blockNumber;\n        this.ethToTon = {\n          type: 'SwapEthToTon',\n          transactionHash: receipt.transactionHash,\n          logIndex: -1,\n          blockNumber: receipt.blockNumber,\n          blockTime: 0,\n          blockHash: \"\",\n\n          from: fromAddress,\n          to: {\n            workchain: wc,\n            address_hash: hashPart,\n          },\n          value: amountUnits,\n\n          rawData: receipt.rawData,\n          topics: receipt.topics,\n          transactionIndex: receipt.transactionIndex\n        };\n        this.isBurningInProgress = false;\n        this.state.step = 2;\n      } else {\n        this.isBurningInProgress = false;\n        console.error(\"transaction fail\", receipt);\n      }\n    },\n    /**\n     * Check allowance of ERC-20 token for token bridge in EVM network\n     */\n    async checkAllowance(amount: string): Promise<void> {\n      console.log('checkAllowance');\n      if (this.isFromTon || this.isToncoinTransfer || !this.isInputsValid) {\n        return;\n      }\n      console.log('checkAllowance2');\n\n      try {\n        if (!Web3.utils.isAddress(this.tokenAddress)) {\n          this.hasApprove = false;\n        } else {\n          const erc20Contract = new ERC20Contract(this.ethereumProvider);\n          const decimals = await erc20Contract.decimals({\n            address: this.tokenAddress\n          });\n          const amountUnits = parseUnits(amount.toString(), decimals).toString();\n          const allowanceUnits = await erc20Contract.allowance({\n            address: this.tokenAddress,\n            spender: this.params.tonBridgeV2EVMAddress,\n            owner: this.ethereumProvider.myAddress,\n          });\n          console.log(allowanceUnits.toString());\n          console.log(amountUnits.toString());\n          this.hasApprove = new BN(allowanceUnits.toString()).gte(new BN(amountUnits.toString()));\n        }\n      } catch (e) {\n        console.error(e);\n        this.hasApprove = false;\n      }\n\n    },\n    /**\n     * Approve ERC-20 token for token bridge in EVM network\n     */\n    async onApproveClick(): Promise<void> {\n      if (this.isApprovingInProgress) {\n        return;\n      }\n\n      if (!this.isInputsValid) return;\n\n      if (!(await this.validateEthereumProvider())) {\n        return;\n      }\n\n      this.isApprovingInProgress = true;\n\n      const maxAmount = MaxInt256.toString();\n      try {\n        const erc20Contract = new ERC20Contract(this.ethereumProvider);\n        const tx = await erc20Contract.approve({\n          address: this.tokenAddress,\n          spender: this.params.tonBridgeV2EVMAddress,\n          amount: maxAmount,\n        });\n        await tx.wait();\n        this.hasApprove = true;\n        this.isApprovingInProgress = false;\n      } catch (e: any) {\n        console.error(e);\n        this.isApprovingInProgress = false;\n\n        this.setAlert({\n          title: this.$t(\"errors.alertTitleError\"),\n          message: e.message,\n          buttonLabel: this.$t(\"errors.alertButtonClose\"),\n        });\n      }\n    },\n    /**\n     * Lock ERC-20 token in EVM network\n     * First step in transfer\n     */\n    async lockToken(amountUnits: BN): Promise<void> {\n      if (this.isBurningInProgress) {\n        return;\n      }\n\n      if (!(await this.validateEthereumProvider())) {\n        return;\n      }\n\n      const fromAddress = this.ethereumProvider.myAddress;\n      const toAddress = this.toAddress;\n      let wc: number;\n      let hashPart: string;\n\n      this.isBurningInProgress = true;\n\n      let receipt;\n      try {\n\n        const addressTon = new TonWeb.utils.Address(toAddress);\n        wc = addressTon.wc;\n        if (wc !== 0) throw new Error('Only basechain wallets supported');\n        hashPart = bytesToHex(addressTon.hashPart);\n\n        receipt = await this.providerDataForJettons!.bridgeContract.methods.lock(\n          this.tokenAddress, // token\n          amountUnits.toString(), // amount\n          \"0x\" + hashPart // to_address_hash\n        )\n            .send({from: fromAddress})\n            .on(\"transactionHash\", () => {\n              this.state.fromCurrencySent = true;\n            });\n      } catch (e) {\n        this.isBurningInProgress = false;\n        console.error(e);\n        this.resetState();\n        return;\n      }\n\n      if (receipt.status) {\n        console.log(\"receipt\", receipt);\n\n        this.state.blockNumber = receipt.blockNumber;\n\n        this.state.blockNumber = receipt.blockNumber;\n        this.ethToTon = {\n          type: 'SwapEthToTon',\n          transactionHash: receipt.transactionHash,\n          logIndex: -1,\n          blockNumber: receipt.blockNumber,\n          blockTime: 0,\n          blockHash: \"\",\n          from: fromAddress,\n          to: {\n            workchain: wc,\n            address_hash: hashPart,\n          },\n          value: amountUnits.toString(),\n\n          rawData: receipt.rawData,\n          topics: receipt.topics,\n          transactionIndex: receipt.transactionIndex\n        };\n\n        this.isBurningInProgress = false;\n        this.state.step = 2;\n        this.saveState();\n      } else {\n        this.isBurningInProgress = false;\n        console.error(\"transaction fail\", receipt);\n      }\n    },\n    /**\n     * Unlock ERC-20 token in EVM network\n     * Last step in transfer\n     */\n    async unlockToken(): Promise<void> {\n      if (this.isMintingInProgress) return;\n\n      if (!(await this.validateEthereumProvider())) return;\n\n      this.isMintingInProgress = true;\n\n      let receipt;\n      try {\n        const signatures = prepareEthSignatures(this.state.votes as EvmSignature[]);\n\n        const burnData: BurnEvent = this.state.burnData;\n        if (!burnData) throw new Error('No burn data');\n\n\n        receipt =\n            await this.providerDataForJettons!.bridgeContract.methods.unlock(\n                {\n                  receiver: burnData.ethReceiver,\n                  token: burnData.token,\n                  amount: burnData.jettonAmount,\n                  tx: {\n                    address_hash: burnData.tx.address_.address_hash,\n                    tx_hash: burnData.tx.tx_hash,\n                    lt: burnData.tx.lt\n                  }\n                },\n              signatures,\n            )\n                .send({from: this.ethereumProvider.myAddress})\n                .on(\"transactionHash\", () => {\n                  this.state.toCurrencySent = true;\n                  this.isMintingInProgress = false;\n                  this.deleteState();\n                });\n      } catch (error) {\n        console.error(error);\n        this.isMintingInProgress = false;\n        return;\n      }\n\n      this.isMintingInProgress = false;\n\n      if (receipt.status) {\n        this.state.step = 5;\n        this.deleteState();\n      } else {\n        console.error(\"transaction fail\", receipt);\n      }\n    },\n    /**\n     * Pay mint jetton in TON Network\n     * Last action in transfer\n     */\n    async mintJetton(): Promise<void> {\n      if (this.isBurningInProgress) {\n        return;\n      }\n\n      if (!this.providerDataForJettons) return;\n\n      this.isBurningInProgress = true;\n\n      try {\n        await mintJetton({\n          tonWallet: this.providerDataForJettons.tonWallet,\n          queryId: this.state.queryId,\n          bridgeTonAddress: this.params.tonBridgeAddressV2\n        });\n        this.isBurningInProgress = false;\n      } catch (error) {\n        this.isBurningInProgress = false;\n\n        console.error(error);\n        this.resetState();\n      }\n    },\n    /**\n     * Burn jetton in TON network\n     * First step in transfer\n     */\n    async burnJetton(amountUnits: BN, jettonWalletAddress: Address): Promise<void> {\n      if (this.isBurningInProgress) {\n        return;\n      }\n\n      if (!this.providerDataForJettons) return;\n\n      this.isBurningInProgress = true;\n\n      try {\n        const destinationAddress = hexToBN(this.ethereumProvider.myAddress);\n        await burnJetton({\n          tonWallet: this.providerDataForJettons.tonWallet,\n          destinationAddress,\n          userTonAddress: this.providerDataForJettons.myAddreess,\n          jettonWalletAddress,\n          jettonAmountWithDecimals: amountUnits\n        });\n        this.isBurningInProgress = false;\n        this.saveState();\n      } catch (error) {\n        this.isBurningInProgress = false;\n\n        console.error(error);\n        this.resetState();\n      }\n    },\n    /**\n     * Prepare for Toncoin transfer\n     * Create wrappers for Ethereum and TON bridge smart contracts, get bridge configuration\n     */\n    async initProviderForToncoin(): Promise<ProviderDataForToncoin | null> {\n      if (!(await this.validateEthereumProvider())) {\n        return null;\n      }\n\n      const wtonContract = new this.ethereumProvider.web3!.eth.Contract(\n          WTON_BRIDGE as AbiItem[],\n          this.params.wTonAddress\n      );\n      const oraclesTotal = (\n          await wtonContract.methods.getFullOracleSet().call()\n      ).length;\n\n      if (!(oraclesTotal > 0)) {\n        return null;\n      }\n\n      const tonweb = new TonWeb(\n          new TonWeb.HttpProvider(this.params.tonCenterUrl, {\n            apiKey: this.params.tonCenterApiKey,\n          })\n      );\n\n      const bridgeData = (\n          await tonweb.provider.call(\n              this.params.tonBridgeAddress,\n              \"get_bridge_data\",\n              []\n          )\n      ).stack;\n\n      if (bridgeData.length !== 8) {\n        console.error(\"Invalid bridge data\", bridgeData);\n        return null;\n      }\n\n      // const stateFlags = getNumber(bridgeData[0]);\n      // const totalLocked = getNumber(bridgeData[1]);\n      // const collectorWc = getNumber(bridgeData[2]);\n      // const collectorAddr = bridgeData[3][1]; // string\n\n      const feeFlat = hexToBN(bridgeData[4][1]);\n      const feeNetwork = hexToBN(bridgeData[5][1]);\n      const feeFactor = hexToBN(bridgeData[6][1]);\n      const feeBase = hexToBN(bridgeData[7][1]);\n\n      const res: ProviderDataForToncoin = {\n        blockNumber: 0,\n        wtonContract,\n        tonweb,\n        oraclesTotal,\n        feeFlat: feeFlat.add(feeNetwork),\n        feeFactor,\n        feeBase,\n      };\n\n      return res;\n    },\n    /**\n     * Prepare for Token transfer\n     * Connect TON Extension\n     * Create wrappers for Ethereum and TON bridge smart contracts, get bridge configuration\n     */\n    async initProviderForJettons(): Promise<ProviderDataForJettons | null> {\n      if (!(await this.validateEthereumProvider())) {\n        return null;\n      }\n\n      const tonWallet = (window as any).ton;\n\n      if (!tonWallet) {\n        this.setAlert({\n          title: this.$t(\"errors.alertTitleError\"),\n          message: \"Please install TON Google Chrome Extension\",\n          buttonLabel: this.$t(\"errors.alertButtonClose\"),\n        });\n        return null;\n      }\n\n      const wallets =\n          (await tonWallet.send(\n              \"ton_requestWallets\",\n              []\n          )) as any;\n\n      const walletAddress = wallets[0].address;\n      console.log('wallet', walletAddress)\n      const userTonAddress = new TonWeb.Address(walletAddress);\n      if (userTonAddress.wc !== 0) {\n        this.setAlert({\n          title: this.$t(\"errors.alertTitleError\"),\n          message: \"Only basechain wallets supported\",\n          buttonLabel: this.$t(\"errors.alertButtonClose\"),\n        });\n        return;\n      }\n\n      const bridgeContract = new this.ethereumProvider.web3!.eth.Contract(\n          BRIDGE.abi as AbiItem[],\n          this.params.tonBridgeV2EVMAddress\n      );\n\n      const oraclesTotal = (await bridgeContract.methods.getFullOracleSet().call())\n          .length;\n\n      if (!(oraclesTotal > 0)) {\n        return null;\n      }\n\n      const tonweb = new TonWeb(\n          new TonWeb.HttpProvider(this.params.tonCenterUrl, {\n            apiKey: this.params.tonCenterApiKey,\n          })\n      );\n\n      const userTonBalance: string = await tonweb.provider.getBalance(walletAddress);\n      console.log('userTonBalance', userTonBalance.toString())\n      if (new BN(userTonBalance).lt(toNano(\"1\"))) {\n        this.setAlert({\n          title: this.$t(\"errors.alertTitleError\"),\n          message: \"You need at least 1 TON on wallet balance\",\n          buttonLabel: this.$t(\"errors.alertButtonClose\"),\n        });\n        return;\n      }\n\n      const res: ProviderDataForJettons = {\n        blockNumber: 0,\n        bridgeContract,\n        tonweb,\n        oraclesTotal,\n        myAddress: walletAddress,\n        tonWallet,\n      };\n\n      return res;\n    },\n    /**\n     * Start transfer\n     * Check that user has enough balance\n     * Toncoin TON->EVM - ask user to send Toncoins to bridge in TON network\n     * Toncoin EVM->TON - burn wrapped ERC-20 Toncoins in EVM network\n     * Tokens EVM->TON - lock ERC-20 token in EVM network\n     * Token TON->EVM - burn jetton in TON Network\n     */\n    async onTransferClick(): Promise<void> {\n      if (this.isInitInProgress) return;\n\n      if (!this.isInputsValid) return;\n\n      this.isInitInProgress = true;\n\n      // Prepare\n\n      if (!(await this.initProvider(this.isToncoinTransfer))) {\n        this.isInitInProgress = false;\n        return;\n      }\n\n      // Start transfer\n\n      if (this.isToncoinTransfer) {\n\n        // Check balances\n\n        if (!this.isFromTon) { // EVM->TON Toncoin Transfer, check that user have `amount` of ERC-20 wrapped toncoins before Burn\n          try {\n            const userErcBalance = new BN(\n                await this.providerDataForToncoin.wtonContract.methods\n                    .balanceOf(this.ethereumProvider.myAddress)\n                    .call()\n            );\n            if (toNano(this.amount).gt(userErcBalance)) {\n              this.$emit(\"error\", {\n                input: \"amount\",\n                message: this.$t(\"errors.toncoinBalance\", {\n                  coin: \"TONCOIN\",\n                  balance: fromNano(userErcBalance).toString(),\n                }),\n              });\n\n              this.isInitInProgress = false;\n              return;\n            }\n          } catch (e) {\n            console.error(e);\n            this.isInitInProgress = false;\n            return;\n          }\n        }\n        this.isInitInProgress = false;\n\n        // Go\n\n        this.state.createTime = Date.now();\n        this.state.step = 1;\n\n        if (this.isFromTon) {\n          this.saveState(); // ask user to send Toncoins to bridge in TON network\n        } else {\n          await this.burnWrappedToncoin(); // invoke Ethereum wallet to burn ERC-20 wrapped toncoins\n        }\n\n      } else { // Token transfer\n\n        // Check balances\n\n        let amountUnits: BN;\n        let jettonWalletAddress: Address;\n\n        if (!this.isFromTon) { // EVM->TON Token transfer, check that user have `amount` of ERC-20 tokens before Lock\n          try {\n            const erc20Contract = new ERC20Contract(this.ethereumProvider);\n            const decimals = await erc20Contract.decimals({\n              address: this.tokenAddress,\n            });\n            amountUnits = new BN(\n                parseUnits(this.amount, decimals).toString()\n            );\n            const balance = new BN(\n                (\n                    await erc20Contract.balanceOf({\n                      address: this.tokenAddress,\n                      account: this.ethereumProvider.myAddress,\n                    })\n                ).toString()\n            );\n            if (!balance.gte(amountUnits)) {\n              this.$emit(\"error\", {\n                input: \"amount\",\n                message: this.$t(\"errors.toncoinBalance\", {\n                  coin: this.tokenSymbol,\n                  balance: formatUnits(balance.toString(), decimals),\n                }),\n              });\n\n              this.isInitInProgress = false;\n              return;\n            }\n          } catch (e) {\n            console.error(e);\n            this.isInitInProgress = false;\n            return;\n          }\n        } else { // TON->EVM Token transfer, check that user have `amount` of Jettons before Burn\n\n          try {\n            jettonWalletAddress = await getJettonWalletAddress({\n              tonweb: this.providerDataForJettons.tonweb,\n              userTonAddress: new TonWeb.Address(this.providerDataForJettons.myAddress),\n              tokenAddress: this.tokenAddress,\n            });\n\n            const {decimals, tokenAddress: jettonEvmAddress} =\n                await getWrappedTokenData(\n                    this.providerDataForJettons.tonweb,\n                    this.tokenAddress\n                );\n            this.state.jettonEvmAddress = jettonEvmAddress;\n            console.log(\"myAddress\", this.providerDataForJettons.myAddress.toString())\n            console.log(\"decimals\", decimals.toString())\n            console.log(\"jettonEvmAddress\", jettonEvmAddress.toString())\n            console.log(\"jettonWalletAddress\", jettonWalletAddress.toString(true, true, true))\n\n            const balance = await getJettonWalletBalance(\n                this.providerDataForJettons.tonweb,\n                jettonWalletAddress!.toString(true, true, true)\n            );\n            console.log(\"balance\", balance.toString())\n\n            amountUnits = new BN(parseUnits(this.amount, decimals).toString());\n\n            if (!balance.gte(amountUnits)) {\n              this.$emit(\"error\", {\n                input: \"amount\",\n                message: this.$t(\"errors.toncoinBalance\", {\n                  coin: this.tokenSymbol,\n                  balance: formatUnits(balance.toString(), decimals),\n                }),\n              });\n\n              this.isInitInProgress = false;\n              return;\n            }\n          } catch (e) {\n            console.error(e);\n            this.isInitInProgress = false;\n            return;\n          }\n        }\n\n        this.isInitInProgress = false;\n\n        // Go\n\n        this.state.createTime = Date.now();\n        this.state.step = 1;\n\n        if (this.isFromTon) { // TON->EVM token transfer - Burn jettons\n          await this.burnJetton(amountUnits, jettonWalletAddress); // invoke TON wallet to burn jettons\n\n        } else { // EVM->TON token transfer - Lock ERC-20 Tokens\n          await this.lockToken(amountUnits); // invoke Ethereum wallet to lock ERC-20 tokens\n        }\n      }\n    },\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=77ff3138&scoped=true&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=77ff3138&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-77ff3138\"]])\n\nexport default __exports__","import { vModelDynamic as _vModelDynamic, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-78dd5646\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"disabled\", \"readonly\", \"type\", \"id\", \"inputmode\"]\nconst _hoisted_2 = { class: \"CustomInput-labelWrapper\" }\nconst _hoisted_3 = [\"for\"]\nconst _hoisted_4 = {\n  key: 0,\n  class: \"CustomInput-arrow\"\n}\nconst _hoisted_5 = {\n  key: 1,\n  class: \"CustomInput-dropdown\"\n}\nconst _hoisted_6 = [\"onClick\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"CustomInput\", { hasData: _ctx.hasData, disabled: _ctx.disabled, error: !!_ctx.error && _ctx.hasData, isDropdownOpened: _ctx.isDropdownOpened }])\n  }, [\n    _withDirectives(_createElementVNode(\"input\", {\n      disabled: _ctx.disabled,\n      readonly: _ctx.hasDropdown,\n      type: _ctx.type,\n      id: 'CustomInput-' + _ctx.$uuid.v1(),\n      inputmode: _ctx.type === 'number' ? 'decimal' : 'text',\n      onInput: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('changed'))),\n      onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.isDropdownOpened = true)),\n      onFocus: _cache[2] || (_cache[2] = ($event: any) => (_ctx.isDropdownOpened = true)),\n      onBlur: _cache[3] || (_cache[3] = ($event: any) => (_ctx.$emit('blur'))),\n      onFocusout: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.onInputFocusOut && _ctx.onInputFocusOut(...args))),\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.model) = $event))\n    }, null, 40, _hoisted_1), [\n      [_vModelDynamic, _ctx.model]\n    ]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"label\", {\n        for: 'CustomInput-' + _ctx.$uuid.v1()\n      }, _toDisplayString((_ctx.hasData && _ctx.error) || _ctx.label), 9, _hoisted_3)\n    ]),\n    (_ctx.hasDropdown)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4))\n      : _createCommentVNode(\"\", true),\n    (_ctx.hasDropdown)\n      ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_5, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.dropdown, (item, index) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n              _createElementVNode(\"button\", {\n                onClick: ($event: any) => (_ctx.onOptionClick(item.value))\n              }, _toDisplayString(item.label), 9, _hoisted_6)\n            ]))\n          }), 128))\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 2))\n}","\nimport { defineComponent, PropType } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    error: {\n      type: String,\n      default: \"\",\n    },\n    label: {\n      type: String,\n      required: true,\n    },\n    type: {\n      type: String,\n      required: true,\n    },\n    modelValue: {\n      type: String,\n      required: true,\n    },\n    dropdown: {\n      type: Array as PropType<{ label: string; value: string }[]>,\n      default: () => [],\n    },\n  },\n\n  data() {\n    return {\n      isDropdownOpened: false,\n    };\n  },\n\n  computed: {\n    hasData(): boolean {\n      return !!this.modelValue;\n    },\n    model: {\n      get(): string {\n        type Item = {\n          label: string;\n          value: string;\n        };\n        if (this.hasDropdown) {\n          const item: Item | undefined = (this.dropdown as Array<Item>).find(\n            (item: Item) => item.value === this.modelValue\n          );\n          return item?.label || \"\";\n        } else {\n          return this.modelValue;\n        }\n      },\n      set(value: string) {\n        this.$emit(\"update:modelValue\", value);\n      },\n    },\n    hasDropdown(): boolean {\n      return !!this.dropdown?.length;\n    },\n  },\n  methods: {\n    onOptionClick(value: string) {\n      this.model = value;\n      this.isDropdownOpened = false;\n    },\n    onInputFocusOut(e: FocusEvent) {\n      if (!this.hasDropdown) {\n        return;\n      }\n      let elem = e.relatedTarget as any;\n      for (; elem && elem !== document; elem = elem.parentNode) {\n        if (elem === this.$el) return;\n      }\n\n      this.isDropdownOpened = false;\n    },\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=78dd5646&scoped=true&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=78dd5646&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-78dd5646\"]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-b58b455e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"Footer\" }\nconst _hoisted_2 = {\n  href: \"https://github.com/ton-blockchain/token-bridge\",\n  target: \"_blank\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"footer\", _hoisted_1, [\n    _createTextVNode(\" v3.0.5, \"),\n    _createElementVNode(\"a\", _hoisted_2, _toDisplayString(_ctx.$t(\"sourceCode\")), 1),\n    _createTextVNode(\". \")\n  ]))\n}","\nimport {defineComponent} from \"vue\";\n\nexport default defineComponent({});\n","import { render } from \"./index.vue?vue&type=template&id=b58b455e&scoped=true&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=b58b455e&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b58b455e\"]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-34eef47e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"Header-testnet\"\n}\nconst _hoisted_2 = { class: \"Header-wrapper\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"Header-logoIcon\" }, null, -1))\nconst _hoisted_4 = { class: \"Header-logoLabel\" }\nconst _hoisted_5 = { class: \"Header-menu\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"Header-menuWrapper\"\n}\nconst _hoisted_7 = [\"data-icon\"]\nconst _hoisted_8 = { class: \"Header-menuList\" }\nconst _hoisted_9 = { \"data-id\": \"address\" }\nconst _hoisted_10 = { \"data-id\": \"disconnect\" }\nconst _hoisted_11 = [\"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"header\", {\n    class: _normalizeClass([\"Header\", { isScrolled: _ctx.isScrolled }])\n  }, [\n    (_ctx.isTestnet)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _toDisplayString(_ctx.$t(`testnetMessage`)), 1))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.isHistoryShown ? 'NuxtLink' : 'div'), {\n        to: _ctx.parentUrl,\n        class: _normalizeClass([\"Header-logo\", { isHistoryShown: _ctx.isHistoryShown }])\n      }, {\n        default: _withCtx(() => [\n          _hoisted_3,\n          _createElementVNode(\"span\", _hoisted_4, _toDisplayString(_ctx.$t(`logoLabel`)), 1)\n        ]),\n        _: 1\n      }, 8, [\"to\", \"class\"])),\n      _createElementVNode(\"div\", _hoisted_5, [\n        (_ctx.showMenu)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n              _createElementVNode(\"div\", {\n                class: \"Header-menuAddress\",\n                \"data-icon\": _ctx.ethereumProvider?.name\n              }, [\n                _createElementVNode(\"span\", null, _toDisplayString(_ctx.address), 1)\n              ], 8, _hoisted_7),\n              _createElementVNode(\"ul\", _hoisted_8, [\n                _createElementVNode(\"li\", _hoisted_9, [\n                  _createElementVNode(\"span\", null, _toDisplayString(_ctx.address), 1)\n                ]),\n                _createElementVNode(\"li\", _hoisted_10, [\n                  _createElementVNode(\"button\", {\n                    onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.onDisconnectClick && _ctx.onDisconnectClick(...args))),\n                    disabled: _ctx.disableDisconnect\n                  }, _toDisplayString(_ctx.$t(`disconnectWallet`)), 9, _hoisted_11)\n                ])\n              ])\n            ]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ])\n  ], 2))\n}","\nimport { defineComponent, PropType } from \"vue\";\n\nimport { PARAMS } from \"@/utils/constants\";\nimport { Provider } from \"@/utils/providers/provider\";\n\ntype ComponentData = {\n  isScrolled: boolean;\n};\n\nexport default defineComponent({\n  name: \"Header\",\n  props: {\n    isTestnet: {\n      type: Boolean,\n      default: false,\n    },\n    showMenu: {\n      type: Boolean,\n      required: true,\n    },\n    ethereumProvider: {\n      type: Object as PropType<Provider | null>,\n      required: true,\n    },\n    disableDisconnect: {\n      type: Boolean,\n      default: false,\n    },\n    isHistoryShown: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  data(): ComponentData {\n    return {\n      isScrolled: window.pageYOffset > 0,\n    };\n  },\n\n  computed: {\n    address(): string {\n      if (!this.ethereumProvider) {\n        return \"\";\n      }\n      return (\n        this.ethereumProvider.myAddress.slice(0, 6) +\n        \"…\" +\n        this.ethereumProvider.myAddress.slice(-4)\n      );\n    },\n    parentUrl(): string {\n      const { historyAddress, historyNetwork, ...query } = this.$route.query;\n      return this.generateUrlWithQuery(query);\n    },\n    historyUrl(): string {\n      if (!this.ethereumProvider || !this.ethereumProvider.myAddress) {\n        return \"\";\n      }\n\n      let network = \"\";\n      Object.keys(PARAMS.networks).forEach((netKey: string) => {\n        const net = PARAMS.networks[netKey as keyof typeof PARAMS.networks];\n        Object.keys(net).forEach((subnetKey: string) => {\n          const subnet = net[subnetKey as keyof typeof net];\n          if (subnet.chainId === this.ethereumProvider?.chainId) {\n            network = netKey;\n          }\n        });\n      });\n\n      const query = {\n        ...this.$route.query,\n        historyAddress: this.ethereumProvider.myAddress,\n        historyNetwork: network,\n      };\n      return this.generateUrlWithQuery(query);\n    },\n  },\n\n  created() {\n    window.addEventListener(\"scroll\", this.onScroll);\n  },\n\n  beforeDestroy() {\n    window.removeEventListener(\"scroll\", this.onScroll);\n  },\n\n  methods: {\n    generateUrlWithQuery(query: any): string {\n      const urlVars: string[] = Object.keys(query).map((key: string) => {\n        return key + \"=\" + encodeURIComponent(query[key]);\n      });\n      return this.$router\n        .resolve(\"/\" + (urlVars ? \"?\" + urlVars.join(\"&\") : \"\"))\n        .href.replace(\"bridge\", \"\"); // TODO in nuxt this.localePath\n    },\n    onScroll() {\n      this.isScrolled = window.pageYOffset > 0;\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n    onDisconnectClick() {\n      this.ethereumProvider?.disconnect();\n    },\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=34eef47e&scoped=true&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=34eef47e&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-34eef47e\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-137f0b1b\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"WalletsPopup-panel\" }\nconst _hoisted_2 = [\"onClick\"]\nconst _hoisted_3 = [\"data-icon\", \"disabled\"]\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"em\", null, null, -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_Transition, {\n    name: \"WalletsPopupTransition\",\n    appear: \"\"\n  }, {\n    default: _withCtx(() => [\n      _createElementVNode(\"aside\", {\n        class: _normalizeClass([\"WalletsPopup\", { isLoading: _ctx.isLoading }])\n      }, [\n        _createElementVNode(\"div\", {\n          class: \"WalletsPopup-overlay\",\n          onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.close && _ctx.close(...args)))\n        }),\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createElementVNode(\"ul\", null, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.providersList, (item) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: item,\n                onClick: ($event: any) => (_ctx.onProviderClick(item))\n              }, [\n                _createElementVNode(\"button\", {\n                  \"data-icon\": item,\n                  disabled: _ctx.isLoading,\n                  class: _normalizeClass({ showLoader: _ctx.isLoading && _ctx.loadingProviderName === item })\n                }, [\n                  _createTextVNode(_toDisplayString(_ctx.$t(`providers.${item}`)), 1),\n                  _hoisted_4\n                ], 10, _hoisted_3)\n              ], 8, _hoisted_2))\n            }), 128))\n          ]),\n          (!_ctx.uncancellable)\n            ? (_openBlock(), _createElementBlock(\"button\", {\n                key: 0,\n                class: \"WalletsPopup-panelClose\",\n                onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.close && _ctx.close(...args)))\n              }))\n            : _createCommentVNode(\"\", true)\n        ])\n      ], 2)\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from \"vue\";\n\nimport { Provider } from \"@/utils/providers/provider\";\n\nconst PROVIDERS = {\n  metamask: \"Metamask\",\n  // walletConnect: \"WalletConnect\",\n  // walletLink: \"WalletLink\",\n};\n\ntype ComponentData = {\n  isLoading: boolean;\n  loadingProviderName: string;\n};\n\nexport default defineComponent({\n  props: {\n    params: {\n      type: Object,\n      required: true,\n    },\n    uncancellable: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  data(): ComponentData {\n    return {\n      isLoading: false,\n      loadingProviderName: \"\",\n    };\n  },\n\n  computed: {\n    providersList(): string[] {\n      return Object.keys(PROVIDERS);\n    },\n  },\n\n  created() {\n    document.addEventListener(\"keydown\", this.onKeyDown);\n  },\n\n  beforeDestroy() {\n    document.removeEventListener(\"keydown\", this.onKeyDown);\n  },\n\n  methods: {\n    onKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === 27) {\n        this.close();\n      }\n    },\n    close() {\n      if (this.uncancellable) return;\n      if (this.isLoading) return;\n      this.$emit(\"cancel\");\n    },\n    async onProviderClick(providerName: string): Promise<void> {\n      if (this.isLoading) return;\n\n      this.isLoading = true;\n      this.loadingProviderName = providerName;\n\n      const providerComponentName: string =\n        PROVIDERS[providerName as keyof typeof PROVIDERS];\n      const ProviderComponent = await import(\n        `@/utils/providers/${providerName}/index`\n      );\n\n      try {\n        const provider = new ProviderComponent[\n          providerComponentName\n        ]() as Provider;\n\n        const result = await provider.connect({\n          rpcEndpoint: this.params.rpcEndpoint,\n          chainId: this.params.chainId,\n        });\n\n        this.isLoading = false;\n\n        if (!result) {\n          return;\n        }\n\n        this.$emit(\"wallet-connected\", provider);\n      } catch (e: any) {\n        const message = this.$te(e.message) ? this.$t(e.message) : e.message;\n        console.error(message);\n        alert(message);\n        this.isLoading = false;\n      }\n    },\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=137f0b1b&scoped=true&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=137f0b1b&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-137f0b1b\"]])\n\nexport default __exports__","\nimport BN from \"bn.js\";\nimport lodashDebounce from \"lodash.debounce\";\nimport TonWeb from \"tonweb\";\nimport {defineComponent, markRaw} from \"vue\";\nimport Web3 from \"web3\";\n\nimport BridgeProcessor from \"@/components/BridgeProcessor/index.vue\";\nimport CustomInput from \"@/components/CustomInput/index.vue\";\nimport Footer from \"@/components/Footer/index.vue\";\nimport Header from \"@/components/Header/index.vue\";\nimport WalletsPopup from \"@/components/WalletsPopup/index.vue\";\nimport {MINIMUM_TONCOIN_AMOUNT, PARAMS} from \"@/utils/constants\";\nimport {supportsLocalStorage} from \"@/utils/helpers\";\nimport {Provider} from \"@/utils/providers/provider\";\n\nimport {ComponentData} from \"./types\";\nimport {decToBN} from \"@/ton-bridge-lib/Paranoid\";\n\nconst PAIRS = [\"eth\", \"bsc\"];\nconst fromNano = TonWeb.utils.fromNano;\nconst toNano = TonWeb.utils.toNano;\n\nexport default defineComponent({\n  name: \"Bridge\",\n\n  components: {\n    BridgeProcessor,\n    WalletsPopup,\n    CustomInput,\n    Header,\n    Footer,\n  },\n\n  head(): object {\n    return {\n      title: this.$t(`networks.${this.pair}.pageTitle`),\n    };\n  },\n\n  data(): ComponentData {\n    return {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      getPairGasFee__debounced: () => {\n      },\n      gasPrice: 0,\n\n      isTestnet: false, // immutable parameter from url\n      isRecover: false, // immutable parameter from url\n      lt: 0, // immutable parameter from url\n      hash: \"\", // immutable parameter from url\n\n      isFromTon: true, // transfer direction - to-ton-network or from-ton-network\n      pair: \"eth\", // \"eth\" or \"bsc\"\n      token: \"ton\", // \"ton\" or \"otherTokens\"\n      amountInput: \"\", // float as string, \"\" if no value\n      toAddress: \"\", // Ethereum or TON to address\n      tokenAddress: \"\", // Ethereum or TON token address\n\n      tokenSymbol: \"TON\",\n\n      walletsPopupState: \"closed\",\n      ethereumProvider: null, // Ethereum provider\n      isEthereumWalletConnected: false, // ethereumProvider !== null\n      bridgeProcessorIsLoading: false, // from connect wallet to BridgeProcessor creation\n      isTransferInProgress: false,\n\n      errors: {\n        amount: \"\",\n        toAddress: \"\",\n        tokenAddress: \"\",\n      },\n    };\n  },\n\n  computed: {\n    isToncoinTransfer(): boolean {\n      return this.token === \"ton\";\n    },\n    isInputsValid(): boolean {\n      return !this.errors.amount && !this.errors.toAddress && (this.isToncoinTransfer || !this.errors.tokenAddress);\n    },\n    netTypeName(): string {\n      return this.isTestnet ? \"test\" : \"main\";\n    },\n    params(): ParamsNetwork {\n      const pairParams = PARAMS.networks[this.pair];\n      return pairParams[this.netTypeName as keyof typeof pairParams];\n    },\n    pairNetworkCoinUrl(): string {\n      const url = this.params.explorerUrl;\n      const address = this.params.wTonAddress;\n      return url.replace(\"<ADDRESS>\", address);\n    },\n    willReceive(): string {\n      if (this.bridgeFeeAmount.isZero()) {\n        return \"\";\n      }\n\n      if (this.isToncoinTransfer) {\n        const coin = this.$t(\n            `networks.${this.isFromTon ? this.pair : \"ton\"}.${\n                this.netTypeName\n            }.coin`\n        );\n        return this.$t(\"willReceive\", {\n          coin,\n          fee: fromNano(toNano(this.amountInput).sub(this.bridgeFeeAmount)),\n        });\n      } else {\n        return \"\";\n      }\n    },\n    pairFee(): string {\n      const n = this.gasPrice ? this.gasPrice / this.params.defaultGwei : 1;\n      const toncoinFee = this.isFromTon\n          ? this.params.toncoinTransferTo_gasPrice * n\n          : this.params.toncoinTransferFrom_gasPrice * n;\n\n      const tokenFee = this.isFromTon\n          ? this.params.tokenTransferTo_gasPrice * n\n          : this.params.tokenTransferFrom_gasPrice * n;\n\n      const fee = this.isToncoinTransfer ? toncoinFee : tokenFee;\n\n      return this.$t(`networks.${this.pair}.gasFee`, {\n        fee: fee.toFixed(4),\n      });\n    },\n    bridgeFeeAmount(): BN { // in nanoton\n\n      if (this.isToncoinTransfer) {\n        let amount = undefined;\n        try {\n          amount = toNano(this.amountInput);\n        } catch (e) {\n        }\n        if (amount === undefined) {\n          return new BN(0);\n        }\n        if (amount.lt(MINIMUM_TONCOIN_AMOUNT)) {\n          return new BN(0);\n        } else {\n          const feeFlat = toNano('5');\n          const feeFactor = decToBN('25');\n          const feeBase = decToBN('10000');\n          const rest = amount.sub(feeFlat);\n          const percentFee = rest\n              .mul(feeFactor)\n              .div(feeBase);\n          return feeFlat.add(percentFee);\n        }\n      } else { // token transfer - fixed 1 TON fee\n        return toNano(\"1\");\n      }\n    },\n    bridgeFee(): string {\n      if (this.token === 'ton') {\n        if (this.bridgeFeeAmount.isZero()) {\n          return this.$t(\"bridgeFeeBelow10\");\n        } else {\n          return this.$t(\"bridgeFeeAbove10\", {\n            fee: fromNano(this.bridgeFeeAmount),\n          });\n        }\n      } else {\n        return this.$t(\"tokenBridgeFee\")\n      }\n    },\n    fromPairs(): string[] {\n      return [\"ton\", ...PAIRS];\n    },\n    toPairs(): string[] {\n      return [this.pair, ...PAIRS.filter((i) => i !== this.pair), \"ton\"];\n    },\n    isPairsBlocked(): boolean {\n      return this.isTransferInProgress;\n    },\n    isInputsBlocked(): boolean {\n      return this.isTransferInProgress;\n    },\n  },\n\n  watch: {\n    isFromTon(newVal: boolean, oldVal: boolean) {\n      this.getPairGasFee__debounced();\n\n      if (newVal !== oldVal) {\n        this.checkInputs();\n      }\n    },\n    async pair(newVal: string, oldVal: string): Promise<void> {\n      this.getPairGasFee__debounced();\n\n      if (newVal !== oldVal) {\n        this.checkInputs();\n      }\n\n      // if (newVal !== oldVal && this.isEthereumWalletConnected && this.ethereumProvider) {\n      //   const isChanged = await this.ethereumProvider.switchChain(this.params.chainId);\n      //   if (!isChanged) {\n      //     this.pair = oldVal;\n      //   }\n      // }\n    },\n  },\n\n  created() {\n    this.getPairGasFee__debounced = lodashDebounce(this.getPairGasFee, 100);\n\n    // Get params from url in case of recovery\n\n    if (this.$route.query.testnet) {\n      this.isTestnet =\n          this.$route.query.testnet.toString().toLowerCase() === \"true\";\n    }\n    if (this.$route.query.recover || this.$route.query.recovery) {\n      const isRecover =\n          (this.$route.query.recover?.toString() || \"\").toLowerCase() === \"true\";\n      const isRecovery =\n          (this.$route.query.recovery?.toString() || \"\").toLowerCase() === \"true\";\n      this.isRecover = isRecover || isRecovery;\n    }\n    if (this.$route.query.lt) {\n      const lt = parseInt(this.$route.query.lt.toString(), 10);\n      this.lt = !lt || isNaN(lt) ? 0 : lt;\n    }\n    if (this.$route.query.hash) {\n      this.hash = this.$route.query.hash.toString();\n    }\n    if (this.$route.query.amount) {\n      try {\n        this.amountInput = this.$route.query.amount.toString();\n      } catch (e) {\n        this.amountInput = \"\"; // for empty string inside input\n      }\n    }\n    if (this.$route.query.toAddress) {\n      this.toAddress = this.$route.query.toAddress.toString();\n    }\n    if (this.$route.query.fromNetwork && this.$route.query.toNetwork) {\n      const fromNetwork = this.$route.query.fromNetwork\n          .toString()\n          .toLowerCase();\n      const toNetwork = this.$route.query.toNetwork.toString().toLowerCase();\n\n      if (fromNetwork === \"ton\" && PAIRS.includes(toNetwork)) {\n        this.isFromTon = true;\n        this.pair = toNetwork;\n      }\n\n      if (toNetwork === \"ton\" && PAIRS.includes(fromNetwork)) {\n        this.isFromTon = false;\n        this.pair = fromNetwork;\n      }\n    }\n    if (this.$route.query.token) {\n      const t = this.$route.query.token.toString().toLowerCase();\n      if (t === 'ton') {\n        this.token = 'ton';\n        this.tokenAddress = '';\n      } else {\n        this.token = 'otherTokens';\n        this.tokenAddress = t;\n      }\n    }\n  },\n\n  mounted() {\n    this.getPairGasFee__debounced();\n    this.loadStateBridge();\n    this.checkInputs();\n\n    this.$watch(\n        () => [this.tokenAddress, this.token, this.isFromTon],\n        ([newTokenAddress, newToken]) => {\n          if (newToken === \"ton\") {\n            this.tokenSymbol = \"TON\";\n          } else {\n            this.tokenSymbol = \"\";\n          }\n        }\n    );\n  },\n\n  methods: {\n    checkInputs() {\n      this.errors.tokenAddress = \"\";\n      this.errors.amount = \"\";\n      this.errors.toAddress = \"\";\n\n      // check tokenAddress input\n\n      if (this.isFromTon) {\n        if (!TonWeb.utils.Address.isValid(this.tokenAddress)) {\n          this.errors.tokenAddress = this.$t(\n              `networks.ton.errors.invalidAddress`\n          );\n        }\n      } else {\n        if (!Web3.utils.isAddress(this.tokenAddress)) {\n          this.errors.tokenAddress = this.$t(\n              `networks.${this.pair}.errors.invalidAddress`\n          );\n        }\n\n        if (this.tokenAddress.toLowerCase() === this.params.wTonAddress.toLowerCase()) {\n          this.errors.tokenAddress = this.$t(\n              `networks.${this.pair}.errors.invalidAddress`\n          );\n        }\n      }\n\n      // check amount input\n\n      if (this.token === \"ton\") {\n        let amount = undefined;\n        try {\n          amount = toNano(this.amountInput);\n        } catch (e) {\n          this.errors.amount = this.$t(\"errors.notValidAmount\");\n        }\n\n        if (amount !== undefined && amount.lt(MINIMUM_TONCOIN_AMOUNT)) {\n          this.errors.amount = this.$t(\"errors.amountBelow10\");\n        }\n      } else {\n        let amount = undefined;\n        try {\n          if (this.amountInput.trim().startsWith('0x')) throw new Error();\n          amount = Number(this.amountInput);\n          if (isNaN(amount)) throw new Error();\n        } catch (e) {\n          this.errors.amount = this.$t(\"errors.notValidAmount\");\n        }\n\n        if (amount !== undefined && amount <= 0) {\n          this.errors.amount = this.$t(\"errors.notValidAmount\");\n        }\n      }\n\n      // check toAddress input\n\n      if (this.isFromTon) {\n        if (!Web3.utils.isAddress(this.toAddress)) {\n          this.errors.toAddress = this.$t(\n              `networks.${this.pair}.errors.invalidAddress`\n          );\n        }\n      } else {\n        if (!TonWeb.utils.Address.isValid(this.toAddress)) {\n          this.errors.toAddress = this.$t(`networks.ton.errors.invalidAddress`);\n        }\n      }\n\n      if (\n          this.toAddress.toLowerCase() === this.params.wTonAddress.toLowerCase() ||\n          this.toAddress.toLowerCase() === this.params.tonBridgeAddress.toLowerCase() ||\n          this.toAddress.toLowerCase() === this.params.tonBridgeV2EVMAddress.toLowerCase() ||\n          this.toAddress.toLowerCase() === this.params.tonBridgeAddressV2.toLowerCase() ||\n          (this.tokenAddress && this.toAddress.toLowerCase() === this.tokenAddress.toLowerCase())\n      ) {\n        this.errors.toAddress = this.$t(\"errors.needPersonalAddress\");\n      }\n    },\n    onPairClick(switchDirection: boolean, toPair: string) {\n      if (this.isPairsBlocked) {\n        return;\n      }\n      if (switchDirection) {\n        this.isFromTon = !this.isFromTon;\n      }\n      this.pair = toPair;\n    },\n    toggleFromTon() {\n      if (this.isPairsBlocked) {\n        return;\n      }\n      this.isFromTon = !this.isFromTon;\n    },\n    resetState() {\n      this.isRecover = false;\n      this.lt = 0;\n      this.hash = \"\";\n      this.tokenAddress = \"\";\n      this.amountInput = \"\"; //to reset inside input directly\n      this.toAddress = \"\";\n    },\n    loadStateBridge() {\n      if (!supportsLocalStorage()) {\n        return;\n      }\n\n      const raw = localStorage.getItem(\"bridgeState\");\n\n      if (raw) {\n        let state: any;\n        try {\n          state = JSON.parse(raw);\n        } catch (e) {\n          return;\n        }\n\n        this.amountInput = state.amount;\n        this.toAddress = state.toAddress;\n        this.pair = state.pair;\n        this.isFromTon = state.isFromTon;\n        this.token = state.token;\n        this.tokenAddress = state.tokenAddress;\n\n        this.isTransferInProgress = true;\n      }\n    },\n    loadStateProcessor() {\n      if (!supportsLocalStorage()) {\n        return;\n      }\n\n      const raw = localStorage.getItem(\"bridgeState\");\n\n      if (raw) {\n        let state: any;\n        try {\n          state = JSON.parse(raw);\n        } catch (e) {\n          return;\n        }\n\n        console.log(\"loadState\");\n        // TODO vuex\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        this.$refs.bridgeProcessor.loadState(state);\n      }\n    },\n    saveState(processingState: any) {\n      if (!supportsLocalStorage()) {\n        return;\n      }\n\n      const state = {\n        amount: this.amountInput,\n        toAddress: this.toAddress,\n        pair: this.pair,\n        isFromTon: this.isFromTon,\n        token: this.token,\n        tokenAddress: this.tokenAddress,\n        processingState: processingState,\n      };\n\n      localStorage.setItem(\"bridgeState\", JSON.stringify(state));\n    },\n    deleteState() {\n      if (!supportsLocalStorage()) {\n        return;\n      }\n\n      localStorage.removeItem(\"bridgeState\");\n    },\n    onTransferInProgress(isActive: boolean) {\n      this.isTransferInProgress = isActive;\n      this.checkInputs();\n    },\n    async getPairGasFee(): Promise<void> {\n      let data;\n      let gasPrice = 0;\n\n      try {\n        const response = await fetch(this.params.getGasUrl, {\n          method: \"GET\",\n          cache: \"no-store\",\n        });\n\n        if (!response.ok) {\n          throw new Error(`An error has occured: ${response.status}`);\n        }\n\n        data = await response.json();\n      } catch (e) {\n        this.gasPrice = 0;\n        return;\n      }\n\n      if (this.pair === \"eth\") {\n        gasPrice = parseFloat(data.average) / 10;\n      }\n\n      if (this.pair === \"bsc\") {\n        gasPrice = parseFloat(data.result.SafeGasPrice);\n      }\n\n      this.gasPrice = gasPrice > 0 ? gasPrice : this.params.defaultGwei;\n    },\n    onWalletConnected(ethereumProvider: Provider) {\n      this.ethereumProvider = markRaw(ethereumProvider) as any;\n      // TODO vuex\n      this.bridgeProcessorIsLoading = !this.$refs.bridgeProcessor;\n      this.isEthereumWalletConnected = true;\n      this.walletsPopupState = \"closed\";\n      (this.$refs?.bridgeProcessor as any)?.onTokenChange(this.token);\n\n      this.ethereumProvider!.on(\"disconnect\", () => {\n        if (this.isTransferInProgress) {\n          this.walletsPopupState = \"opened-uncancellable\";\n        } else {\n          this.ethereumProvider = null;\n          this.isEthereumWalletConnected = false;\n          this.bridgeProcessorIsLoading = false;\n        }\n      });\n    },\n    onBridgeProcessorReady() {\n      this.loadStateProcessor();\n      this.bridgeProcessorIsLoading = false;\n    },\n    onBridgeTransferError(params: { input: string; message: string }) {\n      if (params.input === \"amount\") {\n        this.errors.amount = params.message;\n      }\n      if (params.input === \"toAddress\") {\n        this.errors.toAddress = params.message;\n      }\n    },\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=809c3372&scoped=true&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=809c3372&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/tolya/dev/ton/bridge/token-bridge/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-809c3372\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from \"vue-router\";\n\nimport BridgePageVue from \"@/views/BridgePage/index.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"Bridge\",\n    component: BridgePageVue,\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\nexport default router;\n","import { createStore } from \"vuex\";\n\nexport default createStore({\n  state: () => ({ alert: null }),\n  mutations: {\n    setAlert(state, payload) {\n      state.alert = payload;\n    },\n  },\n  getters: {\n    alert(state) {\n      return state.alert;\n    },\n  },\n  actions: {},\n});\n","import \"@/assets/styles/reboot.css\";\nimport \"@/assets/styles/global.less\";\n\nimport { createApp } from \"vue\";\nimport UUID from \"vue-uuid\";\n\nimport App from \"./App.vue\";\nimport i18n from \"./i18n\";\nimport router from \"./router\";\nimport store from \"./store\";\n\ncreateApp(App).use(UUID).use(i18n).use(store).use(router).mount(\"#app\");\n","import TonWeb from \"tonweb\";\n\nexport const MINIMUM_TONCOIN_AMOUNT = TonWeb.utils.toNano('10');\n\nexport const PARAMS: Params = {\n  appName: \"TON Bridge\",\n  appLogoUrl: \"https://ton.org/bridge/favicon.ico\",\n  tonTransferUrl:\n    \"ton://transfer/<BRIDGE_ADDRESS>?amount=<AMOUNT>&text=swapTo%23<TO_ADDRESS>\",\n  tonExplorerUrl: {\n    main: \"https://tonscan.org/address/<ADDRESS>\",\n    test: \"https://testnet.tonscan.org/address/<ADDRESS>\",\n  },\n  networks: {\n    eth: {\n      main: {\n        getGasUrl: \"https://ethereumgas.toncenter.com\",\n        explorerUrl: \"https://etherscan.io/token/<ADDRESS>\",\n        wTonAddress: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n        tonBridgeAddress: \"Ef_dJMSh8riPi3BTUTtcxsWjG8RLKnLctNjAM4rw8NN-xWdr\",\n        tonCollectorAddress: \"EQCuzvIOXLjH2tv35gY4tzhIvXCqZWDuK9kUhFGXKLImgxT5\",\n        tonMultisigAddress: \"kf87m7_QrVM4uXAPCDM4DuF9Rj5Rwa5nHubwiQG96JmyAo-S\",\n        tonBridgeAddressV2: \"Ef-1JetbPF9ubc1ga-57oHoOyDA1IShJt-BVlJnA9rrVTfrB\",\n        tonBridgeV2EVMAddress: \"0xb323692b6d4DB96af1f52E4499a2bd0Ded9af3C5\",\n        tonCollectorAddressV2: \"EQDF6fj6ydJJX_ArwxINjP-0H8zx982W4XgbkKzGvceUWvXl\",\n        tonMultisigAddressV2: \"Ef8hHxV0v2I9FHh3CMX91WXjKaJav6SQlemEQm8ZvPBJdLde\",\n        tonCenterUrl: \"https://toncenter.com/api/v2/jsonRPC\",\n        tonCenterApiKey:\n          \"d843619b379084d133f061606beecbf72ae2bf60e0622e808f2a3f631673599b\",\n        rpcEndpoint:\n          \"https://mainnet.infura.io/v3/d29ee9db9b7b4bbc8fa5d28047a3ff47\",\n        chainId: 1,\n        blocksConfirmations: 12,\n        defaultGwei: 25,\n        toncoinTransferTo_gasPrice: 0.004,\n        toncoinTransferFrom_gasPrice: 0.001,\n        tokenTransferTo_gasPrice: 0.008,\n        tokenTransferFrom_gasPrice: 0.002,\n      },\n      test: {\n        getGasUrl: \"https://ethereumgas.toncenter.com\",\n        explorerUrl: \"https://goerli.etherscan.io/token/<ADDRESS>\",\n        wTonAddress: \"0xDB15ffaf2c88F2d89Db9365a5160D5b8c9448Ea6\",\n        tonBridgeAddress: \"Ef-56ZiqKUbtp_Ax2Qg4Vwh7yXXJCO8cNJAb229J6XXe4-aC\",\n        tonCollectorAddress: \"EQCA1W_I267-luVo9CzV7iCcrA1OO5vVeXD0QHACvBn1jIVU\",\n        tonMultisigAddress: \"kf-OV1dpgFVEzEmyvAETT8gnhqZ1IqHn8RzT6dmEmvnze-9n\",\n        tonBridgeV2EVMAddress: \"0x4Efd8f04B6fb4CFAF0cfaAC11Fb489b97DBebB60\",\n        tonBridgeAddressV2: \"Ef-lJBALjXSSwSKiedKzriSHixwQUxJ1BxTE05Ur5AXwZVjp\",\n        tonCollectorAddressV2:\n          \"EQC1ZeKX1LNrlQ4bwi3je3KVM1AoZ3rkeyHM5hv9pYzmIh4v\",\n        tonMultisigAddressV2:\n          \"kf9NLH8CsGUkEKGYzCxaLd9Th6T5YkO-MXsCEU9Rw1fiRhf9\",\n        tonCenterUrl: \"https://testnet.toncenter.com/api/v2/jsonRPC\",\n        tonCenterApiKey:\n          \"d843619b379084d133f061606beecbf72ae2bf60e0622e808f2a3f631673599b\",\n        rpcEndpoint:\n          \"https://goerli.infura.io/v3/1f24ea6b55e9432d993a9c0ff68eeee5\",\n        chainId: 5,\n        blocksConfirmations: 12,\n        defaultGwei: 25,\n        toncoinTransferTo_gasPrice: 0.004,\n        toncoinTransferFrom_gasPrice: 0.001,\n        tokenTransferTo_gasPrice: 0.008,\n        tokenTransferFrom_gasPrice: 0.002,\n      },\n    },\n    bsc: {\n      main: {\n        getGasUrl:\n          \"https://gbsc.blockscan.com/gasapi.ashx?apikey=key&method=gasoracle\",\n        explorerUrl: \"https://bscscan.com/token/<ADDRESS>\",\n        wTonAddress: \"0x76A797A59Ba2C17726896976B7B3747BfD1d220f\",\n        tonBridgeAddress: \"Ef9NXAIQs12t2qIZ-sRZ26D977H65Ol6DQeXc5_gUNaUys5r\",\n        tonCollectorAddress: \"EQAHI1vGuw7d4WG-CtfDrWqEPNtmUuKjKFEFeJmZaqqfWTvW\",\n        tonMultisigAddress: \"kf8OvX_5ynDgbp4iqJIvWudSEanWo0qAlOjhWHtga9u2Yo7j\",\n        tonBridgeV2EVMAddress: \"\",\n        tonBridgeAddressV2: \"\",\n        tonCollectorAddressV2: \"\",\n        tonMultisigAddressV2: \"\",\n        tonCenterUrl: \"https://toncenter.com/api/v2/jsonRPC\",\n        tonCenterApiKey:\n          \"d843619b379084d133f061606beecbf72ae2bf60e0622e808f2a3f631673599b\",\n        rpcEndpoint: \"https://bsc-dataseed.binance.org/\",\n        chainId: 56,\n        blocksConfirmations: 12,\n        defaultGwei: 5,\n        toncoinTransferTo_gasPrice: 0.0008,\n        toncoinTransferFrom_gasPrice: 0.0002,\n        tokenTransferTo_gasPrice: 0.0016,\n        tokenTransferFrom_gasPrice: 0.0004,\n      },\n      test: {\n        getGasUrl:\n          \"https://gbsc.blockscan.com/gasapi.ashx?apikey=key&method=gasoracle\",\n        explorerUrl: \"https://testnet.bscscan.com/token/<ADDRESS>\",\n        wTonAddress: \"0xdb15ffaf2c88f2d89db9365a5160d5b8c9448ea6\",\n        tonBridgeAddress: \"Ef_GmJntTDokxfhLGF1jRvMGC8Jav2V5keoNj4El2jzhHsID\",\n        tonCollectorAddress: \"EQDBNfV4DQzSyzNMw6BCTSZSoUi-CzWcYNsfhKxoDqfrwFtS\",\n        tonMultisigAddress: \"kf83VnnXuaqQV1Ts2qvUr6agacM0ydOux5NNa1mcU-cEO693\",\n        tonBridgeV2EVMAddress: \"0x501f187829Be89Fd84334aB402a99c626c8c7B65\",\n        tonBridgeAddressV2: \"Ef-QhQLNRndggmLKXzFzA-F51rnjZ5yWY3ww2JjcHjEDohCg\",\n        tonCollectorAddressV2:\n          \"EQDTtD0leOd2aRtfX8sVwhdIpgoO1kvYj2iiBpbOMBgmi_I7\",\n        tonMultisigAddressV2:\n          \"kf8n7jRSwkvkKoqlt8YGyQ93IivUp52j6oIlleVsuKS2NYnr\",\n        tonCenterUrl: \"https://testnet.toncenter.com/api/v2/jsonRPC\",\n        tonCenterApiKey:\n          \"52993043eb68ddd4dfee9f0f6a2a5d341226c7b5c77c4ae7758c158d6c7e00c4\",\n        rpcEndpoint: \"https://data-seed-prebsc-1-s1.binance.org:8545/\",\n        chainId: 97,\n        blocksConfirmations: 12,\n        defaultGwei: 5,\n        toncoinTransferTo_gasPrice: 0.0008,\n        toncoinTransferFrom_gasPrice: 0.0002,\n        tokenTransferTo_gasPrice: 0.0016,\n        tokenTransferFrom_gasPrice: 0.0004,\n      },\n    },\n  },\n};\n","function getScript(src: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const script: HTMLScriptElement = document.createElement(\"script\");\n    const prior = document.getElementsByTagName(\"script\")[0];\n    script.async = true;\n\n    script.onload = () => {\n      script.onload = null;\n      script.onerror = null;\n      setTimeout(resolve, 0);\n    };\n\n    script.onerror = () => {\n      script.onload = null;\n      script.onerror = null;\n      setTimeout(reject, 0);\n    };\n\n    script.src = src;\n    prior.parentNode!.insertBefore(script, prior);\n  });\n}\n\nfunction supportsLocalStorage(): boolean {\n  try {\n    return \"localStorage\" in window && window[\"localStorage\"] !== null;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction parseChainId(chainId: string | number): number {\n  if (typeof chainId === \"number\") {\n    return chainId;\n  }\n  if (typeof chainId === \"string\") {\n    return parseInt(chainId, chainId.toLowerCase().startsWith(\"0x\") ? 16 : 10);\n  } else {\n    return 0;\n  }\n}\n\nexport {\n  getScript,\n  parseChainId,\n  supportsLocalStorage\n};\n","var map = {\n\t\"./metamask/index\": [\n\t\t15517,\n\t\t517\n\t],\n\t\"./walletConnect/index\": [\n\t\t84528,\n\t\t528\n\t],\n\t\"./walletLink/index\": [\n\t\t41686,\n\t\t686\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 38988;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"517\":\"8292d9ca\",\"528\":\"2aa903d0\",\"686\":\"3041e2d3\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"ton-token-bridge:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/token-bridge/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkton_token_bridge\"] = self[\"webpackChunkton_token_bridge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(8346); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_router_view","_resolveComponent","_component_layout","_openBlock","_createBlock","default","_withCtx","_createVNode","_","_hoisted_1","class","_component_Alert","_createElementBlock","_renderSlot","$slots","undefined","alert","key","title","message","buttonLabel","onClose","$event","setAlert","_createCommentVNode","_hoisted_2","_Transition","name","appear","_createElementVNode","onClick","args","close","_toDisplayString","defineComponent","props","type","String","required","created","document","addEventListener","this","onKeyDown","beforeUnmount","removeEventListener","methods","e","keyCode","$emit","__exports__","components","Alert","mapMutations","computed","mapGetters","mounted","documentElement","classList","add","primaryInput","watch","newVal","Layout","ctx","normalize","_normalize","interpolate","_interpolate","named","_named","createI18n","legacy","locale","navigator","language","split","process","fallbackLocale","messages","en","ru","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_component_Header","_component_CustomInput","_component_BridgeProcessor","_component_Footer","_component_WalletsPopup","isTestnet","isEthereumWalletConnected","walletsPopupState","ethereumProvider","isTransferInProgress","_normalizeClass","isFromTon","disabled","isPairsBlocked","_createTextVNode","$t","netTypeName","left","right","_Fragment","_renderList","fromPairs","item","index","onPairClick","token","toggleFromTon","pair","toPairs","href","pairNetworkCoinUrl","target","isInputsBlocked","label","dropdown","value","modelValue","isToncoinTransfer","network","toUpperCase","error","errors","tokenAddress","onChanged","onBlur","checkInputs","tokenSymbol","amount","amountInput","toAddress","_withDirectives","willReceive","_vShow","bridgeProcessorIsLoading","ref","isRecover","lt","hash","isInputsValid","onTransferInProgress","onStateChanged","getPairGasFee__debounced","onResetState","resetState","onSaveState","saveState","onDeleteState","deleteState","onReady","onBridgeProcessorReady","onError","onBridgeTransferError","pairFee","bridgeFee","params","uncancellable","onWalletConnected","onCancel","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","state","step","hasApprove","showLoader","isInitInProgress","isBurningInProgress","isLockingInProgress","onTransferClick","isApprovingInProgress","onApproveClick","isCancelButtonVisible","onCancelClick","none","pending","done","getStepInfoText1","isOnlyText","text","send1","onCopyClick","amountReadable","send2","withComment","comment","openWalletUrl","openWalletLabel","isQRCodeShown","generateQRCode","scanQRCode","getStepInfoText2","getStepInfoText3","getStepInfoText4","isMintToncoinButtonVisible","isMintingInProgress","mint","coin","toCoin","isDoneButtonVisible","onDoneClick","checkNull","a","Error","isNaN","removeHexPrefix","hex","startsWith","substring","indexOf","bytesToHex","bytes","Buffer","from","toString","b","TonWeb","bytesToBase64","base64ToBytes","base64","Uint8Array","join","checkBN","bn","bigInt","decToBN","dec","BigInt","hexToBN","decToHex","hexToDec","calculateQueryId","timeout","queryId","mul","calculateToncoinFee","feeFlat","feeFactor","feeBase","rest","sub","percentFee","div","_feeFlat","_feeFactor","_feeBase","_rest","_percentFee","readIntFromBitString","bs","cursor","bits","i","get","parseAddress","cell","hashPart","s","padStart","async","getJettonWalletBalance","tonweb","jettonWalletAddress","jettonWalletData","provider","call2","balance","result","exit_code","getWrappedTokenData","wrappedTokenData","chainId","decimals","getJettonWalletAddress","userTonAddress","writeAddress","getWalletAddressResponse","toBoc","burnJetton","tonWallet","destinationAddress","jettonAmountWithDecimals","burnOP","burnPayload","writeUint","customPayload","writeCoins","writeBit","refs","push","send","to","data","dataType","mintJetton","bridgeTonAddress","mintOP","mintPayload","timeout1","timeout2","triggerClass","className","remove","clearTimeout","setTimeout","clipboard","writeText","innerText","then","getNumber","parseInt","findLogOutMsg","outMessages","outMsg","destination","getRawMessageBytes","logMsg","endsWith","substr","length","getTextMessageBytes","msg_data","textBytes","set","getMessageBytes","msgType","console","makeAddress","address","checkV","v","parseEvmSignature","tuple","elements","publicKey","number","rsv","r","Number","getEvmSignaturesFromCollector","tonCollectorAddress","voteId","intVoteId","log","call","list","stack","status","signatures","map","prepareEthSignatures","signature","signer","ethers","sort","cmp","Web3","MULTISIG_QUERY_TIMEOUT","getQueryId","evmTransaction","VERSION","blockTime","getLegacyQueryString","str","strArr","blockHash","transactionHash","logIndex","ERC20Contract","constructor","_getContract","Object","keys","contracts","includes","_registerContract","contract","Contract","ERC20","symbol","balanceOf","account","allowance","owner","spender","approve","connect","getSigner","BLOCK_CONFIRMATIONS_COUNT","parseField","field","x","parseEvmTxHash","toLowerCase","parseEvmBlockHash","parseEvmAddress","parseNumber","parseTonAddress","slice","parseWc","parseDecimals","parseBN","lte","BURN_INPUT_LENGTH","BURN_INPUT_PREFIX","ToncoinBridge","static","web3","d","receiver","tx","address_","workchain","address_hash","tx_hash","eth","abi","encodeParameters","setHash","addresses","newBurnStatus","nonce","ethToTon","payload","writeInt","addressHash","logs","count","topics","decoded","decodeParameters","wtonAddress","isError","txreceipt_status","input","confirmations","receipt","currentBlockNumber","blockNumber","transactionIndex","decodedInput","findLog","rawData","t","out_msgs","amountHex","senderAddress","in_msg","source","msgText","TextDecoder","decode","addressFromInMsg","amountFromInMsg","amountFromInMsgAfterFee","getFeeAmount","eq","wc","transaction_id","time","utime","LOCK_INPUT_LENGTH","LOCK_INPUT_PREFIX","lockEventDataTypes","TokenBridge","event","ethReceiver","jettonAmount","newLockStatus","lockEvent","to_address_hash","createWrappedTokenData","bridgeAddress","lockInputTypes","inputData","finalAmount","userSenderAddressHex","minterSenderAddress","jettonMinterAddress","queryIdHex","userSenderAddress","getVotesInMultisig","tonMultisigAddress","oraclesTotal","arr","fromNano","toNano","Boolean","updateStateIntervalForToncoin","updateStateIntervalForJettons","providerDataForToncoin","providerDataForJettons","swapId","jettonEvmAddress","fromCurrencySent","toCurrencySent","votes","swapData","burnData","createTime","pairParams","PARAMS","fromCoin","url","tonBridgeAddress","replace","providerData","blocksConfirmations","Math","max","min","getOraclesText","getGetCoinsText","immediate","handler","val","newValue","onTokenChange","$watch","debounce","newAmount","checkAllowance","beforeDestroy","clearInterval","mintWrappedToncoin","unlockToken","updateStateForToncoin","setInterval","updateStateForJettons","oraclesStep","votesConfirmations","getCoinsStep","toCoins","toNetwork","options","width","window","devicePixelRatio","height","image","require","dotsOptions","color","cornersSquareOptions","cornersDotOptions","imageOptions","hideBackgroundDots","crossOrigin","imageSize","qrOptions","errorCorrectionLevel","qrCode","QRCodeStyling","append","$refs","qrcode","initProviderForToncoin","initProviderForJettons","processingState","initProvider","assign","swap","getSwapForToncoin","getSwapTonToEthIdForToncoin","getBlockNumber","getTransactionReceipt","block","getBlock","timestamp","getEthVoteForToncoin","getTonVoteForToncoin","burn","getSwapForJettons","getSwapTonToEthIdForJettons","getEthVoteForJettons","isPaid","isJettonMintPaid","getTonVoteForJettons","wTonAddress","getDataId","tonBridgeV2EVMAddress","getFeeAmountForToncoin","myAmount","myToAddress","myCreateTime","amountAfterFee","specifiedTransaction","transactions","getTransactions","limit","processTonTransaction","JSON","stringify","BN","tonBridgeAddressV2","processPayJettonMintTransaction","toLocaleLowerCase","tonCollectorAddressV2","tonMultisigAddressV2","isConnected","myAddress","getBalance","gt","unlockSignatures","bridgeContract","voteForSwitchLock","validateEthereumProvider","wtonContract","voteForMinting","on","fromAddress","amountUnits","addressTon","erc20Contract","parseUnits","allowanceUnits","gte","maxAmount","MaxInt256","wait","lock","unlock","myAddreess","WTON_BRIDGE","getFullOracleSet","tonCenterUrl","apiKey","tonCenterApiKey","bridgeData","feeNetwork","res","ton","wallets","walletAddress","BRIDGE","userTonBalance","userErcBalance","Date","now","burnWrappedToncoin","formatUnits","lockToken","hasData","isDropdownOpened","readonly","hasDropdown","id","$uuid","v1","inputmode","onInput","onFocus","onFocusout","onInputFocusOut","model","_vModelDynamic","for","onOptionClick","Array","find","elem","relatedTarget","parentNode","$el","isScrolled","_resolveDynamicComponent","isHistoryShown","parentUrl","showMenu","onDisconnectClick","disableDisconnect","pageYOffset","historyAddress","historyNetwork","query","$route","generateUrlWithQuery","historyUrl","forEach","netKey","net","subnetKey","subnet","onScroll","urlVars","encodeURIComponent","$router","resolve","disconnect","isLoading","providersList","onProviderClick","loadingProviderName","PROVIDERS","metamask","providerName","providerComponentName","ProviderComponent","rpcEndpoint","$te","PAIRS","BridgeProcessor","WalletsPopup","CustomInput","Header","Footer","head","gasPrice","explorerUrl","bridgeFeeAmount","isZero","fee","defaultGwei","toncoinFee","toncoinTransferTo_gasPrice","toncoinTransferFrom_gasPrice","tokenFee","tokenTransferTo_gasPrice","tokenTransferFrom_gasPrice","toFixed","MINIMUM_TONCOIN_AMOUNT","filter","oldVal","lodashDebounce","getPairGasFee","testnet","recover","recovery","isRecovery","fromNetwork","loadStateBridge","newTokenAddress","newToken","trim","switchDirection","toPair","supportsLocalStorage","raw","localStorage","getItem","parse","loadStateProcessor","bridgeProcessor","loadState","setItem","removeItem","isActive","response","fetch","getGasUrl","method","cache","ok","json","parseFloat","average","SafeGasPrice","markRaw","routes","path","component","BridgePageVue","router","createRouter","history","createWebHistory","createStore","mutations","getters","actions","createApp","App","use","UUID","i18n","store","mount","appName","appLogoUrl","tonTransferUrl","tonExplorerUrl","main","test","networks","bsc","getScript","src","Promise","reject","script","createElement","prior","getElementsByTagName","onload","onerror","insertBefore","parseChainId","webpackAsyncContext","req","__webpack_require__","o","code","ids","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","getter","__esModule","definition","defineProperty","enumerable","f","chunkId","all","reduce","promises","u","miniCssF","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","needAttach","scripts","getAttribute","charset","nc","setAttribute","onScriptComplete","prev","doneFns","removeChild","bind","appendChild","Symbol","toStringTag","nmd","paths","children","p","installedChunks","installedChunkData","promise","loadingEnded","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}