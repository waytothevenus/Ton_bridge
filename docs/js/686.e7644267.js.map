{"version":3,"file":"js/686.e7644267.js","mappings":"0QAcM,MAAOA,EAUXC,eAAA,mBATc,eASd,oBARe,eAQf,mBAP2B,OAO3B,wBANmB,KAMnB,sBALiB,IAKjB,2BAJqB,IAIrB,uBAHwB,OAGxB,8BACEC,KAAKC,SAAUC,EAAAA,EAAAA,KACfF,KAAKG,kBAAoBH,KAAKG,kBAAkBC,KAAKJ,MACrDA,KAAKK,eAAiBL,KAAKK,eAAeD,KAAKJ,MAC/CA,KAAKM,aAAeN,KAAKM,aAAaF,KAAKJ,MAC3CA,KAAKO,UAAYP,KAAKO,UAAUH,KAAKJ,KACtC,CAEDQ,GAA2BC,EAAUC,GACnC,OAAOV,KAAKC,QAAQO,GAAGC,EAAOC,EAC/B,CAEY,cAACC,GACZ,GAAIC,OAAOC,WAAiD,IAArCD,OAAOC,SAASC,iBACrCd,KAAKe,SAAWH,OAAOC,aAClB,CACL,UACQG,EAAAA,EAAAA,IAAU,sBAIjB,CAHC,MAAOC,GAEP,OADAC,EAAQC,IAAIF,EAAIG,UACT,CACR,CAED,MAAMC,EAAa,IAAIT,OAAOU,iBAAiBC,QAAQ,CACrDC,QAASC,EAAAA,EAAAA,QACTC,WAAYD,EAAAA,EAAAA,WACZE,UAAU,IAEZ3B,KAAKe,SAAWM,EAAWO,iBACzBjB,EAAOkB,YACPlB,EAAOmB,QAEV,CAED,UACQ9B,KAAKe,SAAUgB,QAStB,CARC,MAAOC,GAEP,GADAd,EAAQC,IAAIa,EAAEZ,SACI,sCAAdY,EAAEZ,QAGJ,OADAF,EAAQC,IAAIa,EAAEZ,UACP,EAET,MAAM,IAAIa,MAAMD,EAAEZ,QACnB,CAEDpB,KAAKkC,KAAO,IAAIC,IAAJ,CAASnC,KAAKe,UAE1B,MAAMqB,QAAiBpC,KAAKkC,KAAKG,IAAIC,cAgBrC,OAfAtC,KAAKuC,UAAYH,EAAS,GAE1BpC,KAAK8B,SAAUU,EAAAA,EAAAA,UAAmBxC,KAAKkC,KAAKG,IAAII,IAAIC,SAEhD1C,KAAK8B,UAAYnB,EAAOmB,eACpB9B,KAAK2C,YAAYhC,EAAOmB,SAGhC9B,KAAK4C,aAAc,EAEnB5C,KAAKe,SAAUP,GAAG,kBAAmBR,KAAKG,mBAC1CH,KAAKe,SAAUP,GAAG,eAAgBR,KAAKK,gBACvCL,KAAKe,SAAUP,GAAG,aAAcR,KAAKM,cACrCN,KAAKe,SAAUP,GAAG,UAAWR,KAAKO,YAE3B,CACR,CAEDJ,kBAAkBiC,GAChBlB,EAAQC,IAAI,iCAAkCnB,KAAKuC,WAC/CH,GAAYA,EAASS,OACvB7C,KAAKuC,UAAYH,EAAS,GAE1BpC,KAAKuC,UAAY,GAEnBrB,EAAQC,IAAI,iCAAkCnB,KAAKuC,UACpD,CAEDlC,eAAeyB,GACbZ,EAAQC,IAAI,6BAA8BnB,KAAK8B,SAC/C9B,KAAK8B,SAAUU,EAAAA,EAAAA,IAAaV,GAC5BZ,EAAQC,IAAI,6BAA8BnB,KAAK8B,QAChD,CAEDxB,aAAawC,EAAcC,GACzB/C,KAAK4C,aAAc,EACnB1B,EAAQC,IAAI,gBAEZnB,KAAKe,SAAUiC,IAAI,kBAAmBhD,KAAKG,mBAC3CH,KAAKe,SAAUiC,IAAI,eAAgBhD,KAAKK,gBACxCL,KAAKe,SAAUiC,IAAI,aAAchD,KAAKM,cACtCN,KAAKe,SAAUiC,IAAI,UAAWhD,KAAKO,WAEnCP,KAAKC,QAAQgD,KAAK,cAClBjD,KAAKC,QAAQiD,OAAS,CAAC,CACxB,CAED3C,YACEP,KAAK4C,aAAc,EACnB1B,EAAQC,IAAI,YACb,CAEgB,kBAACW,GAChB,UACQ9B,KAAKe,SAASoC,QAAQ,CAC1BC,OAAQ,6BACRzC,OAAQ,CAAC,CAAEmB,QAAS,KAAOA,EAAQuB,SAAS,OAK/C,CAHC,MAAOrB,GAEP,OADAd,EAAQC,IAAIa,EAAEZ,UACP,CACR,CACD,OAAO,CACR,CAEDkC,aACEtD,KAAKe,SAASwC,OACf,E,wDC5II,IAAIrD,EAAmB,KAAM,CAClCgD,OAAQ,CAAC,EACTD,KAAKxC,KAAU+C,GACb,IAAIC,EAAYzD,KAAKkD,OAAOzC,IAAU,GACtC,IAAK,IAAIiD,EAAI,EAAGb,EAASY,EAAUZ,OAAQa,EAAIb,EAAQa,IACrDD,EAAUC,MAAMF,EAEnB,EACDhD,GAAGC,EAAOkD,GAER,OADA3D,KAAKkD,OAAOzC,IAAQmD,KAAKD,KAAQ3D,KAAKkD,OAAOzC,GAAS,CAACkD,IAChD,KACL3D,KAAKkD,OAAOzC,GAAST,KAAKkD,OAAOzC,IAAQoD,QAAOH,GAAKC,IAAOD,GAA5D,CAEH,G","sources":["webpack://ton-token-bridge/./src/utils/providers/walletLink/index.ts","webpack://ton-token-bridge/./node_modules/nanoevents/index.js"],"sourcesContent":["import { createNanoEvents, Emitter } from \"nanoevents\";\nimport Web3 from \"web3\";\n\n// import { WalletLink as WalletLinkProvider } from 'walletlink';\nimport { PARAMS } from \"@/utils/constants\";\nimport { parseChainId } from \"@/utils/helpers\";\nimport { getScript } from \"@/utils/helpers\";\n\nimport { Provider } from \"../provider\";\n\ninterface Events {\n  disconnect: () => void;\n}\n\nexport class WalletLink implements Provider {\n  public name = \"walletLink\";\n  public title = \"WalletLink\";\n  public web3: Web3 | null = null;\n  public myAddress = \"\";\n  public chainId = 0;\n  public isConnected = false;\n  private provider: any = null;\n  private emitter: Emitter;\n\n  constructor() {\n    this.emitter = createNanoEvents<Events>();\n    this.onAccountsChanged = this.onAccountsChanged.bind(this);\n    this.onChainChanged = this.onChainChanged.bind(this);\n    this.onDisconnect = this.onDisconnect.bind(this);\n    this.onConnect = this.onConnect.bind(this);\n  }\n\n  on<E extends keyof Events>(event: E, callback: Events[E]) {\n    return this.emitter.on(event, callback);\n  }\n\n  async connect(params: any): Promise<boolean> {\n    if (window.ethereum && window.ethereum.isCoinbaseWallet === true) {\n      this.provider = window.ethereum;\n    } else {\n      try {\n        await getScript(\"walletLink@2.4.2.js\");\n      } catch (err: any) {\n        console.log(err.message);\n        return false;\n      }\n\n      const walletLink = new window.WalletLinkBundle.default({\n        appName: PARAMS.appName,\n        appLogoUrl: PARAMS.appLogoUrl,\n        darkMode: false,\n      });\n      this.provider = walletLink.makeWeb3Provider(\n        params.rpcEndpoint,\n        params.chainId\n      );\n    }\n\n    try {\n      await this.provider!.enable();\n    } catch (e: any) {\n      console.log(e.message);\n      if (e.message === \"User denied account authorization\") {\n        // soft error: User rejected the request.\n        console.log(e.message);\n        return false;\n      }\n      throw new Error(e.message);\n    }\n\n    this.web3 = new Web3(this.provider!);\n\n    const accounts = await this.web3.eth.getAccounts();\n    this.myAddress = accounts[0];\n\n    this.chainId = parseChainId(await this.web3.eth.net.getId());\n\n    if (this.chainId !== params.chainId) {\n      await this.switchChain(params.chainId);\n    }\n\n    this.isConnected = true;\n\n    this.provider!.on(\"accountsChanged\", this.onAccountsChanged);\n    this.provider!.on(\"chainChanged\", this.onChainChanged);\n    this.provider!.on(\"disconnect\", this.onDisconnect);\n    this.provider!.on(\"connect\", this.onConnect);\n\n    return true;\n  }\n\n  onAccountsChanged(accounts: Array<string>) {\n    console.log(\"account changed, old address: \", this.myAddress);\n    if (accounts && accounts.length) {\n      this.myAddress = accounts[0];\n    } else {\n      this.myAddress = \"\";\n    }\n    console.log(\"account changed, new address: \", this.myAddress);\n  }\n\n  onChainChanged(chainId: number | string) {\n    console.log(\"chain changed, old chain: \", this.chainId);\n    this.chainId = parseChainId(chainId);\n    console.log(\"chain changed, new chain: \", this.chainId);\n  }\n\n  onDisconnect(code: number, reason: string) {\n    this.isConnected = false;\n    console.log(\"disconnected\");\n\n    this.provider!.off(\"accountsChanged\", this.onAccountsChanged);\n    this.provider!.off(\"chainChanged\", this.onChainChanged);\n    this.provider!.off(\"disconnect\", this.onDisconnect);\n    this.provider!.off(\"connect\", this.onConnect);\n\n    this.emitter.emit(\"disconnect\");\n    this.emitter.events = {};\n  }\n\n  onConnect() {\n    this.isConnected = true;\n    console.log(\"connected\");\n  }\n\n  async switchChain(chainId: number): Promise<boolean> {\n    try {\n      await this.provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0x\" + chainId.toString(16) }],\n      });\n    } catch (e: any) {\n      console.log(e.message);\n      return false;\n    }\n    return true;\n  }\n\n  disconnect() {\n    this.provider.close();\n  }\n}\n","export let createNanoEvents = () => ({\n  events: {},\n  emit(event, ...args) {\n    let callbacks = this.events[event] || []\n    for (let i = 0, length = callbacks.length; i < length; i++) {\n      callbacks[i](...args)\n    }\n  },\n  on(event, cb) {\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\n    return () => {\n      this.events[event] = this.events[event]?.filter(i => cb !== i)\n    }\n  }\n})\n"],"names":["WalletLink","constructor","this","emitter","createNanoEvents","onAccountsChanged","bind","onChainChanged","onDisconnect","onConnect","on","event","callback","params","window","ethereum","isCoinbaseWallet","provider","getScript","err","console","log","message","walletLink","WalletLinkBundle","default","appName","PARAMS","appLogoUrl","darkMode","makeWeb3Provider","rpcEndpoint","chainId","enable","e","Error","web3","Web3","accounts","eth","getAccounts","myAddress","parseChainId","net","getId","switchChain","isConnected","length","code","reason","off","emit","events","request","method","toString","disconnect","close","args","callbacks","i","cb","push","filter"],"sourceRoot":""}